{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "amount",
          "type": "address"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040518060400160405280600d81526020016c283437b732a137ba2a37b5b2b760991b8152506040518060400160405280600381526020016214109560ea1b81525081600390805190602001906200006c92919062000288565b5080516200008290600490602084019062000288565b50506005805460ff19169055506200009a33620000c6565b620000c033620000ad6012600a62000443565b620000ba9060646200045b565b62000120565b620004d4565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200017c5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b6200018a6000838362000217565b80600260008282546200019e91906200047d565b90915550506001600160a01b03821660009081526020819052604081208054839290620001cd9084906200047d565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b620002216200023e565b620002398383836200023960201b620006521760201c565b505050565b60055460ff1615620002865760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640162000173565b565b828054620002969062000498565b90600052602060002090601f016020900481019282620002ba576000855562000305565b82601f10620002d557805160ff191683800117855562000305565b8280016001018555821562000305579182015b8281111562000305578251825591602001919060010190620002e8565b506200031392915062000317565b5090565b5b8082111562000313576000815560010162000318565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003855781600019048211156200036957620003696200032e565b808516156200037757918102915b93841c939080029062000349565b509250929050565b6000826200039e575060016200043d565b81620003ad575060006200043d565b8160018114620003c65760028114620003d157620003f1565b60019150506200043d565b60ff841115620003e557620003e56200032e565b50506001821b6200043d565b5060208310610133831016604e8410600b841016171562000416575081810a6200043d565b62000422838362000344565b80600019048211156200043957620004396200032e565b0290505b92915050565b60006200045460ff8416836200038d565b9392505050565b60008160001904831182151516156200047857620004786200032e565b500290565b600082198211156200049357620004936200032e565b500190565b600181811c90821680620004ad57607f821691505b602082108103620004ce57634e487b7160e01b600052602260045260246000fd5b50919050565b61103080620004e46000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80635c975abb116100b85780638da5cb5b1161007c5780638da5cb5b1461025a57806395d89b4114610283578063a457c2d71461028b578063a9059cbb1461029e578063dd62ed3e146102b1578063f2fde38b146102c457600080fd5b80635c975abb1461020357806370a082311461020e578063715018a61461023757806379cc67901461023f5780638456cb591461025257600080fd5b8063313ce567116100ff578063313ce567146101b157806339509351146101c05780633f4ba83a146101d357806340c10f19146101dd57806342966c68146101f057600080fd5b8063056e31c11461013c57806306fdde0314610164578063095ea7b31461017957806318160ddd1461018c57806323b872dd1461019e575b600080fd5b61014f61014a366004610e0f565b6102d7565b60405190151581526020015b60405180910390f35b61016c610333565b60405161015b9190610e52565b61014f610187366004610ea7565b6103c5565b6002545b60405190815260200161015b565b61014f6101ac366004610ed1565b6103dd565b6040516012815260200161015b565b61014f6101ce366004610ea7565b610401565b6101db610423565b005b6101db6101eb366004610ea7565b610435565b6101db6101fe366004610f0d565b6104a2565b60055460ff1661014f565b61019061021c366004610f26565b6001600160a01b031660009081526020819052604090205490565b6101db6104af565b6101db61024d366004610ea7565b6104c1565b6101db6104d6565b60055461010090046001600160a01b03166040516001600160a01b03909116815260200161015b565b61016c6104e6565b61014f610299366004610ea7565b6104f5565b61014f6102ac366004610ea7565b610570565b6101906102bf366004610f48565b6105b1565b6101db6102d2366004610f26565b6105dc565b60405162461bcd60e51b815260206004820152602360248201527f4e696365205472792c205374696c6c206e6f206d6f6e6b65792062757373696e60448201526265737360e81b60648201526000906084015b60405180910390fd5b60606003805461034290610f7b565b80601f016020809104026020016040519081016040528092919081815260200182805461036e90610f7b565b80156103bb5780601f10610390576101008083540402835291602001916103bb565b820191906000526020600020905b81548152906001019060200180831161039e57829003601f168201915b5050505050905090565b6000336103d3818585610657565b5060019392505050565b6000336103eb85828561077b565b6103f68585856107f5565b506001949350505050565b6000336103d381858561041483836105b1565b61041e9190610fcb565b610657565b61042b6109ce565b610433610a2e565b565b3360009081526006602052604090205460ff166104945760405162461bcd60e51b815260206004820152601860248201527f596f7520617265206e6f742070617274206f66207465616d0000000000000000604482015260640161032a565b61049e8282610a80565b5050565b6104ac3382610b6b565b50565b6104b76109ce565b6104336000610cc5565b6104cc82338361077b565b61049e8282610b6b565b6104de6109ce565b610433610d1f565b60606004805461034290610f7b565b6000338161050382866105b1565b9050838110156105635760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161032a565b6103f68286868403610657565b60405162461bcd60e51b81526020600482015260136024820152724e6f204d6f6e6b65792042757373696e65737360681b604482015260009060640161032a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105e46109ce565b6001600160a01b0381166106495760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161032a565b6104ac81610cc5565b505050565b6001600160a01b0383166106b95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161032a565b6001600160a01b03821661071a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161032a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061078784846105b1565b905060001981146107ef57818110156107e25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161032a565b6107ef8484848403610657565b50505050565b6001600160a01b0383166108595760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161032a565b6001600160a01b0382166108bb5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161032a565b6108c6838383610d5c565b6001600160a01b0383166000908152602081905260409020548181101561093e5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161032a565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610975908490610fcb565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109c191815260200190565b60405180910390a36107ef565b6005546001600160a01b036101009091041633146104335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161032a565b610a36610d64565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610ad65760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161032a565b610ae260008383610d5c565b8060026000828254610af49190610fcb565b90915550506001600160a01b03821660009081526020819052604081208054839290610b21908490610fcb565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610bcb5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161032a565b610bd782600083610d5c565b6001600160a01b03821660009081526020819052604090205481811015610c4b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161032a565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610c7a908490610fe3565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610d27610dad565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610a633390565b610652610dad565b60055460ff166104335760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161032a565b60055460ff16156104335760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161032a565b80356001600160a01b0381168114610e0a57600080fd5b919050565b600080600060608486031215610e2457600080fd5b610e2d84610df3565b9250610e3b60208501610df3565b9150610e4960408501610df3565b90509250925092565b600060208083528351808285015260005b81811015610e7f57858101830151858201604001528201610e63565b81811115610e91576000604083870101525b50601f01601f1916929092016040019392505050565b60008060408385031215610eba57600080fd5b610ec383610df3565b946020939093013593505050565b600080600060608486031215610ee657600080fd5b610eef84610df3565b9250610efd60208501610df3565b9150604084013590509250925092565b600060208284031215610f1f57600080fd5b5035919050565b600060208284031215610f3857600080fd5b610f4182610df3565b9392505050565b60008060408385031215610f5b57600080fd5b610f6483610df3565b9150610f7260208401610df3565b90509250929050565b600181811c90821680610f8f57607f821691505b602082108103610faf57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610fde57610fde610fb5565b500190565b600082821015610ff557610ff5610fb5565b50039056fea2646970667358221220bce69c475c09fa234b898dd4484705d53f067953580e1aa55afbc1e64a8c7b1e64736f6c634300080e0033",
    "sourceMap": "362:1158:19:-:0;;;609:100;;;;;;;;;;1978:113:9;;;;;;;;;;;;;-1:-1:-1;;;1978:113:9;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:9;;;2052:5;2044;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2067:17:9;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;996:7:8;:15;;-1:-1:-1;;996:15:8;;;-1:-1:-1;936:32:7;719:10:13;936:18:7;:32::i;:::-;663:39:19::1;669:10;687:14;3175:2:9::0;687::19::1;:14;:::i;:::-;681:20;::::0;:3:::1;:20;:::i;:::-;663:5;:39::i;:::-;362:1158:::0;;2433:187:7;2525:6;;;-1:-1:-1;;;;;2541:17:7;;;2525:6;2541:17;;;-1:-1:-1;;;;;;2541:17:7;;;;;;2573:40;;2525:6;;;;;;;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;8402:389:9:-;-1:-1:-1;;;;;8485:21:9;;8477:65;;;;-1:-1:-1;;;8477:65:9;;1904:2:21;8477:65:9;;;1886:21:21;1943:2;1923:18;;;1916:30;1982:33;1962:18;;;1955:61;2033:18;;8477:65:9;;;;;;;;;8553:49;8582:1;8586:7;8595:6;8553:20;:49::i;:::-;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:9;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:9;;2341:25:21;;;-1:-1:-1;;;;;8688:37:9;;;8705:1;;8688:37;;2329:2:21;2314:18;8688:37:9;;;;;;;8402:389;;:::o;947:195:19:-;1239:19:8;:17;:19::i;:::-;1091:44:19::1;1118:4;1124:2;1128:6;1091:26;;;;;:44;;:::i;:::-;947:195:::0;;;:::o;1767:106:8:-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:8;;2579:2:21;1828:38:8;;;2561:21:21;2618:2;2598:18;;;2591:30;-1:-1:-1;;;2637:18:21;;;2630:46;2693:18;;1828:38:8;2377:340:21;1828:38:8;1767:106::o;362:1158:19:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;362:1158:19;;;-1:-1:-1;362:1158:19;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:21;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:422;235:1;278:5;235:1;292:270;313:7;303:8;300:21;292:270;;;372:4;368:1;364:6;360:17;354:4;351:27;348:53;;;381:18;;:::i;:::-;431:7;421:8;417:22;414:55;;;451:16;;;;414:55;530:22;;;;490:15;;;;292:270;;;296:3;146:422;;;;;:::o;573:806::-;622:5;652:8;642:80;;-1:-1:-1;693:1:21;707:5;;642:80;741:4;731:76;;-1:-1:-1;778:1:21;792:5;;731:76;823:4;841:1;836:59;;;;909:1;904:130;;;;816:218;;836:59;866:1;857:10;;880:5;;;904:130;941:3;931:8;928:17;925:43;;;948:18;;:::i;:::-;-1:-1:-1;;1004:1:21;990:16;;1019:5;;816:218;;1118:2;1108:8;1105:16;1099:3;1093:4;1090:13;1086:36;1080:2;1070:8;1067:16;1062:2;1056:4;1053:12;1049:35;1046:77;1043:159;;;-1:-1:-1;1155:19:21;;;1187:5;;1043:159;1234:34;1259:8;1253:4;1234:34;:::i;:::-;1304:6;1300:1;1296:6;1292:19;1283:7;1280:32;1277:58;;;1315:18;;:::i;:::-;1353:20;;-1:-1:-1;573:806:21;;;;;:::o;1384:140::-;1442:5;1471:47;1512:4;1502:8;1498:19;1492:4;1471:47;:::i;:::-;1462:56;1384:140;-1:-1:-1;;;1384:140:21:o;1529:168::-;1569:7;1635:1;1631;1627:6;1623:14;1620:1;1617:21;1612:1;1605:9;1598:17;1594:45;1591:71;;;1642:18;;:::i;:::-;-1:-1:-1;1682:9:21;;1529:168::o;2062:128::-;2102:3;2133:1;2129:6;2126:1;2123:13;2120:39;;;2139:18;;:::i;:::-;-1:-1:-1;2175:9:21;;2062:128::o;2722:380::-;2801:1;2797:12;;;;2844;;;2865:61;;2919:4;2911:6;2907:17;2897:27;;2865:61;2972:2;2964:6;2961:14;2941:18;2938:38;2935:161;;3018:10;3013:3;3009:20;3006:1;2999:31;3053:4;3050:1;3043:15;3081:4;3078:1;3071:15;2935:161;;2722:380;;;:::o;:::-;362:1158:19;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "362:1158:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1343:175;;;;;;:::i;:::-;;:::i;:::-;;;696:14:21;;689:22;671:41;;659:2;644:18;1343:175:19;;;;;;;;2156:98:9;;;:::i;:::-;;;;;;;:::i;4433:197::-;;;;;;:::i;:::-;;:::i;3244:106::-;3331:12;;3244:106;;;1730:25:21;;;1718:2;1703:18;3244:106:9;1584:177:21;5192:286:9;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;2241:36:21;;2229:2;2214:18;3093:91:9;2099:184:21;5873:234:9;;;;;;:::i;:::-;;:::i;780:63:19:-;;;:::i;:::-;;849:92;;;;;;:::i;:::-;;:::i;578:89:11:-;;;;;;:::i;:::-;;:::i;1615:84:8:-;1685:7;;;;1615:84;;3408:125:9;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:9;3482:7;3508:18;;;;;;;;;;;;3408:125;1831:101:7;;;:::i;973:161:11:-;;;;;;:::i;:::-;;:::i;715:59:19:-;;;:::i;1201:85:7:-;1273:6;;;;;-1:-1:-1;;;;;1273:6:7;1201:85;;-1:-1:-1;;;;;2828:32:21;;;2810:51;;2798:2;2783:18;1201:85:7;2664:203:21;2367:102:9;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;1148:189:19:-;;;;;;:::i;:::-;;:::i;3976:149:9:-;;;;;;:::i;:::-;;:::i;2081:198:7:-;;;;;;:::i;:::-;;:::i;1343:175:19:-;1445:45;;-1:-1:-1;;;1445:45:19;;3339:2:21;1445:45:19;;;3321:21:21;3378:2;3358:18;;;3351:30;3417:34;3397:18;;;3390:62;-1:-1:-1;;;3468:18:21;;;3461:33;1430:4:19;;3511:19:21;;1445:45:19;;;;;;;;2156:98:9;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:13;4570:32:9;719:10:13;4586:7:9;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:9;;4433:197;-1:-1:-1;;;4433:197:9:o;5192:286::-;5319:4;719:10:13;5375:38:9;5391:4;719:10:13;5406:6:9;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:9;;5192:286;-1:-1:-1;;;;5192:286:9:o;5873:234::-;5961:4;719:10:13;6015:64:9;719:10:13;6031:7:9;6068:10;6040:25;719:10:13;6031:7:9;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;780:63:19:-;1094:13:7;:11;:13::i;:::-;826:10:19::1;:8;:10::i;:::-;780:63::o:0;849:92::-;545:10;528:28;;;;:16;:28;;;;;;;;520:65;;;;-1:-1:-1;;;520:65:19;;4393:2:21;520:65:19;;;4375:21:21;4432:2;4412:18;;;4405:30;4471:26;4451:18;;;4444:54;4515:18;;520:65:19;4191:348:21;520:65:19;917:17:::1;923:2;927:6;917:5;:17::i;:::-;849:92:::0;;:::o;578:89:11:-;633:27;719:10:13;653:6:11;633:5;:27::i;:::-;578:89;:::o;1831:101:7:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;973:161:11:-:0;1049:46;1065:7;719:10:13;1088:6:11;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;715:59:19:-;1094:13:7;:11;:13::i;:::-;759:8:19::1;:6;:8::i;2367:102:9:-:0;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:13;6687:4:9;6768:25;719:10:13;6785:7:9;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:9;;4746:2:21;6803:85:9;;;4728:21:21;4785:2;4765:18;;;4758:30;4824:34;4804:18;;;4797:62;-1:-1:-1;;;4875:18:21;;;4868:35;4920:19;;6803:85:9;4544:401:21;6803:85:9;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;1148:189:19:-;1280:29;;-1:-1:-1;;;1280:29:19;;5152:2:21;1280:29:19;;;5134:21:21;5191:2;5171:18;;;5164:30;-1:-1:-1;;;5210:18:21;;;5203:49;1260:4:19;;5269:18:21;;1280:29:19;4950:343:21;3976:149:9;-1:-1:-1;;;;;4091:18:9;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;2081:198:7:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:7;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:7;;5500:2:21;2161:73:7::1;::::0;::::1;5482:21:21::0;5539:2;5519:18;;;5512:30;5578:34;5558:18;;;5551:62;-1:-1:-1;;;5629:18:21;;;5622:36;5675:19;;2161:73:7::1;5298:402:21::0;2161:73:7::1;2244:28;2263:8;2244:18;:28::i;11786:121:9:-:0;;;;:::o;10110:370::-;-1:-1:-1;;;;;10241:19:9;;10233:68;;;;-1:-1:-1;;;10233:68:9;;5907:2:21;10233:68:9;;;5889:21:21;5946:2;5926:18;;;5919:30;5985:34;5965:18;;;5958:62;-1:-1:-1;;;6036:18:21;;;6029:34;6080:19;;10233:68:9;5705:400:21;10233:68:9;-1:-1:-1;;;;;10319:21:9;;10311:68;;;;-1:-1:-1;;;10311:68:9;;6312:2:21;10311:68:9;;;6294:21:21;6351:2;6331:18;;;6324:30;6390:34;6370:18;;;6363:62;-1:-1:-1;;;6441:18:21;;;6434:32;6483:19;;10311:68:9;6110:398:21;10311:68:9;-1:-1:-1;;;;;10390:18:9;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;1730:25:21;;;10441:32:9;;1703:18:21;10441:32:9;;;;;;;10110:370;;;:::o;10761:441::-;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:9;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:9;;6715:2:21;11010:68:9;;;6697:21:21;6754:2;6734:18;;;6727:30;6793:31;6773:18;;;6766:59;6842:18;;11010:68:9;6513:353:21;11010:68:9;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:9;;7593:68;;;;-1:-1:-1;;;7593:68:9;;7073:2:21;7593:68:9;;;7055:21:21;7112:2;7092:18;;;7085:30;7151:34;7131:18;;;7124:62;-1:-1:-1;;;7202:18:21;;;7195:35;7247:19;;7593:68:9;6871:401:21;7593:68:9;-1:-1:-1;;;;;7679:16:9;;7671:64;;;;-1:-1:-1;;;7671:64:9;;7479:2:21;7671:64:9;;;7461:21:21;7518:2;7498:18;;;7491:30;7557:34;7537:18;;;7530:62;-1:-1:-1;;;7608:18:21;;;7601:33;7651:19;;7671:64:9;7277:399:21;7671:64:9;7746:38;7767:4;7773:2;7777:6;7746:20;:38::i;:::-;-1:-1:-1;;;;;7817:15:9;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:9;;7883:2:21;7842:72:9;;;7865:21:21;7922:2;7902:18;;;7895:30;7961:34;7941:18;;;7934:62;-1:-1:-1;;;8012:18:21;;;8005:36;8058:19;;7842:72:9;7681:402:21;7842:72:9;-1:-1:-1;;;;;7948:15:9;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:9;8054:4;-1:-1:-1;;;;;8045:26:9;;8064:6;8045:26;;;;1730:25:21;;1718:2;1703:18;;1584:177;8045:26:9;;;;;;;;8082:37;11786:121;1359:130:7;1273:6;;-1:-1:-1;;;;;1273:6:7;;;;;719:10:13;1422:23:7;1414:68;;;;-1:-1:-1;;;1414:68:7;;8290:2:21;1414:68:7;;;8272:21:21;;;8309:18;;;8302:30;8368:34;8348:18;;;8341:62;8420:18;;1414:68:7;8088:356:21;2433:117:8;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:8::1;::::0;;2521:22:::1;719:10:13::0;2530:12:8::1;2521:22;::::0;-1:-1:-1;;;;;2828:32:21;;;2810:51;;2798:2;2783:18;2521:22:8::1;;;;;;;2433:117::o:0;8402:389:9:-;-1:-1:-1;;;;;8485:21:9;;8477:65;;;;-1:-1:-1;;;8477:65:9;;8651:2:21;8477:65:9;;;8633:21:21;8690:2;8670:18;;;8663:30;8729:33;8709:18;;;8702:61;8780:18;;8477:65:9;8449:355:21;8477:65:9;8553:49;8582:1;8586:7;8595:6;8553:20;:49::i;:::-;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:9;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:9;;1730:25:21;;;-1:-1:-1;;;;;8688:37:9;;;8705:1;;8688:37;;1718:2:21;1703:18;8688:37:9;;;;;;;849:92:19;;:::o;9111:576:9:-;-1:-1:-1;;;;;9194:21:9;;9186:67;;;;-1:-1:-1;;;9186:67:9;;9011:2:21;9186:67:9;;;8993:21:21;9050:2;9030:18;;;9023:30;9089:34;9069:18;;;9062:62;-1:-1:-1;;;9140:18:21;;;9133:31;9181:19;;9186:67:9;8809:397:21;9186:67:9;9264:49;9285:7;9302:1;9306:6;9264:20;:49::i;:::-;-1:-1:-1;;;;;9349:18:9;;9324:22;9349:18;;;;;;;;;;;9385:24;;;;9377:71;;;;-1:-1:-1;;;9377:71:9;;9413:2:21;9377:71:9;;;9395:21:21;9452:2;9432:18;;;9425:30;9491:34;9471:18;;;9464:62;-1:-1:-1;;;9542:18:21;;;9535:32;9584:19;;9377:71:9;9211:398:21;9377:71:9;-1:-1:-1;;;;;9482:18:9;;:9;:18;;;;;;;;;;9503:23;;;9482:44;;9546:12;:22;;9520:6;;9482:9;9546:22;;9520:6;;9546:22;:::i;:::-;;;;-1:-1:-1;;9584:37:9;;1730:25:21;;;9610:1:9;;-1:-1:-1;;;;;9584:37:9;;;;;1718:2:21;1703:18;9584:37:9;;;;;;;11786:121;;;:::o;2433:187:7:-;2525:6;;;-1:-1:-1;;;;;2541:17:7;;;2525:6;2541:17;;;-1:-1:-1;;;;;;2541:17:7;;;;;;2573:40;;2525:6;;;;;;;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;2186:115:8:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:8::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:13::0;;640:96;947:195:19;1239:19:8;:17;:19::i;1945:106::-;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:8;;9946:2:21;2003:41:8;;;9928:21:21;9985:2;9965:18;;;9958:30;-1:-1:-1;;;10004:18:21;;;9997:50;10064:18;;2003:41:8;9744:344:21;1767:106:8;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:8;;10295:2:21;1828:38:8;;;10277:21:21;10334:2;10314:18;;;10307:30;-1:-1:-1;;;10353:18:21;;;10346:46;10409:18;;1828:38:8;10093:340:21;14:173;82:20;;-1:-1:-1;;;;;131:31:21;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:334::-;269:6;277;285;338:2;326:9;317:7;313:23;309:32;306:52;;;354:1;351;344:12;306:52;377:29;396:9;377:29;:::i;:::-;367:39;;425:38;459:2;448:9;444:18;425:38;:::i;:::-;415:48;;482:38;516:2;505:9;501:18;482:38;:::i;:::-;472:48;;192:334;;;;;:::o;723:597::-;835:4;864:2;893;882:9;875:21;925:6;919:13;968:6;963:2;952:9;948:18;941:34;993:1;1003:140;1017:6;1014:1;1011:13;1003:140;;;1112:14;;;1108:23;;1102:30;1078:17;;;1097:2;1074:26;1067:66;1032:10;;1003:140;;;1161:6;1158:1;1155:13;1152:91;;;1231:1;1226:2;1217:6;1206:9;1202:22;1198:31;1191:42;1152:91;-1:-1:-1;1304:2:21;1283:15;-1:-1:-1;;1279:29:21;1264:45;;;;1311:2;1260:54;;723:597;-1:-1:-1;;;723:597:21:o;1325:254::-;1393:6;1401;1454:2;1442:9;1433:7;1429:23;1425:32;1422:52;;;1470:1;1467;1460:12;1422:52;1493:29;1512:9;1493:29;:::i;:::-;1483:39;1569:2;1554:18;;;;1541:32;;-1:-1:-1;;;1325:254:21:o;1766:328::-;1843:6;1851;1859;1912:2;1900:9;1891:7;1887:23;1883:32;1880:52;;;1928:1;1925;1918:12;1880:52;1951:29;1970:9;1951:29;:::i;:::-;1941:39;;1999:38;2033:2;2022:9;2018:18;1999:38;:::i;:::-;1989:48;;2084:2;2073:9;2069:18;2056:32;2046:42;;1766:328;;;;;:::o;2288:180::-;2347:6;2400:2;2388:9;2379:7;2375:23;2371:32;2368:52;;;2416:1;2413;2406:12;2368:52;-1:-1:-1;2439:23:21;;2288:180;-1:-1:-1;2288:180:21:o;2473:186::-;2532:6;2585:2;2573:9;2564:7;2560:23;2556:32;2553:52;;;2601:1;2598;2591:12;2553:52;2624:29;2643:9;2624:29;:::i;:::-;2614:39;2473:186;-1:-1:-1;;;2473:186:21:o;2872:260::-;2940:6;2948;3001:2;2989:9;2980:7;2976:23;2972:32;2969:52;;;3017:1;3014;3007:12;2969:52;3040:29;3059:9;3040:29;:::i;:::-;3030:39;;3088:38;3122:2;3111:9;3107:18;3088:38;:::i;:::-;3078:48;;2872:260;;;;;:::o;3541:380::-;3620:1;3616:12;;;;3663;;;3684:61;;3738:4;3730:6;3726:17;3716:27;;3684:61;3791:2;3783:6;3780:14;3760:18;3757:38;3754:161;;3837:10;3832:3;3828:20;3825:1;3818:31;3872:4;3869:1;3862:15;3900:4;3897:1;3890:15;3754:161;;3541:380;;;:::o;3926:127::-;3987:10;3982:3;3978:20;3975:1;3968:31;4018:4;4015:1;4008:15;4042:4;4039:1;4032:15;4058:128;4098:3;4129:1;4125:6;4122:1;4119:13;4116:39;;;4135:18;;:::i;:::-;-1:-1:-1;4171:9:21;;4058:128::o;9614:125::-;9654:4;9682:1;9679;9676:8;9673:34;;;9687:18;;:::i;:::-;-1:-1:-1;9724:9:21;;9614:125::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "renounceOwnership()": "715018a6",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,address)": "056e31c1",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "unpause()": "3f4ba83a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"amount\",\"type\":\"address\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/PhoneBotToken.sol\":\"PhoneBotToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/PhoneBotToken.sol\":{\"keccak256\":\"0xab450acb8a694554515f8aaadbe17c621dc00554997e13a8b2e13526a0e9a966\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22223981ff990d3ea0c0690c87c159006a207653514b30732164758e7a336f7c\",\"dweb:/ipfs/QmR3TseNYHmaaqmq3EiTVmQn8kfG1G8v5KhsmfJtjfzmVD\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.14+commit.80d49f37"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "amount",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(uint256)": {
            "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
          },
          "burnFrom(address,uint256)": {
            "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/PhoneBotToken.sol": "PhoneBotToken"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "keccak256": "0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b",
        "urls": [
          "bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f",
          "dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/PhoneBotToken.sol": {
        "keccak256": "0xab450acb8a694554515f8aaadbe17c621dc00554997e13a8b2e13526a0e9a966",
        "urls": [
          "bzz-raw://22223981ff990d3ea0c0690c87c159006a207653514b30732164758e7a336f7c",
          "dweb:/ipfs/QmR3TseNYHmaaqmq3EiTVmQn8kfG1G8v5KhsmfJtjfzmVD"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/PhoneBotToken.sol",
    "id": 25024,
    "exportedSymbols": {
      "Context": [
        24202
      ],
      "ERC20": [
        24033
      ],
      "ERC20Burnable": [
        24155
      ],
      "IERC20": [
        24111
      ],
      "IERC20Metadata": [
        24180
      ],
      "Ownable": [
        23339
      ],
      "Pausable": [
        23447
      ],
      "PhoneBotToken": [
        25023
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1489:19",
    "nodes": [
      {
        "id": 24886,
        "nodeType": "PragmaDirective",
        "src": "32:23:19",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 24887,
        "nodeType": "ImportDirective",
        "src": "57:71:19",
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25024,
        "sourceUnit": 24034,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24888,
        "nodeType": "ImportDirective",
        "src": "129:90:19",
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25024,
        "sourceUnit": 24156,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24889,
        "nodeType": "ImportDirective",
        "src": "220:71:19",
        "absolutePath": "node_modules/@openzeppelin/contracts/security/Pausable.sol",
        "file": "../node_modules/@openzeppelin/contracts/security/Pausable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25024,
        "sourceUnit": 23448,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24890,
        "nodeType": "ImportDirective",
        "src": "292:68:19",
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25024,
        "sourceUnit": 23340,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25023,
        "nodeType": "ContractDefinition",
        "src": "362:1158:19",
        "nodes": [
          {
            "id": 24902,
            "nodeType": "VariableDeclaration",
            "src": "434:50:19",
            "constant": false,
            "mutability": "mutable",
            "name": "teamAccessRecord",
            "nameLocation": "468:16:19",
            "scope": 25023,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 24901,
              "keyType": {
                "id": 24899,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "442:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "434:24:19",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 24900,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "453:4:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 24914,
            "nodeType": "ModifierDefinition",
            "src": "490:113:19",
            "body": {
              "id": 24913,
              "nodeType": "Block",
              "src": "510:93:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 24905,
                          "name": "teamAccessRecord",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24902,
                          "src": "528:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 24908,
                        "indexExpression": {
                          "expression": {
                            "id": 24906,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "545:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 24907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "545:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "528:28:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520617265206e6f742070617274206f66207465616d",
                        "id": 24909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "558:26:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2e8685865be53f1749cd0912ab9598219b0cb88d88b726989ef8c520a2bd297",
                          "typeString": "literal_string \"You are not part of team\""
                        },
                        "value": "You are not part of team"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2e8685865be53f1749cd0912ab9598219b0cb88d88b726989ef8c520a2bd297",
                          "typeString": "literal_string \"You are not part of team\""
                        }
                      ],
                      "id": 24904,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "520:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "520:65:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24911,
                  "nodeType": "ExpressionStatement",
                  "src": "520:65:19"
                },
                {
                  "id": 24912,
                  "nodeType": "PlaceholderStatement",
                  "src": "595:1:19"
                }
              ]
            },
            "name": "onlyTeam",
            "nameLocation": "499:8:19",
            "parameters": {
              "id": 24903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "507:2:19"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 24933,
            "nodeType": "FunctionDefinition",
            "src": "609:100:19",
            "body": {
              "id": 24932,
              "nodeType": "Block",
              "src": "653:56:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 24922,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "669:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 24923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "669:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 24929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "313030",
                          "id": 24924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "681:3:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 24928,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 24925,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "687:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 24926,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23522,
                              "src": "691:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                "typeString": "function () view returns (uint8)"
                              }
                            },
                            "id": 24927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "691:10:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "687:14:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "681:20:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24921,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23850,
                      "src": "663:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 24930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "663:39:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24931,
                  "nodeType": "ExpressionStatement",
                  "src": "663:39:19"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "50686f6e65426f74546f6b656e",
                    "id": 24917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "629:15:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_a7bbcaf406fc77e82d5a220fe689ef768f5128758ba4c49a7c96c23b1c28a25c",
                      "typeString": "literal_string \"PhoneBotToken\""
                    },
                    "value": "PhoneBotToken"
                  },
                  {
                    "hexValue": "504254",
                    "id": 24918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "646:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_eb9e01af9a7abb8572224bf91aad93d40c0f170def898d54d6b13ce74da49608",
                      "typeString": "literal_string \"PBT\""
                    },
                    "value": "PBT"
                  }
                ],
                "id": 24919,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 24916,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24033,
                  "src": "623:5:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "623:29:19"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 24915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "620:2:19"
            },
            "returnParameters": {
              "id": 24920,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "653:0:19"
            },
            "scope": 25023,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24942,
            "nodeType": "FunctionDefinition",
            "src": "715:59:19",
            "body": {
              "id": 24941,
              "nodeType": "Block",
              "src": "749:25:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 24938,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23430,
                      "src": "759:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 24939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "759:8:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24940,
                  "nodeType": "ExpressionStatement",
                  "src": "759:8:19"
                }
              ]
            },
            "functionSelector": "8456cb59",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 24936,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24935,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23258,
                  "src": "739:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "739:9:19"
              }
            ],
            "name": "pause",
            "nameLocation": "724:5:19",
            "parameters": {
              "id": 24934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "729:2:19"
            },
            "returnParameters": {
              "id": 24937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "749:0:19"
            },
            "scope": 25023,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24951,
            "nodeType": "FunctionDefinition",
            "src": "780:63:19",
            "body": {
              "id": 24950,
              "nodeType": "Block",
              "src": "816:27:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 24947,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23446,
                      "src": "826:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 24948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "826:10:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24949,
                  "nodeType": "ExpressionStatement",
                  "src": "826:10:19"
                }
              ]
            },
            "functionSelector": "3f4ba83a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 24945,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24944,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23258,
                  "src": "806:9:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "806:9:19"
              }
            ],
            "name": "unpause",
            "nameLocation": "789:7:19",
            "parameters": {
              "id": 24943,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "796:2:19"
            },
            "returnParameters": {
              "id": 24946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "816:0:19"
            },
            "scope": 25023,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24966,
            "nodeType": "FunctionDefinition",
            "src": "849:92:19",
            "body": {
              "id": 24965,
              "nodeType": "Block",
              "src": "907:34:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24961,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24953,
                        "src": "923:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24962,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24955,
                        "src": "927:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24960,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23850,
                      "src": "917:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 24963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "917:17:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24964,
                  "nodeType": "ExpressionStatement",
                  "src": "917:17:19"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 24958,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24957,
                  "name": "onlyTeam",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24914,
                  "src": "898:8:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "898:8:19"
              }
            ],
            "name": "mint",
            "nameLocation": "858:4:19",
            "parameters": {
              "id": 24956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24953,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "871:2:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 24966,
                  "src": "863:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24955,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "883:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 24966,
                  "src": "875:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "875:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "862:28:19"
            },
            "returnParameters": {
              "id": 24959,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "907:0:19"
            },
            "scope": 25023,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24987,
            "nodeType": "FunctionDefinition",
            "src": "947:195:19",
            "body": {
              "id": 24986,
              "nodeType": "Block",
              "src": "1081:61:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24981,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24968,
                        "src": "1118:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24982,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24970,
                        "src": "1124:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24983,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24972,
                        "src": "1128:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 24978,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1091:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PhoneBotToken_$25023_$",
                          "typeString": "type(contract super PhoneBotToken)"
                        }
                      },
                      "id": 24980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24021,
                      "src": "1091:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 24984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1091:44:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24985,
                  "nodeType": "ExpressionStatement",
                  "src": "1091:44:19"
                }
              ]
            },
            "baseFunctions": [
              24021
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 24976,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24975,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23374,
                  "src": "1067:13:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "1067:13:19"
              }
            ],
            "name": "_beforeTokenTransfer",
            "nameLocation": "956:20:19",
            "overrides": {
              "id": 24974,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1058:8:19"
            },
            "parameters": {
              "id": 24973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24968,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "994:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 24987,
                  "src": "986:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "986:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24970,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1016:2:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 24987,
                  "src": "1008:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24969,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1008:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24972,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1036:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 24987,
                  "src": "1028:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24971,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1028:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "976:72:19"
            },
            "returnParameters": {
              "id": 24977,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1081:0:19"
            },
            "scope": 25023,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 25004,
            "nodeType": "FunctionDefinition",
            "src": "1148:189:19",
            "body": {
              "id": 25003,
              "nodeType": "Block",
              "src": "1270:67:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4e6f204d6f6e6b65792042757373696e657373",
                        "id": 24998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1287:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db6cc5d4f8cefd85948960158b3aa84a9851df895e237ac79578c415d6456716",
                          "typeString": "literal_string \"No Monkey Bussiness\""
                        },
                        "value": "No Monkey Bussiness"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_db6cc5d4f8cefd85948960158b3aa84a9851df895e237ac79578c415d6456716",
                          "typeString": "literal_string \"No Monkey Bussiness\""
                        }
                      ],
                      "id": 24997,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "1280:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 24999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1280:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25000,
                  "nodeType": "ExpressionStatement",
                  "src": "1280:29:19"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 25001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1326:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 24996,
                  "id": 25002,
                  "nodeType": "Return",
                  "src": "1319:11:19"
                }
              ]
            },
            "baseFunctions": [
              23571
            ],
            "functionSelector": "a9059cbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "1157:8:19",
            "overrides": {
              "id": 24993,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1234:8:19"
            },
            "parameters": {
              "id": 24992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24989,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1174:2:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25004,
                  "src": "1166:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1166:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24991,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1186:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25004,
                  "src": "1178:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24990,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1178:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1165:29:19"
            },
            "returnParameters": {
              "id": 24996,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24995,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25004,
                  "src": "1260:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24994,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1260:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1259:6:19"
            },
            "scope": 25023,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 25022,
            "nodeType": "FunctionDefinition",
            "src": "1343:175:19",
            "body": {
              "id": 25021,
              "nodeType": "Block",
              "src": "1435:83:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4e696365205472792c205374696c6c206e6f206d6f6e6b65792062757373696e657373",
                        "id": 25016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1452:37:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f93da442cfb56129ee4164f5edc5eade858bccb8b10d7714fbba7c99e019af1",
                          "typeString": "literal_string \"Nice Try, Still no monkey bussiness\""
                        },
                        "value": "Nice Try, Still no monkey bussiness"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_5f93da442cfb56129ee4164f5edc5eade858bccb8b10d7714fbba7c99e019af1",
                          "typeString": "literal_string \"Nice Try, Still no monkey bussiness\""
                        }
                      ],
                      "id": 25015,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "1445:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 25017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1445:45:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25018,
                  "nodeType": "ExpressionStatement",
                  "src": "1445:45:19"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 25019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1507:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 25014,
                  "id": 25020,
                  "nodeType": "Return",
                  "src": "1500:11:19"
                }
              ]
            },
            "functionSelector": "056e31c1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "1352:12:19",
            "parameters": {
              "id": 25011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25006,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1373:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25022,
                  "src": "1365:12:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25005,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1365:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25008,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1387:2:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25022,
                  "src": "1379:10:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1379:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25010,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1399:6:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25022,
                  "src": "1391:14:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25009,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1364:42:19"
            },
            "returnParameters": {
              "id": 25014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25013,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 25022,
                  "src": "1430:4:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 25012,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1430:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1429:6:19"
            },
            "scope": 25023,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24891,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24033,
              "src": "388:5:19"
            },
            "id": 24892,
            "nodeType": "InheritanceSpecifier",
            "src": "388:5:19"
          },
          {
            "baseName": {
              "id": 24893,
              "name": "ERC20Burnable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24155,
              "src": "395:13:19"
            },
            "id": 24894,
            "nodeType": "InheritanceSpecifier",
            "src": "395:13:19"
          },
          {
            "baseName": {
              "id": 24895,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23447,
              "src": "410:8:19"
            },
            "id": 24896,
            "nodeType": "InheritanceSpecifier",
            "src": "410:8:19"
          },
          {
            "baseName": {
              "id": 24897,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 23339,
              "src": "420:7:19"
            },
            "id": 24898,
            "nodeType": "InheritanceSpecifier",
            "src": "420:7:19"
          }
        ],
        "canonicalName": "PhoneBotToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25023,
          23339,
          23447,
          24155,
          24033,
          24180,
          24111,
          24202
        ],
        "name": "PhoneBotToken",
        "nameLocation": "371:13:19",
        "scope": 25024,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 19
}