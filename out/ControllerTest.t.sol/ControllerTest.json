{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Pb",
      "outputs": [
        {
          "internalType": "contract PhoneBotToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "contract Controller",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_team",
          "type": "address"
        }
      ],
      "name": "testAddTeam",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBalanceOfOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCheckOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_team",
          "type": "address"
        }
      ],
      "name": "testRemoveTeamAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "testTransferTokenOutside",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805462ff00ff19166201000117905534801561002157600080fd5b50613efd806100316000396000f3fe60806040523480156200001157600080fd5b5060043610620000c35760003560e01c80639176fa5b116200007a5780639176fa5b1462000154578063ba414fa6146200016b578063dc3b20b81462000186578063f77c47911462000190578063f8ccbf4714620001a4578063fa7626d414620001b857600080fd5b80630a9254e414620000c8578063365ec7f214620000d45780633a76846314620000eb5780636c976dfe146200011f5780637484c04014620001365780638347b0c91462000140575b600080fd5b620000d2620001c6565b005b620000d2620000e536600462001393565b62000332565b6200010260008051602062003ea883398151915281565b6040516001600160a01b0390911681526020015b60405180910390f35b620000d262000130366004620013c3565b62000a9b565b620000d262000cc3565b60095462000102906001600160a01b031681565b620000d262000165366004620013c3565b62000d8d565b6200017562000ed0565b604051901515815260200162000116565b620000d262000ffb565b60085462000102906001600160a01b031681565b600054620001759062010000900460ff1681565b600054620001759060ff1681565b6040516303223eab60e11b81526001600482015260008051602062003ea8833981519152906306447d5690602401600060405180830381600087803b1580156200020f57600080fd5b505af115801562000224573d6000803e3d6000fd5b50505050604051620002369062001377565b604051809103906000f08015801562000253573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b03929092169182179055604051620002819062001385565b6001600160a01b039091168152602001604051809103906000f080158015620002ae573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055604080516390c5013b60e01b8152905160008051602062003ea8833981519152916390c5013b91600480830192600092919082900301818387803b1580156200031757600080fd5b505af11580156200032c573d6000803e3d6000fd5b50505050565b604051632631f2b160e11b81526127108210600482015260008051602062003ea883398151915290634c63e56290602401600060405180830381600087803b1580156200037e57600080fd5b505af115801562000393573d6000803e3d6000fd5b5050604051632631f2b160e11b8152831515600482015260008051602062003ea88339815191529250634c63e5629150602401600060405180830381600087803b158015620003e157600080fd5b505af1158015620003f6573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600482015260008051602062003ea883398151915292506306447d569150602401600060405180830381600087803b1580156200044357600080fd5b505af115801562000458573d6000803e3d6000fd5b50506008546040516308695b4160e01b8152600a60048201526001600160a01b0390911692506308695b419150602401600060405180830381600087803b158015620004a357600080fd5b505af1158015620004b8573d6000803e3d6000fd5b50506009546040516303b2eebd60e51b8152600260048201526001600160a01b03909116925063765dd7a09150602401600060405180830381600087803b1580156200050357600080fd5b505af115801562000518573d6000803e3d6000fd5b505060095460085460405163b11ce2db60e01b81526001600160a01b0391821660048201529116925063b11ce2db9150602401600060405180830381600087803b1580156200056657600080fd5b505af11580156200057b573d6000803e3d6000fd5b5050600954604051635363afd160e11b8152600260048201526001600160a01b03909116925063a6c75fa29150602401602060405180830381865afa158015620005c9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005ef9190620013ea565b620005fe57620005fe6200140e565b604080516390c5013b60e01b8152905160008051602062003ea8833981519152916390c5013b91600480830192600092919082900301818387803b1580156200064657600080fd5b505af11580156200065b573d6000803e3d6000fd5b50506040516303223eab60e11b81526002600482015260008051602062003ea883398151915292506306447d569150602401600060405180830381600087803b158015620006a857600080fd5b505af1158015620006bd573d6000803e3d6000fd5b50506009546040516340c10f1960e01b81526003600482015261271060248201526001600160a01b0390911692506340c10f199150604401600060405180830381600087803b1580156200071057600080fd5b505af115801562000725573d6000803e3d6000fd5b505060085460405163f8b2cb4f60e01b815260036004820152620007a793506001600160a01b03909116915063f8b2cb4f90602401602060405180830381865afa15801562000778573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200079e919062001424565b61271062001079565b604080516390c5013b60e01b8152905160008051602062003ea8833981519152916390c5013b91600480830192600092919082900301818387803b158015620007ef57600080fd5b505af115801562000804573d6000803e3d6000fd5b50506040516303223eab60e11b81526003600482015260008051602062003ea883398151915292506306447d569150602401600060405180830381600087803b1580156200085157600080fd5b505af115801562000866573d6000803e3d6000fd5b5050600854604051630b54dd7160e41b8152600480820152602481018590526001600160a01b03909116925063b54dd7109150604401600060405180830381600087803b158015620008b757600080fd5b505af1158015620008cc573d6000803e3d6000fd5b505050506000600860009054906101000a90046001600160a01b03166001600160a01b0316630cda45c86040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000926573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200094c919062001424565b905060006127106200095f838562001454565b6200096b919062001476565b905060006200097d8361271062001499565b9050600061271062000990838762001454565b6200099c919062001476565b60085460405163f8b2cb4f60e01b815260048082015291925062000a1a916001600160a01b039091169063f8b2cb4f90602401602060405180830381865afa158015620009ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a13919062001424565b8262001079565b60085460405163f8b2cb4f60e01b8152600a600482015262000a94916001600160a01b03169063f8b2cb4f90602401602060405180830381865afa15801562000a67573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a8d919062001424565b8462001079565b5050505050565b6040516303223eab60e11b81526001600482015260008051602062003ea8833981519152906306447d5690602401600060405180830381600087803b15801562000ae457600080fd5b505af115801562000af9573d6000803e3d6000fd5b50506009546040516303b2eebd60e51b81526001600160a01b038581166004830152909116925063765dd7a09150602401600060405180830381600087803b15801562000b4557600080fd5b505af115801562000b5a573d6000803e3d6000fd5b5050600954604051635363afd160e11b81526001600160a01b038581166004830152909116925063a6c75fa29150602401602060405180830381865afa15801562000ba9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bcf9190620013ea565b62000bde5762000bde6200140e565b60095460405163d7992d4d60e01b81526001600160a01b0383811660048301529091169063d7992d4d90602401600060405180830381600087803b15801562000c2657600080fd5b505af115801562000c3b573d6000803e3d6000fd5b5050600954604051635363afd160e11b81526001600160a01b038581166004830152909116925063a6c75fa29150602401602060405180830381865afa15801562000c8a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cb09190620013ea565b1562000cc05762000cc06200140e565b50565b60095460408051638da5cb5b60e01b8152905162000d3e926001600160a01b031691638da5cb5b9160048083019260209291908290030181865afa15801562000d10573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d369190620014b3565b600162001174565b60085460408051638da5cb5b60e01b8152905162000d8b926001600160a01b031691638da5cb5b9160048083019260209291908290030181865afa15801562000d10573d6000803e3d6000fd5b565b6040516303223eab60e11b81526001600482015260008051602062003ea8833981519152906306447d5690602401600060405180830381600087803b15801562000dd657600080fd5b505af115801562000deb573d6000803e3d6000fd5b50506009546040516303b2eebd60e51b81526001600160a01b038581166004830152909116925063765dd7a09150602401600060405180830381600087803b15801562000e3757600080fd5b505af115801562000e4c573d6000803e3d6000fd5b5050600954604051635363afd160e11b81526001600160a01b038581166004830152909116925063a6c75fa29150602401602060405180830381865afa15801562000e9b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ec19190620013ea565b62000cc05762000cc06200140e565b60008054610100900460ff161562000ef15750600054610100900460ff1690565b600060008051602062003ea88339815191523b1562000ff6576040805160008051602062003ea8833981519152602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000f78917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001511565b60408051601f198184030181529082905262000f949162001537565b6000604051808303816000865af19150503d806000811462000fd3576040519150601f19603f3d011682016040523d82523d6000602084013e62000fd8565b606091505b509150508080602001905181019062000ff29190620013ea565b9150505b919050565b6009546040516370a0823160e01b81526001600482015262000d8b916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001048573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200106e919062001424565b68056bc75e2d631000005b80821462001170577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620010ec9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162001125919062001545565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516200115e91906200157e565b60405180910390a1620011706200126e565b5050565b806001600160a01b0316826001600160a01b03161462001170577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620011fc9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f81604051620012359190620015a9565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f826040516200115e9190620015ee565b60008051602062003ea88339815191523b1562001366576040805160008051602062003ea8833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262001301929160200162001511565b60408051601f19818403018152908290526200131d9162001537565b6000604051808303816000865af19150503d80600081146200135c576040519150601f19603f3d011682016040523d82523d6000602084013e62001361565b606091505b505050505b6000805461ff001916610100179055565b61190d806200161a83390190565b610f818062002f2783390190565b600060208284031215620013a657600080fd5b5035919050565b6001600160a01b038116811462000cc057600080fd5b600060208284031215620013d657600080fd5b8135620013e381620013ad565b9392505050565b600060208284031215620013fd57600080fd5b81518015158114620013e357600080fd5b634e487b7160e01b600052600160045260246000fd5b6000602082840312156200143757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156200147157620014716200143e565b500290565b6000826200149457634e487b7160e01b600052601260045260246000fd5b500490565b600082821015620014ae57620014ae6200143e565b500390565b600060208284031215620014c657600080fd5b8151620013e381620013ad565b6000815160005b81811015620014f65760208185018101518683015201620014da565b8181111562001506576000828601525b509290920192915050565b6001600160e01b03198316815260006200152f6004830184620014d3565b949350505050565b6000620013e38284620014d3565b6040815260006200157060408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b6040815260006200157060408301600a815269080808081058dd1d585b60b21b602082015260400190565b604081526000620015d460408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b604081526000620015d460408301600a815269080808081058dd1d585b60b21b60208201526040019056fe60806040526005805460ff60a81b191690553480156200001e57600080fd5b506040518060400160405280600d81526020016c283437b732a137ba2a37b5b2b760991b8152506040518060400160405280600381526020016214109560ea1b81525081600390805190602001906200007992919062000295565b5080516200008f90600490602084019062000295565b50506005805460ff1916905550620000a733620000d3565b620000cd33620000ba6012600a62000450565b620000c790606462000468565b6200012d565b620004e1565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001895760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b620001976000838362000224565b8060026000828254620001ab91906200048a565b90915550506001600160a01b03821660009081526020819052604081208054839290620001da9084906200048a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6200022e6200024b565b620002468383836200024660201b620005ba1760201c565b505050565b60055460ff1615620002935760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640162000180565b565b828054620002a390620004a5565b90600052602060002090601f016020900481019282620002c7576000855562000312565b82601f10620002e257805160ff191683800117855562000312565b8280016001018555821562000312579182015b8281111562000312578251825591602001919060010190620002f5565b506200032092915062000324565b5090565b5b8082111562000320576000815560010162000325565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003925781600019048211156200037657620003766200033b565b808516156200038457918102915b93841c939080029062000356565b509250929050565b600082620003ab575060016200044a565b81620003ba575060006200044a565b8160018114620003d35760028114620003de57620003fe565b60019150506200044a565b60ff841115620003f257620003f26200033b565b50506001821b6200044a565b5060208310610133831016604e8410600b841016171562000423575081810a6200044a565b6200042f838362000351565b80600019048211156200044657620004466200033b565b0290505b92915050565b60006200046160ff8416836200039a565b9392505050565b60008160001904831182151516156200048557620004856200033b565b500290565b60008219821115620004a057620004a06200033b565b500190565b600181811c90821680620004ba57607f821691505b602082108103620004db57634e487b7160e01b600052602260045260246000fd5b50919050565b61141c80620004f16000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806370a0823111610104578063a457c2d7116100a2578063cd748abb11610071578063cd748abb146103df578063d7992d4d146103f2578063dd62ed3e14610405578063f2fde38b1461041857600080fd5b8063a457c2d714610383578063a6c75fa214610396578063a9059cbb146103b9578063b11ce2db146103cc57600080fd5b806379cc6790116100de57806379cc6790146103375780638456cb591461034a5780638da5cb5b1461035257806395d89b411461037b57600080fd5b806370a08231146102f3578063715018a61461031c578063765dd7a01461032457600080fd5b8063313ce5671161017157806340c10f191161014b57806340c10f19146102af57806342966c68146102c25780635c975abb146102d55780636c797bfd146102e057600080fd5b8063313ce5671461028557806339509351146102945780633f4ba83a146102a757600080fd5b806318160ddd116101ad57806318160ddd1461022a57806323b872dd1461023c57806324a380631461024f5780632955323c1461026257600080fd5b806306fdde03146101d4578063095ea7b3146101f25780631501bf0314610215575b600080fd5b6101dc61042b565b6040516101e99190611200565b60405180910390f35b610205610200366004611271565b6104bd565b60405190151581526020016101e9565b61022861022336600461129b565b6104d5565b005b6002545b6040519081526020016101e9565b61020561024a36600461129b565b6105bf565b61022861025d3660046112d7565b610637565b610205610270366004611300565b60076020526000908152604090205460ff1681565b604051601281526020016101e9565b6102056102a2366004611271565b61065d565b61022861067f565b6102286102bd366004611271565b610691565b6102286102d036600461131b565b610706565b60055460ff16610205565b6102286102ee366004611300565b610713565b61022e610301366004611300565b6001600160a01b031660009081526020819052604090205490565b610228610778565b610228610332366004611300565b61078a565b610228610345366004611271565b6107f0565b610228610805565b60055461010090046001600160a01b03166040516001600160a01b0390911681526020016101e9565b6101dc610815565b610205610391366004611271565b610824565b6102056103a4366004611300565b60066020526000908152604090205460ff1681565b6102056103c7366004611271565b61089f565b6102286103da366004611300565b610901565b6102286103ed366004611271565b610943565b610228610400366004611300565b61099e565b61022e610413366004611334565b6109c7565b610228610426366004611300565b6109f2565b60606003805461043a90611367565b80601f016020809104026020016040519081016040528092919081815260200182805461046690611367565b80156104b35780601f10610488576101008083540402835291602001916104b3565b820191906000526020600020905b81548152906001019060200180831161049657829003601f168201915b5050505050905090565b6000336104cb818585610a68565b5060019392505050565b3360009081526007602052604090205460ff166105355760405162461bcd60e51b8152602060048201526019602482015278151a1a5cc818dbdb9d1c9858dd08139bdd08105b1b1bddd959603a1b60448201526064015b60405180910390fd5b80610555846001600160a01b031660009081526020819052604090205490565b101561057457604051633bf1830560e21b815260040160405180910390fd5b6001600160a01b038316158061059157506001600160a01b038216155b156105af576040516309f9845360e01b815260040160405180910390fd5b6105ba838383610b8c565b505050565b600554600090600160a81b900460ff166106155760405162461bcd60e51b8152602060048201526017602482015276151a1a5cc81a5cc81b9bdd08185b1b1bddd959081e595d604a1b604482015260640161052c565b33610621858285610d67565b61062c858585610b8c565b506001949350505050565b61063f610ddb565b60058054911515600160a81b0260ff60a81b19909216919091179055565b6000336104cb81858561067083836109c7565b61067a91906113b7565b610a68565b610687610ddb565b61068f610e3b565b565b3360009081526006602052604090205460ff166106f05760405162461bcd60e51b815260206004820152601860248201527f596f7520617265206e6f742070617274206f66207465616d0000000000000000604482015260640161052c565b6106f8610e8d565b6107028282610ed3565b5050565b6107103382610fbe565b50565b61071b610ddb565b6001600160a01b03811660009081526007602052604090205460ff166107545760405163f411c32760e01b815260040160405180910390fd5b6001600160a01b03166000908152600760205260409020805460ff19166001179055565b610780610ddb565b61068f6000611118565b610792610ddb565b6001600160a01b03811660009081526006602052604090205460ff16156107cc576040516355adf54760e11b815260040160405180910390fd5b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b6107fb823383610d67565b6107028282610fbe565b61080d610ddb565b61068f611172565b60606004805461043a90611367565b6000338161083282866109c7565b9050838110156108925760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161052c565b61062c8286868403610a68565b600554600090600160a81b900460ff166108f55760405162461bcd60e51b8152602060048201526017602482015276151a1a5cc81a5cc81b9bdd08185b1b1bddd959081e595d604a1b604482015260640161052c565b336104cb818585610b8c565b610909610ddb565b6001600160a01b03811660009081526007602052604090205460ff16156107545760405163f411c32760e01b815260040160405180910390fd5b3360009081526007602052604090205460ff166106f05760405162461bcd60e51b8152602060048201526019602482015278151a1a5cc818dbdb9d1c9858dd08139bdd08105b1b1bddd959603a1b604482015260640161052c565b6109a6610ddb565b6001600160a01b03166000908152600660205260409020805460ff19169055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6109fa610ddb565b6001600160a01b038116610a5f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161052c565b61071081611118565b6001600160a01b038316610aca5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161052c565b6001600160a01b038216610b2b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161052c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610bf05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161052c565b6001600160a01b038216610c525760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161052c565b610c5d8383836111af565b6001600160a01b03831660009081526020819052604090205481811015610cd55760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161052c565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610d0c9084906113b7565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d5891815260200190565b60405180910390a35b50505050565b6000610d7384846109c7565b90506000198114610d615781811015610dce5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161052c565b610d618484848403610a68565b6005546001600160a01b0361010090910416331461068f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161052c565b610e436111b7565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60055460ff161561068f5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161052c565b6001600160a01b038216610f295760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161052c565b610f35600083836111af565b8060026000828254610f4791906113b7565b90915550506001600160a01b03821660009081526020819052604081208054839290610f749084906113b7565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03821661101e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161052c565b61102a826000836111af565b6001600160a01b0382166000908152602081905260409020548181101561109e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161052c565b6001600160a01b03831660009081526020819052604081208383039055600280548492906110cd9084906113cf565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61117a610e8d565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e703390565b6105ba610e8d565b60055460ff1661068f5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161052c565b600060208083528351808285015260005b8181101561122d57858101830151858201604001528201611211565b8181111561123f576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461126c57600080fd5b919050565b6000806040838503121561128457600080fd5b61128d83611255565b946020939093013593505050565b6000806000606084860312156112b057600080fd5b6112b984611255565b92506112c760208501611255565b9150604084013590509250925092565b6000602082840312156112e957600080fd5b813580151581146112f957600080fd5b9392505050565b60006020828403121561131257600080fd5b6112f982611255565b60006020828403121561132d57600080fd5b5035919050565b6000806040838503121561134757600080fd5b61135083611255565b915061135e60208401611255565b90509250929050565b600181811c9082168061137b57607f821691505b60208210810361139b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156113ca576113ca6113a1565b500190565b6000828210156113e1576113e16113a1565b50039056fea26469706673582212209fac50757f48b0f0033003f138b0e581f4f48ec21ff58e8dfdb9ed5b83fa3e7e64736f6c634300080e003360806040526107d06001556103e860025534801561001c57600080fd5b50604051610f81380380610f8183398101604081905261003b916100be565b6100443361006e565b600380546001600160a01b03909216610100026001600160a81b03199092169190911790556100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b610e84806100fd6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637f1bee2311610097578063b54dd71011610066578063b54dd710146101c9578063bea1dcf8146101dc578063f2fde38b146101ef578063f8b2cb4f1461020257600080fd5b80637f1bee231461017d5780637f4226691461019d578063864879bb146101a55780638da5cb5b146101b857600080fd5b806336b59bc4116100d357806336b59bc4146101395780635c975abb1461014c57806369fe0e2d14610162578063715018a61461017557600080fd5b806308695b41146100fa5780630cda45c81461010f5780631b29036914610126575b600080fd5b61010d610108366004610b56565b610215565b005b6001545b6040519081526020015b60405180910390f35b61010d610134366004610b71565b61025f565b61010d610147366004610c73565b610467565b60035460ff16604051901515815260200161011d565b61010d610170366004610d33565b6106f1565b61010d61073b565b61018561074f565b6040516001600160a01b03909116815260200161011d565b600254610113565b61010d6101b3366004610d33565b610769565b6000546001600160a01b0316610185565b61010d6101d7366004610d4c565b6107ac565b600454610185906001600160a01b031681565b61010d6101fd366004610b56565b610907565b610113610210366004610b56565b610980565b61021d6109fa565b803b1561023d57604051632111dc4760e01b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600354604051635363afd160e11b81523360048201526101009091046001600160a01b03169063a6c75fa290602401602060405180830381865afa1580156102ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cf9190610d76565b61031b5760405162461bcd60e51b8152602060048201526018602482015277596f7520617265206e6f742070617274206f66207465616d60401b60448201526064015b60405180910390fd5b610323610a54565b6003546040516370a0823160e01b81526001600160a01b0383811660048301528492610100900416906370a0823190602401602060405180830381865afa158015610372573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103969190610d98565b10156103b55760405163569d45cf60e11b815260040160405180910390fd5b60035460405163079cc67960e41b81526001600160a01b03838116600483015260248201859052610100909204909116906379cc679090604401600060405180830381600087803b15801561040957600080fd5b505af115801561041d573d6000803e3d6000fd5b5050604080518581526001600160a01b03851660208201527f63706707d038997d2210eb026bb1339397deab463921538a81bb98e69ee54ca8935001905060405180910390a15050565b600354604051635363afd160e11b81523360048201526101009091046001600160a01b03169063a6c75fa290602401602060405180830381865afa1580156104b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d79190610d76565b61051e5760405162461bcd60e51b8152602060048201526018602482015277596f7520617265206e6f742070617274206f66207465616d60401b6044820152606401610312565b610526610a54565b805182511461054857604051630c17582360e31b815260040160405180910390fd5b60005b82518110156106ec5760006001600160a01b031683828151811061057157610571610db1565b60200260200101516001600160a01b0316036105a0576040516309f9845360e01b815260040160405180910390fd5b600360019054906101000a90046001600160a01b03166001600160a01b031663cd748abb8483815181106105d6576105d6610db1565b60200260200101518484815181106105f0576105f0610db1565b60200260200101516040518363ffffffff1660e01b81526004016106299291906001600160a01b03929092168252602082015260400190565b600060405180830381600087803b15801561064357600080fd5b505af1158015610657573d6000803e3d6000fd5b505050507fe6b392a485300aed5d0afd949a6e7bbb13d3dc1a15efa0a0c1630b48ae54ca4683828151811061068e5761068e610db1565b60200260200101518383815181106106a8576106a8610db1565b60200260200101516040516106d29291906001600160a01b03929092168252602082015260400190565b60405180910390a1806106e481610ddd565b91505061054b565b505050565b6106f96109fa565b600181905560408051828152602081018390527fed28c14db89870da08d76b69e3f96d95cbb779778f62a9ea4d4d41dc082d088a91015b60405180910390a150565b6107436109fa565b61074d6000610a9a565b565b60006107596109fa565b506004546001600160a01b031690565b6107716109fa565b600281905560408051828152602081018390527f6a83cc218b6e35f4b68868b8cf2a7968201acfd91f619cd387fb092745e5b8dc9101610730565b6001600160a01b0382166107d357604051633415fd6160e11b815260040160405180910390fd5b600081116107f45760405163114617e760e21b815260040160405180910390fd5b60006107ff82610aea565b9050600061080c83610b1d565b905060003360035460048054604051631501bf0360e01b81526001600160a01b03808616938201939093529082166024820152604481018690529293506101009091041690631501bf0390606401600060405180830381600087803b15801561087457600080fd5b505af1158015610888573d6000803e3d6000fd5b5050600354604051631501bf0360e01b81526001600160a01b0385811660048301528981166024830152604482018890526101009092049091169250631501bf039150606401600060405180830381600087803b1580156108e857600080fd5b505af11580156108fc573d6000803e3d6000fd5b505050505050505050565b61090f6109fa565b6001600160a01b0381166109745760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610312565b61097d81610a9a565b50565b6003546040516370a0823160e01b81526001600160a01b038381166004830152600092610100900416906370a0823190602401602060405180830381865afa1580156109d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f49190610d98565b92915050565b6000546001600160a01b0316331461074d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610312565b60035460ff161561074d5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610312565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600154612710610afd9190610df6565b9050612710610b0c8285610e0d565b610b169190610e2c565b9392505050565b600061271060015483610b309190610e0d565b6109f49190610e2c565b80356001600160a01b0381168114610b5157600080fd5b919050565b600060208284031215610b6857600080fd5b610b1682610b3a565b60008060408385031215610b8457600080fd5b82359150610b9460208401610b3a565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610bdc57610bdc610b9d565b604052919050565b600067ffffffffffffffff821115610bfe57610bfe610b9d565b5060051b60200190565b600082601f830112610c1957600080fd5b81356020610c2e610c2983610be4565b610bb3565b82815260059290921b84018101918181019086841115610c4d57600080fd5b8286015b84811015610c685780358352918301918301610c51565b509695505050505050565b60008060408385031215610c8657600080fd5b823567ffffffffffffffff80821115610c9e57600080fd5b818501915085601f830112610cb257600080fd5b81356020610cc2610c2983610be4565b82815260059290921b84018101918181019089841115610ce157600080fd5b948201945b83861015610d0657610cf786610b3a565b82529482019490820190610ce6565b96505086013592505080821115610d1c57600080fd5b50610d2985828601610c08565b9150509250929050565b600060208284031215610d4557600080fd5b5035919050565b60008060408385031215610d5f57600080fd5b610d6883610b3a565b946020939093013593505050565b600060208284031215610d8857600080fd5b81518015158114610b1657600080fd5b600060208284031215610daa57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610def57610def610dc7565b5060010190565b600082821015610e0857610e08610dc7565b500390565b6000816000190483118215151615610e2757610e27610dc7565b500290565b600082610e4957634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f04c44df43effa1728f062e1a095090a197f71b31394dff9e81f9cd61199917964736f6c634300080e00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220d508c58050636a4337e7e8e48b5d4e9e9d15b735daeb71d07443bad55518ece564736f6c634300080e0033",
    "sourceMap": "134:4401:19:-:0;;;1572:26:0;;;-1:-1:-1;;170:28:1;;;;;134:4401:19;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000c35760003560e01c80639176fa5b116200007a5780639176fa5b1462000154578063ba414fa6146200016b578063dc3b20b81462000186578063f77c47911462000190578063f8ccbf4714620001a4578063fa7626d414620001b857600080fd5b80630a9254e414620000c8578063365ec7f214620000d45780633a76846314620000eb5780636c976dfe146200011f5780637484c04014620001365780638347b0c91462000140575b600080fd5b620000d2620001c6565b005b620000d2620000e536600462001393565b62000332565b6200010260008051602062003ea883398151915281565b6040516001600160a01b0390911681526020015b60405180910390f35b620000d262000130366004620013c3565b62000a9b565b620000d262000cc3565b60095462000102906001600160a01b031681565b620000d262000165366004620013c3565b62000d8d565b6200017562000ed0565b604051901515815260200162000116565b620000d262000ffb565b60085462000102906001600160a01b031681565b600054620001759062010000900460ff1681565b600054620001759060ff1681565b6040516303223eab60e11b81526001600482015260008051602062003ea8833981519152906306447d5690602401600060405180830381600087803b1580156200020f57600080fd5b505af115801562000224573d6000803e3d6000fd5b50505050604051620002369062001377565b604051809103906000f08015801562000253573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b03929092169182179055604051620002819062001385565b6001600160a01b039091168152602001604051809103906000f080158015620002ae573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055604080516390c5013b60e01b8152905160008051602062003ea8833981519152916390c5013b91600480830192600092919082900301818387803b1580156200031757600080fd5b505af11580156200032c573d6000803e3d6000fd5b50505050565b604051632631f2b160e11b81526127108210600482015260008051602062003ea883398151915290634c63e56290602401600060405180830381600087803b1580156200037e57600080fd5b505af115801562000393573d6000803e3d6000fd5b5050604051632631f2b160e11b8152831515600482015260008051602062003ea88339815191529250634c63e5629150602401600060405180830381600087803b158015620003e157600080fd5b505af1158015620003f6573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600482015260008051602062003ea883398151915292506306447d569150602401600060405180830381600087803b1580156200044357600080fd5b505af115801562000458573d6000803e3d6000fd5b50506008546040516308695b4160e01b8152600a60048201526001600160a01b0390911692506308695b419150602401600060405180830381600087803b158015620004a357600080fd5b505af1158015620004b8573d6000803e3d6000fd5b50506009546040516303b2eebd60e51b8152600260048201526001600160a01b03909116925063765dd7a09150602401600060405180830381600087803b1580156200050357600080fd5b505af115801562000518573d6000803e3d6000fd5b505060095460085460405163b11ce2db60e01b81526001600160a01b0391821660048201529116925063b11ce2db9150602401600060405180830381600087803b1580156200056657600080fd5b505af11580156200057b573d6000803e3d6000fd5b5050600954604051635363afd160e11b8152600260048201526001600160a01b03909116925063a6c75fa29150602401602060405180830381865afa158015620005c9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005ef9190620013ea565b620005fe57620005fe6200140e565b604080516390c5013b60e01b8152905160008051602062003ea8833981519152916390c5013b91600480830192600092919082900301818387803b1580156200064657600080fd5b505af11580156200065b573d6000803e3d6000fd5b50506040516303223eab60e11b81526002600482015260008051602062003ea883398151915292506306447d569150602401600060405180830381600087803b158015620006a857600080fd5b505af1158015620006bd573d6000803e3d6000fd5b50506009546040516340c10f1960e01b81526003600482015261271060248201526001600160a01b0390911692506340c10f199150604401600060405180830381600087803b1580156200071057600080fd5b505af115801562000725573d6000803e3d6000fd5b505060085460405163f8b2cb4f60e01b815260036004820152620007a793506001600160a01b03909116915063f8b2cb4f90602401602060405180830381865afa15801562000778573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200079e919062001424565b61271062001079565b604080516390c5013b60e01b8152905160008051602062003ea8833981519152916390c5013b91600480830192600092919082900301818387803b158015620007ef57600080fd5b505af115801562000804573d6000803e3d6000fd5b50506040516303223eab60e11b81526003600482015260008051602062003ea883398151915292506306447d569150602401600060405180830381600087803b1580156200085157600080fd5b505af115801562000866573d6000803e3d6000fd5b5050600854604051630b54dd7160e41b8152600480820152602481018590526001600160a01b03909116925063b54dd7109150604401600060405180830381600087803b158015620008b757600080fd5b505af1158015620008cc573d6000803e3d6000fd5b505050506000600860009054906101000a90046001600160a01b03166001600160a01b0316630cda45c86040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000926573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200094c919062001424565b905060006127106200095f838562001454565b6200096b919062001476565b905060006200097d8361271062001499565b9050600061271062000990838762001454565b6200099c919062001476565b60085460405163f8b2cb4f60e01b815260048082015291925062000a1a916001600160a01b039091169063f8b2cb4f90602401602060405180830381865afa158015620009ed573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a13919062001424565b8262001079565b60085460405163f8b2cb4f60e01b8152600a600482015262000a94916001600160a01b03169063f8b2cb4f90602401602060405180830381865afa15801562000a67573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a8d919062001424565b8462001079565b5050505050565b6040516303223eab60e11b81526001600482015260008051602062003ea8833981519152906306447d5690602401600060405180830381600087803b15801562000ae457600080fd5b505af115801562000af9573d6000803e3d6000fd5b50506009546040516303b2eebd60e51b81526001600160a01b038581166004830152909116925063765dd7a09150602401600060405180830381600087803b15801562000b4557600080fd5b505af115801562000b5a573d6000803e3d6000fd5b5050600954604051635363afd160e11b81526001600160a01b038581166004830152909116925063a6c75fa29150602401602060405180830381865afa15801562000ba9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000bcf9190620013ea565b62000bde5762000bde6200140e565b60095460405163d7992d4d60e01b81526001600160a01b0383811660048301529091169063d7992d4d90602401600060405180830381600087803b15801562000c2657600080fd5b505af115801562000c3b573d6000803e3d6000fd5b5050600954604051635363afd160e11b81526001600160a01b038581166004830152909116925063a6c75fa29150602401602060405180830381865afa15801562000c8a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cb09190620013ea565b1562000cc05762000cc06200140e565b50565b60095460408051638da5cb5b60e01b8152905162000d3e926001600160a01b031691638da5cb5b9160048083019260209291908290030181865afa15801562000d10573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d369190620014b3565b600162001174565b60085460408051638da5cb5b60e01b8152905162000d8b926001600160a01b031691638da5cb5b9160048083019260209291908290030181865afa15801562000d10573d6000803e3d6000fd5b565b6040516303223eab60e11b81526001600482015260008051602062003ea8833981519152906306447d5690602401600060405180830381600087803b15801562000dd657600080fd5b505af115801562000deb573d6000803e3d6000fd5b50506009546040516303b2eebd60e51b81526001600160a01b038581166004830152909116925063765dd7a09150602401600060405180830381600087803b15801562000e3757600080fd5b505af115801562000e4c573d6000803e3d6000fd5b5050600954604051635363afd160e11b81526001600160a01b038581166004830152909116925063a6c75fa29150602401602060405180830381865afa15801562000e9b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ec19190620013ea565b62000cc05762000cc06200140e565b60008054610100900460ff161562000ef15750600054610100900460ff1690565b600060008051602062003ea88339815191523b1562000ff6576040805160008051602062003ea8833981519152602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000f78917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800162001511565b60408051601f198184030181529082905262000f949162001537565b6000604051808303816000865af19150503d806000811462000fd3576040519150601f19603f3d011682016040523d82523d6000602084013e62000fd8565b606091505b509150508080602001905181019062000ff29190620013ea565b9150505b919050565b6009546040516370a0823160e01b81526001600482015262000d8b916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001048573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200106e919062001424565b68056bc75e2d631000005b80821462001170577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620010ec9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162001125919062001545565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516200115e91906200157e565b60405180910390a1620011706200126e565b5050565b806001600160a01b0316826001600160a01b03161462001170577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620011fc9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f81604051620012359190620015a9565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f826040516200115e9190620015ee565b60008051602062003ea88339815191523b1562001366576040805160008051602062003ea8833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262001301929160200162001511565b60408051601f19818403018152908290526200131d9162001537565b6000604051808303816000865af19150503d80600081146200135c576040519150601f19603f3d011682016040523d82523d6000602084013e62001361565b606091505b505050505b6000805461ff001916610100179055565b61190d806200161a83390190565b610f818062002f2783390190565b600060208284031215620013a657600080fd5b5035919050565b6001600160a01b038116811462000cc057600080fd5b600060208284031215620013d657600080fd5b8135620013e381620013ad565b9392505050565b600060208284031215620013fd57600080fd5b81518015158114620013e357600080fd5b634e487b7160e01b600052600160045260246000fd5b6000602082840312156200143757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156200147157620014716200143e565b500290565b6000826200149457634e487b7160e01b600052601260045260246000fd5b500490565b600082821015620014ae57620014ae6200143e565b500390565b600060208284031215620014c657600080fd5b8151620013e381620013ad565b6000815160005b81811015620014f65760208185018101518683015201620014da565b8181111562001506576000828601525b509290920192915050565b6001600160e01b03198316815260006200152f6004830184620014d3565b949350505050565b6000620013e38284620014d3565b6040815260006200157060408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b6040815260006200157060408301600a815269080808081058dd1d585b60b21b602082015260400190565b604081526000620015d460408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b604081526000620015d460408301600a815269080808081058dd1d585b60b21b60208201526040019056fe60806040526005805460ff60a81b191690553480156200001e57600080fd5b506040518060400160405280600d81526020016c283437b732a137ba2a37b5b2b760991b8152506040518060400160405280600381526020016214109560ea1b81525081600390805190602001906200007992919062000295565b5080516200008f90600490602084019062000295565b50506005805460ff1916905550620000a733620000d3565b620000cd33620000ba6012600a62000450565b620000c790606462000468565b6200012d565b620004e1565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001895760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b620001976000838362000224565b8060026000828254620001ab91906200048a565b90915550506001600160a01b03821660009081526020819052604081208054839290620001da9084906200048a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6200022e6200024b565b620002468383836200024660201b620005ba1760201c565b505050565b60055460ff1615620002935760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640162000180565b565b828054620002a390620004a5565b90600052602060002090601f016020900481019282620002c7576000855562000312565b82601f10620002e257805160ff191683800117855562000312565b8280016001018555821562000312579182015b8281111562000312578251825591602001919060010190620002f5565b506200032092915062000324565b5090565b5b8082111562000320576000815560010162000325565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003925781600019048211156200037657620003766200033b565b808516156200038457918102915b93841c939080029062000356565b509250929050565b600082620003ab575060016200044a565b81620003ba575060006200044a565b8160018114620003d35760028114620003de57620003fe565b60019150506200044a565b60ff841115620003f257620003f26200033b565b50506001821b6200044a565b5060208310610133831016604e8410600b841016171562000423575081810a6200044a565b6200042f838362000351565b80600019048211156200044657620004466200033b565b0290505b92915050565b60006200046160ff8416836200039a565b9392505050565b60008160001904831182151516156200048557620004856200033b565b500290565b60008219821115620004a057620004a06200033b565b500190565b600181811c90821680620004ba57607f821691505b602082108103620004db57634e487b7160e01b600052602260045260246000fd5b50919050565b61141c80620004f16000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806370a0823111610104578063a457c2d7116100a2578063cd748abb11610071578063cd748abb146103df578063d7992d4d146103f2578063dd62ed3e14610405578063f2fde38b1461041857600080fd5b8063a457c2d714610383578063a6c75fa214610396578063a9059cbb146103b9578063b11ce2db146103cc57600080fd5b806379cc6790116100de57806379cc6790146103375780638456cb591461034a5780638da5cb5b1461035257806395d89b411461037b57600080fd5b806370a08231146102f3578063715018a61461031c578063765dd7a01461032457600080fd5b8063313ce5671161017157806340c10f191161014b57806340c10f19146102af57806342966c68146102c25780635c975abb146102d55780636c797bfd146102e057600080fd5b8063313ce5671461028557806339509351146102945780633f4ba83a146102a757600080fd5b806318160ddd116101ad57806318160ddd1461022a57806323b872dd1461023c57806324a380631461024f5780632955323c1461026257600080fd5b806306fdde03146101d4578063095ea7b3146101f25780631501bf0314610215575b600080fd5b6101dc61042b565b6040516101e99190611200565b60405180910390f35b610205610200366004611271565b6104bd565b60405190151581526020016101e9565b61022861022336600461129b565b6104d5565b005b6002545b6040519081526020016101e9565b61020561024a36600461129b565b6105bf565b61022861025d3660046112d7565b610637565b610205610270366004611300565b60076020526000908152604090205460ff1681565b604051601281526020016101e9565b6102056102a2366004611271565b61065d565b61022861067f565b6102286102bd366004611271565b610691565b6102286102d036600461131b565b610706565b60055460ff16610205565b6102286102ee366004611300565b610713565b61022e610301366004611300565b6001600160a01b031660009081526020819052604090205490565b610228610778565b610228610332366004611300565b61078a565b610228610345366004611271565b6107f0565b610228610805565b60055461010090046001600160a01b03166040516001600160a01b0390911681526020016101e9565b6101dc610815565b610205610391366004611271565b610824565b6102056103a4366004611300565b60066020526000908152604090205460ff1681565b6102056103c7366004611271565b61089f565b6102286103da366004611300565b610901565b6102286103ed366004611271565b610943565b610228610400366004611300565b61099e565b61022e610413366004611334565b6109c7565b610228610426366004611300565b6109f2565b60606003805461043a90611367565b80601f016020809104026020016040519081016040528092919081815260200182805461046690611367565b80156104b35780601f10610488576101008083540402835291602001916104b3565b820191906000526020600020905b81548152906001019060200180831161049657829003601f168201915b5050505050905090565b6000336104cb818585610a68565b5060019392505050565b3360009081526007602052604090205460ff166105355760405162461bcd60e51b8152602060048201526019602482015278151a1a5cc818dbdb9d1c9858dd08139bdd08105b1b1bddd959603a1b60448201526064015b60405180910390fd5b80610555846001600160a01b031660009081526020819052604090205490565b101561057457604051633bf1830560e21b815260040160405180910390fd5b6001600160a01b038316158061059157506001600160a01b038216155b156105af576040516309f9845360e01b815260040160405180910390fd5b6105ba838383610b8c565b505050565b600554600090600160a81b900460ff166106155760405162461bcd60e51b8152602060048201526017602482015276151a1a5cc81a5cc81b9bdd08185b1b1bddd959081e595d604a1b604482015260640161052c565b33610621858285610d67565b61062c858585610b8c565b506001949350505050565b61063f610ddb565b60058054911515600160a81b0260ff60a81b19909216919091179055565b6000336104cb81858561067083836109c7565b61067a91906113b7565b610a68565b610687610ddb565b61068f610e3b565b565b3360009081526006602052604090205460ff166106f05760405162461bcd60e51b815260206004820152601860248201527f596f7520617265206e6f742070617274206f66207465616d0000000000000000604482015260640161052c565b6106f8610e8d565b6107028282610ed3565b5050565b6107103382610fbe565b50565b61071b610ddb565b6001600160a01b03811660009081526007602052604090205460ff166107545760405163f411c32760e01b815260040160405180910390fd5b6001600160a01b03166000908152600760205260409020805460ff19166001179055565b610780610ddb565b61068f6000611118565b610792610ddb565b6001600160a01b03811660009081526006602052604090205460ff16156107cc576040516355adf54760e11b815260040160405180910390fd5b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b6107fb823383610d67565b6107028282610fbe565b61080d610ddb565b61068f611172565b60606004805461043a90611367565b6000338161083282866109c7565b9050838110156108925760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161052c565b61062c8286868403610a68565b600554600090600160a81b900460ff166108f55760405162461bcd60e51b8152602060048201526017602482015276151a1a5cc81a5cc81b9bdd08185b1b1bddd959081e595d604a1b604482015260640161052c565b336104cb818585610b8c565b610909610ddb565b6001600160a01b03811660009081526007602052604090205460ff16156107545760405163f411c32760e01b815260040160405180910390fd5b3360009081526007602052604090205460ff166106f05760405162461bcd60e51b8152602060048201526019602482015278151a1a5cc818dbdb9d1c9858dd08139bdd08105b1b1bddd959603a1b604482015260640161052c565b6109a6610ddb565b6001600160a01b03166000908152600660205260409020805460ff19169055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6109fa610ddb565b6001600160a01b038116610a5f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161052c565b61071081611118565b6001600160a01b038316610aca5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161052c565b6001600160a01b038216610b2b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161052c565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610bf05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161052c565b6001600160a01b038216610c525760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161052c565b610c5d8383836111af565b6001600160a01b03831660009081526020819052604090205481811015610cd55760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161052c565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610d0c9084906113b7565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d5891815260200190565b60405180910390a35b50505050565b6000610d7384846109c7565b90506000198114610d615781811015610dce5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161052c565b610d618484848403610a68565b6005546001600160a01b0361010090910416331461068f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161052c565b610e436111b7565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60055460ff161561068f5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161052c565b6001600160a01b038216610f295760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161052c565b610f35600083836111af565b8060026000828254610f4791906113b7565b90915550506001600160a01b03821660009081526020819052604081208054839290610f749084906113b7565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03821661101e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161052c565b61102a826000836111af565b6001600160a01b0382166000908152602081905260409020548181101561109e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161052c565b6001600160a01b03831660009081526020819052604081208383039055600280548492906110cd9084906113cf565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61117a610e8d565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e703390565b6105ba610e8d565b60055460ff1661068f5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161052c565b600060208083528351808285015260005b8181101561122d57858101830151858201604001528201611211565b8181111561123f576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461126c57600080fd5b919050565b6000806040838503121561128457600080fd5b61128d83611255565b946020939093013593505050565b6000806000606084860312156112b057600080fd5b6112b984611255565b92506112c760208501611255565b9150604084013590509250925092565b6000602082840312156112e957600080fd5b813580151581146112f957600080fd5b9392505050565b60006020828403121561131257600080fd5b6112f982611255565b60006020828403121561132d57600080fd5b5035919050565b6000806040838503121561134757600080fd5b61135083611255565b915061135e60208401611255565b90509250929050565b600181811c9082168061137b57607f821691505b60208210810361139b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156113ca576113ca6113a1565b500190565b6000828210156113e1576113e16113a1565b50039056fea26469706673582212209fac50757f48b0f0033003f138b0e581f4f48ec21ff58e8dfdb9ed5b83fa3e7e64736f6c634300080e003360806040526107d06001556103e860025534801561001c57600080fd5b50604051610f81380380610f8183398101604081905261003b916100be565b6100443361006e565b600380546001600160a01b03909216610100026001600160a81b03199092169190911790556100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b610e84806100fd6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637f1bee2311610097578063b54dd71011610066578063b54dd710146101c9578063bea1dcf8146101dc578063f2fde38b146101ef578063f8b2cb4f1461020257600080fd5b80637f1bee231461017d5780637f4226691461019d578063864879bb146101a55780638da5cb5b146101b857600080fd5b806336b59bc4116100d357806336b59bc4146101395780635c975abb1461014c57806369fe0e2d14610162578063715018a61461017557600080fd5b806308695b41146100fa5780630cda45c81461010f5780631b29036914610126575b600080fd5b61010d610108366004610b56565b610215565b005b6001545b6040519081526020015b60405180910390f35b61010d610134366004610b71565b61025f565b61010d610147366004610c73565b610467565b60035460ff16604051901515815260200161011d565b61010d610170366004610d33565b6106f1565b61010d61073b565b61018561074f565b6040516001600160a01b03909116815260200161011d565b600254610113565b61010d6101b3366004610d33565b610769565b6000546001600160a01b0316610185565b61010d6101d7366004610d4c565b6107ac565b600454610185906001600160a01b031681565b61010d6101fd366004610b56565b610907565b610113610210366004610b56565b610980565b61021d6109fa565b803b1561023d57604051632111dc4760e01b815260040160405180910390fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b600354604051635363afd160e11b81523360048201526101009091046001600160a01b03169063a6c75fa290602401602060405180830381865afa1580156102ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cf9190610d76565b61031b5760405162461bcd60e51b8152602060048201526018602482015277596f7520617265206e6f742070617274206f66207465616d60401b60448201526064015b60405180910390fd5b610323610a54565b6003546040516370a0823160e01b81526001600160a01b0383811660048301528492610100900416906370a0823190602401602060405180830381865afa158015610372573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103969190610d98565b10156103b55760405163569d45cf60e11b815260040160405180910390fd5b60035460405163079cc67960e41b81526001600160a01b03838116600483015260248201859052610100909204909116906379cc679090604401600060405180830381600087803b15801561040957600080fd5b505af115801561041d573d6000803e3d6000fd5b5050604080518581526001600160a01b03851660208201527f63706707d038997d2210eb026bb1339397deab463921538a81bb98e69ee54ca8935001905060405180910390a15050565b600354604051635363afd160e11b81523360048201526101009091046001600160a01b03169063a6c75fa290602401602060405180830381865afa1580156104b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d79190610d76565b61051e5760405162461bcd60e51b8152602060048201526018602482015277596f7520617265206e6f742070617274206f66207465616d60401b6044820152606401610312565b610526610a54565b805182511461054857604051630c17582360e31b815260040160405180910390fd5b60005b82518110156106ec5760006001600160a01b031683828151811061057157610571610db1565b60200260200101516001600160a01b0316036105a0576040516309f9845360e01b815260040160405180910390fd5b600360019054906101000a90046001600160a01b03166001600160a01b031663cd748abb8483815181106105d6576105d6610db1565b60200260200101518484815181106105f0576105f0610db1565b60200260200101516040518363ffffffff1660e01b81526004016106299291906001600160a01b03929092168252602082015260400190565b600060405180830381600087803b15801561064357600080fd5b505af1158015610657573d6000803e3d6000fd5b505050507fe6b392a485300aed5d0afd949a6e7bbb13d3dc1a15efa0a0c1630b48ae54ca4683828151811061068e5761068e610db1565b60200260200101518383815181106106a8576106a8610db1565b60200260200101516040516106d29291906001600160a01b03929092168252602082015260400190565b60405180910390a1806106e481610ddd565b91505061054b565b505050565b6106f96109fa565b600181905560408051828152602081018390527fed28c14db89870da08d76b69e3f96d95cbb779778f62a9ea4d4d41dc082d088a91015b60405180910390a150565b6107436109fa565b61074d6000610a9a565b565b60006107596109fa565b506004546001600160a01b031690565b6107716109fa565b600281905560408051828152602081018390527f6a83cc218b6e35f4b68868b8cf2a7968201acfd91f619cd387fb092745e5b8dc9101610730565b6001600160a01b0382166107d357604051633415fd6160e11b815260040160405180910390fd5b600081116107f45760405163114617e760e21b815260040160405180910390fd5b60006107ff82610aea565b9050600061080c83610b1d565b905060003360035460048054604051631501bf0360e01b81526001600160a01b03808616938201939093529082166024820152604481018690529293506101009091041690631501bf0390606401600060405180830381600087803b15801561087457600080fd5b505af1158015610888573d6000803e3d6000fd5b5050600354604051631501bf0360e01b81526001600160a01b0385811660048301528981166024830152604482018890526101009092049091169250631501bf039150606401600060405180830381600087803b1580156108e857600080fd5b505af11580156108fc573d6000803e3d6000fd5b505050505050505050565b61090f6109fa565b6001600160a01b0381166109745760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610312565b61097d81610a9a565b50565b6003546040516370a0823160e01b81526001600160a01b038381166004830152600092610100900416906370a0823190602401602060405180830381865afa1580156109d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f49190610d98565b92915050565b6000546001600160a01b0316331461074d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610312565b60035460ff161561074d5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610312565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600154612710610afd9190610df6565b9050612710610b0c8285610e0d565b610b169190610e2c565b9392505050565b600061271060015483610b309190610e0d565b6109f49190610e2c565b80356001600160a01b0381168114610b5157600080fd5b919050565b600060208284031215610b6857600080fd5b610b1682610b3a565b60008060408385031215610b8457600080fd5b82359150610b9460208401610b3a565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610bdc57610bdc610b9d565b604052919050565b600067ffffffffffffffff821115610bfe57610bfe610b9d565b5060051b60200190565b600082601f830112610c1957600080fd5b81356020610c2e610c2983610be4565b610bb3565b82815260059290921b84018101918181019086841115610c4d57600080fd5b8286015b84811015610c685780358352918301918301610c51565b509695505050505050565b60008060408385031215610c8657600080fd5b823567ffffffffffffffff80821115610c9e57600080fd5b818501915085601f830112610cb257600080fd5b81356020610cc2610c2983610be4565b82815260059290921b84018101918181019089841115610ce157600080fd5b948201945b83861015610d0657610cf786610b3a565b82529482019490820190610ce6565b96505086013592505080821115610d1c57600080fd5b50610d2985828601610c08565b9150509250929050565b600060208284031215610d4557600080fd5b5035919050565b60008060408385031215610d5f57600080fd5b610d6883610b3a565b946020939093013593505050565b600060208284031215610d8857600080fd5b81518015158114610b1657600080fd5b600060208284031215610daa57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610def57610def610dc7565b5060010190565b600082821015610e0857610e08610dc7565b500390565b6000816000190483118215151615610e2757610e27610dc7565b500290565b600082610e4957634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220f04c44df43effa1728f062e1a095090a197f71b31394dff9e81f9cd61199917964736f6c634300080e00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da2646970667358221220d508c58050636a4337e7e8e48b5d4e9e9d15b735daeb71d07443bad55518ece564736f6c634300080e0033",
    "sourceMap": "134:4401:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;440:174;;;:::i;:::-;;1820:998;;;;;;:::i;:::-;;:::i;321:38:1:-;;-1:-1:-1;;;;;;;;;;;321:38:1;;;;;-1:-1:-1;;;;;374:32:20;;;356:51;;344:2;329:18;321:38:1;;;;;;;;1096:257:19;;;;;;:::i;:::-;;:::i;620:132::-;;;:::i;206:23::-;;;;;-1:-1:-1;;;;;206:23:19;;;875:215;;;;;;:::i;:::-;;:::i;1819:584:0:-;;;:::i;:::-;;;1202:14:20;;1195:22;1177:41;;1165:2;1150:18;1819:584:0;1037:187:20;758:111:19;;;:::i;172:28::-;;;;;-1:-1:-1;;;;;172:28:19;;;170::1;;;;;;;;;;;;1572:26:0;;;;;;;;;440:174:19;474:25;;-1:-1:-1;;;474:25:19;;496:1;474:25;;;356:51:20;-1:-1:-1;;;;;;;;;;;250:64:1;474:13:19;;329:18:20;;474:25:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;514:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;509:2:19;:24;;-1:-1:-1;;;;;;509:24:19;-1:-1:-1;;;;;509:24:19;;;;;;;;;556:27;;;;;:::i;:::-;-1:-1:-1;;;;;374:32:20;;;356:51;;344:2;329:18;556:27:19;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;543:10:19;:40;;-1:-1:-1;;;;;;543:40:19;-1:-1:-1;;;;;543:40:19;;;;;;;;;;593:14;;;-1:-1:-1;;;593:14:19;;;;-1:-1:-1;;;;;;;;;;;250:64:1;593:12:19;;:14;;;;;-1:-1:-1;;593:14:19;;;;;;;-1:-1:-1;250:64:1;593:14:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;440:174::o;1820:998::-;1888:26;;-1:-1:-1;;;1888:26:19;;1908:5;1898:15;;1888:26;;;1177:41:20;-1:-1:-1;;;;;;;;;;;250:64:1;1888:9:19;;1150:18:20;;1888:26:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1924:23:19;;-1:-1:-1;;;1924:23:19;;1934:12;;;1924:23;;;1177:41:20;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;1924:9:19;;-1:-1:-1;1150:18:20;;1924:23:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1958:25:19;;-1:-1:-1;;;1958:25:19;;1980:1;1958:25;;;356:51:20;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;1958:13:19;;-1:-1:-1;329:18:20;;1958:25:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1993:10:19;;:39;;-1:-1:-1;;;1993:39:19;;2028:2;1993:39;;;356:51:20;-1:-1:-1;;;;;1993:10:19;;;;-1:-1:-1;1993:26:19;;-1:-1:-1;329:18:20;;1993:39:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2042:2:19;;:29;;-1:-1:-1;;;2042:29:19;;2068:1;2042:29;;;356:51:20;-1:-1:-1;;;;;2042:2:19;;;;-1:-1:-1;2042:17:19;;-1:-1:-1;329:18:20;;2042:29:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2081:2:19;;2111:10;;2081:42;;-1:-1:-1;;;2081:42:19;;-1:-1:-1;;;;;2111:10:19;;;2081:42;;;356:51:20;2081:2:19;;;-1:-1:-1;2081:21:19;;-1:-1:-1;329:18:20;;2081:42:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2140:2:19;;:31;;-1:-1:-1;;;2140:31:19;;2168:1;2140:31;;;356:51:20;-1:-1:-1;;;;;2140:2:19;;;;-1:-1:-1;2140:19:19;;-1:-1:-1;329:18:20;;2140:31:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2133:39;;;;:::i;:::-;2182:14;;;-1:-1:-1;;;2182:14:19;;;;-1:-1:-1;;;;;;;;;;;250:64:1;2182:12:19;;:14;;;;;274:37:1;;2182:14:19;;;;;;;274:37:1;250:64;2182:14:19;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2207:25:19;;-1:-1:-1;;;2207:25:19;;2229:1;2207:25;;;356:51:20;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;2207:13:19;;-1:-1:-1;329:18:20;;2207:25:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2242:2:19;;:26;;-1:-1:-1;;;2242:26:19;;2258:1;2242:26;;;2265:51:20;2262:5:19;2332:18:20;;;2325:34;-1:-1:-1;;;;;2242:2:19;;;;-1:-1:-1;2242:7:19;;-1:-1:-1;2238:18:20;;2242:26:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2287:10:19;;:33;;-1:-1:-1;;;2287:33:19;;2317:1;2287:33;;;356:51:20;2278:50:19;;-1:-1:-1;;;;;;2287:10:19;;;;-1:-1:-1;2287:21:19;;329:18:20;;2287:33:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2322:5;2278:8;:50::i;:::-;2338:14;;;-1:-1:-1;;;2338:14:19;;;;-1:-1:-1;;;;;;;;;;;250:64:1;2338:12:19;;:14;;;;;274:37:1;;2338:14:19;;;;;;;274:37:1;250:64;2338:14:19;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2363:25:19;;-1:-1:-1;;;2363:25:19;;2385:1;2363:25;;;356:51:20;-1:-1:-1;;;;;;;;;;;250:64:1;-1:-1:-1;2363:13:19;;-1:-1:-1;329:18:20;;2363:25:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2398:10:19;;:56;;-1:-1:-1;;;2398:56:19;;2442:1;2398:56;;;2265:51:20;2332:18;;;2325:34;;;-1:-1:-1;;;;;2398:10:19;;;;-1:-1:-1;2398:35:19;;-1:-1:-1;2238:18:20;;2398:56:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2464:11;2478:10;;;;;;;;;-1:-1:-1;;;;;2478:10:19;-1:-1:-1;;;;;2478:17:19;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2464:33;-1:-1:-1;2507:17:19;2545:5;2528:13;2464:33;2528:7;:13;:::i;:::-;2527:23;;;;:::i;:::-;2507:43;-1:-1:-1;2560:26:19;2589:11;2597:3;2589:5;:11;:::i;:::-;2560:40;-1:-1:-1;2610:24:19;2670:5;2638:28;2560:40;2638:7;:28;:::i;:::-;2637:38;;;;:::i;:::-;2694:10;;:33;;-1:-1:-1;;;2694:33:19;;2724:1;2694:33;;;356:51:20;2610:65:19;;-1:-1:-1;2685:61:19;;-1:-1:-1;;;;;2694:10:19;;;;:21;;329:18:20;;2694:33:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2729:16;2685:8;:61::i;:::-;2765:10;;:34;;-1:-1:-1;;;2765:34:19;;2795:2;2765:34;;;356:51:20;2756:55:19;;-1:-1:-1;;;;;2765:10:19;;:21;;329:18:20;;2765:34:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2801:9;2756:8;:55::i;:::-;1878:940;;;;1820:998;:::o;1096:257::-;1159:25;;-1:-1:-1;;;1159:25:19;;1181:1;1159:25;;;356:51:20;-1:-1:-1;;;;;;;;;;;250:64:1;1159:13:19;;329:18:20;;1159:25:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1194:2:19;;:24;;-1:-1:-1;;;1194:24:19;;-1:-1:-1;;;;;374:32:20;;;1194:24:19;;;356:51:20;1194:2:19;;;;-1:-1:-1;1194:17:19;;-1:-1:-1;329:18:20;;1194:24:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1235:2:19;;:26;;-1:-1:-1;;;1235:26:19;;-1:-1:-1;;;;;374:32:20;;;1235:26:19;;;356:51:20;1235:2:19;;;;-1:-1:-1;1235:19:19;;-1:-1:-1;329:18:20;;1235:26:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1228:34;;;;:::i;:::-;1272:2;;:29;;-1:-1:-1;;;1272:29:19;;-1:-1:-1;;;;;374:32:20;;;1272:29:19;;;356:51:20;1272:2:19;;;;:22;;329:18:20;;1272:29:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1319:2:19;;:26;;-1:-1:-1;;;1319:26:19;;-1:-1:-1;;;;;374:32:20;;;1319:26:19;;;356:51:20;1319:2:19;;;;-1:-1:-1;1319:19:19;;-1:-1:-1;329:18:20;;1319:26:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1318:27;1311:35;;;;:::i;:::-;1096:257;:::o;620:132::-;672:2;;:10;;;-1:-1:-1;;;672:10:19;;;;663:32;;-1:-1:-1;;;;;672:2:19;;:8;;:10;;;;;;;;;;;;;;:2;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;692:1;663:8;:32::i;:::-;714:10;;:18;;;-1:-1:-1;;;714:18:19;;;;705:40;;-1:-1:-1;;;;;714:10:19;;:16;;:18;;;;;;;;;;;;;;:10;:18;;;;;;;;;;;;;;705:40;620:132::o;875:215::-;928:25;;-1:-1:-1;;;928:25:19;;950:1;928:25;;;356:51:20;-1:-1:-1;;;;;;;;;;;250:64:1;928:13:19;;329:18:20;;928:25:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;963:2:19;;:24;;-1:-1:-1;;;963:24:19;;-1:-1:-1;;;;;374:32:20;;;963:24:19;;;356:51:20;963:2:19;;;;-1:-1:-1;963:17:19;;-1:-1:-1;329:18:20;;963:24:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1004:2:19;;:26;;-1:-1:-1;;;1004:26:19;;-1:-1:-1;;;;;374:32:20;;;1004:26:19;;;356:51:20;1004:2:19;;;;-1:-1:-1;1004:19:19;;-1:-1:-1;329:18:20;;1004:26:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;997:34;;;;:::i;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;1980:374;;2196:43;;;-1:-1:-1;;;;;;;;;;;2196:43:0;;;2265:51:20;;;-1:-1:-1;;;2332:18:20;;;2325:34;2196:43:0;;;;;;;;;2238:18:20;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;758:111:19:-;814:2;;:24;;-1:-1:-1;;;814:24:19;;:2;:24;;;356:51:20;805:57:19;;-1:-1:-1;;;;;814:2:19;;:12;;329:18:20;;814:24:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;840:21;5202:262:0;5264:1;5259;:6;5255:203;;5286:41;;;;;5050:2:20;5032:21;;;5089:2;5069:18;;;5062:30;5128:34;5123:2;5108:18;;5101:62;-1:-1:-1;;;5194:2:20;5179:18;;5172:32;5236:3;5221:19;;4848:398;5286:41:0;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;:::-;;;;;;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;3615:277::-;3683:1;-1:-1:-1;;;;;3678:6:0;:1;-1:-1:-1;;;;;3678:6:0;;3674:212;;3705:44;;;;;6487:2:20;6469:21;;;6526:2;6506:18;;;6499:30;6565:34;6560:2;6545:18;;6538:62;-1:-1:-1;;;6631:2:20;6616:18;;6609:35;6676:3;6661:19;;6285:401;3705:44:0;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;2410:424::-;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;2445:359;;2645:67;;;-1:-1:-1;;;;;;;;;;;2645:67:0;;;7651:51:20;;;-1:-1:-1;;;7718:18:20;;;7711:34;;;;2705:4:0;7761:18:20;;;7754:34;2482:11:0;;1671:64;2579:43;;7624:18:20;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:180:20:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:20;;14:180;-1:-1:-1;14:180:20:o;418:131::-;-1:-1:-1;;;;;493:31:20;;483:42;;473:70;;539:1;536;529:12;554:247;613:6;666:2;654:9;645:7;641:23;637:32;634:52;;;682:1;679;672:12;634:52;721:9;708:23;740:31;765:5;740:31;:::i;:::-;790:5;554:247;-1:-1:-1;;;554:247:20:o;1665:277::-;1732:6;1785:2;1773:9;1764:7;1760:23;1756:32;1753:52;;;1801:1;1798;1791:12;1753:52;1833:9;1827:16;1886:5;1879:13;1872:21;1865:5;1862:32;1852:60;;1908:1;1905;1898:12;1947:127;2008:10;2003:3;1999:20;1996:1;1989:31;2039:4;2036:1;2029:15;2063:4;2060:1;2053:15;2370:184;2440:6;2493:2;2481:9;2472:7;2468:23;2464:32;2461:52;;;2509:1;2506;2499:12;2461:52;-1:-1:-1;2532:16:20;;2370:184;-1:-1:-1;2370:184:20:o;2838:127::-;2899:10;2894:3;2890:20;2887:1;2880:31;2930:4;2927:1;2920:15;2954:4;2951:1;2944:15;2970:168;3010:7;3076:1;3072;3068:6;3064:14;3061:1;3058:21;3053:1;3046:9;3039:17;3035:45;3032:71;;;3083:18;;:::i;:::-;-1:-1:-1;3123:9:20;;2970:168::o;3143:217::-;3183:1;3209;3199:132;;3253:10;3248:3;3244:20;3241:1;3234:31;3288:4;3285:1;3278:15;3316:4;3313:1;3306:15;3199:132;-1:-1:-1;3345:9:20;;3143:217::o;3365:125::-;3405:4;3433:1;3430;3427:8;3424:34;;;3438:18;;:::i;:::-;-1:-1:-1;3475:9:20;;3365:125::o;3495:251::-;3565:6;3618:2;3606:9;3597:7;3593:23;3589:32;3586:52;;;3634:1;3631;3624:12;3586:52;3666:9;3660:16;3685:31;3710:5;3685:31;:::i;4030:336::-;4071:3;4109:5;4103:12;4133:1;4143:128;4157:6;4154:1;4151:13;4143:128;;;4254:4;4239:13;;;4235:24;;4229:31;4216:11;;;4209:52;4172:12;4143:128;;;4289:6;4286:1;4283:13;4280:48;;;4324:1;4315:6;4310:3;4306:16;4299:27;4280:48;-1:-1:-1;4344:16:20;;;;;4030:336;-1:-1:-1;;4030:336:20:o;4371:278::-;-1:-1:-1;;;;;;4556:33:20;;4544:46;;4526:3;4606:37;4640:1;4631:11;;4623:6;4606:37;:::i;:::-;4599:44;4371:278;-1:-1:-1;;;;4371:278:20:o;4654:189::-;4783:3;4808:29;4833:3;4825:6;4808:29;:::i;5415:348::-;5645:2;5634:9;5627:21;5608:4;5665:49;5710:2;5699:9;5695:18;5328:2;5316:15;;-1:-1:-1;;;5356:4:20;5347:14;;5340:36;5401:2;5392:12;;5251:159;5665:49;5657:57;;5750:6;5745:2;5734:9;5730:18;5723:34;5415:348;;;;:::o;5932:::-;6162:2;6151:9;6144:21;6125:4;6182:49;6227:2;6216:9;6212:18;5845:2;5833:15;;-1:-1:-1;;;5873:4:20;5864:14;;5857:36;5918:2;5909:12;;5768:159;6691:374;6921:2;6910:9;6903:21;6884:4;6941:49;6986:2;6975:9;6971:18;5328:2;5316:15;;-1:-1:-1;;;5356:4:20;5347:14;;5340:36;5401:2;5392:12;;5251:159;6941:49;-1:-1:-1;;;;;7026:32:20;;;;7021:2;7006:18;;;;6999:60;;;;-1:-1:-1;6933:57:20;6691:374::o;7070:::-;7300:2;7289:9;7282:21;7263:4;7320:49;7365:2;7354:9;7350:18;5845:2;5833:15;;-1:-1:-1;;;5873:4:20;5864:14;;5857:36;5918:2;5909:12;;5768:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "Pb()": "8347b0c9",
    "controller()": "f77c4791",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testAddTeam(address)": "9176fa5b",
    "testBalanceOfOwner()": "dc3b20b8",
    "testCheckOwner()": "7484c040",
    "testRemoveTeamAddress(address)": "6c976dfe",
    "testTransferTokenOutside(uint256)": "365ec7f2",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Pb\",\"outputs\":[{\"internalType\":\"contract PhoneBotToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"contract Controller\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_team\",\"type\":\"address\"}],\"name\":\"testAddTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBalanceOfOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCheckOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_team\",\"type\":\"address\"}],\"name\":\"testRemoveTeamAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"testTransferTokenOutside\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/ControllerTest.t.sol\":\"ControllerTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"src/Controller.sol\":{\"keccak256\":\"0x031296e08b0e6ed5f023c16ea88303ba31049adb366ceb457bcf9dce508f4306\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ea53744567f722eb0668e6780b7acfdfea72b96c2b24d6a5e4aca1d1e0265fe1\",\"dweb:/ipfs/Qmbe2aM52FNQZnhgPphbNuwEYgQCXme7sgvuU5T6emz6qi\"]},\"src/Fee.sol\":{\"keccak256\":\"0x6bf980ab5f4328bf56430c97d5f4a657749cd56613ae4bc6a0fe708d98fefe1d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d8aa3723b28acd8a8b9d9b507c8bccf26e6b6b971a1af0246e94eed46dd99251\",\"dweb:/ipfs/QmPBSNXgor5kcT74unPhAVfHT9VKRgX9ThRSKArkLP5eGh\"]},\"src/Loyalty.sol\":{\"keccak256\":\"0xe246dda169790f41572326e283fba938fe0f9a7a561875068989ee78332f3492\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://963b47877a98a681f966636939b954533aa6db75e2fd3d9f21ad4afe69b9c2d8\",\"dweb:/ipfs/Qme4ANjfFQmGCqBnLnn1zZQUFf9sSYiwoHWR2SkfCMSqbf\"]},\"src/PhoneBotToken.sol\":{\"keccak256\":\"0x117f74936e799c0531c01ac1c770f410e7c333d086f1e5900ad7ba4d3e1fd4c9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720fa110cf740a18f1ec81eedb8531e824a1865c70d78ebd337eddb9841c4169\",\"dweb:/ipfs/QmYrfQvECaGPQxwPREHiVevPsdJJ3eKWg5Wsvnhku3HH2B\"]},\"test/ControllerTest.t.sol\":{\"keccak256\":\"0x63db4df080c0cb39ae61fa2e6f54a00c2ba3c0f16411436b141ead0ac5238f8f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0b77762a14c7db18b1c7b02e6a9e432be52e92ea2ee984c3d68e175c90cd38a6\",\"dweb:/ipfs/QmQFbEWxopQ5qMUtnGMiVe7PCpq8YpLWWtdv3RSBkbn3AH\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.14+commit.80d49f37"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "Pb",
          "outputs": [
            {
              "internalType": "contract PhoneBotToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "controller",
          "outputs": [
            {
              "internalType": "contract Controller",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_team",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddTeam"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBalanceOfOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCheckOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_team",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRemoveTeamAddress"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testTransferTokenOutside"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/ControllerTest.t.sol": "ControllerTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "keccak256": "0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b",
        "urls": [
          "bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f",
          "dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "src/Controller.sol": {
        "keccak256": "0x031296e08b0e6ed5f023c16ea88303ba31049adb366ceb457bcf9dce508f4306",
        "urls": [
          "bzz-raw://ea53744567f722eb0668e6780b7acfdfea72b96c2b24d6a5e4aca1d1e0265fe1",
          "dweb:/ipfs/Qmbe2aM52FNQZnhgPphbNuwEYgQCXme7sgvuU5T6emz6qi"
        ],
        "license": "UNLICENSED"
      },
      "src/Fee.sol": {
        "keccak256": "0x6bf980ab5f4328bf56430c97d5f4a657749cd56613ae4bc6a0fe708d98fefe1d",
        "urls": [
          "bzz-raw://d8aa3723b28acd8a8b9d9b507c8bccf26e6b6b971a1af0246e94eed46dd99251",
          "dweb:/ipfs/QmPBSNXgor5kcT74unPhAVfHT9VKRgX9ThRSKArkLP5eGh"
        ],
        "license": "UNLICENSED"
      },
      "src/Loyalty.sol": {
        "keccak256": "0xe246dda169790f41572326e283fba938fe0f9a7a561875068989ee78332f3492",
        "urls": [
          "bzz-raw://963b47877a98a681f966636939b954533aa6db75e2fd3d9f21ad4afe69b9c2d8",
          "dweb:/ipfs/Qme4ANjfFQmGCqBnLnn1zZQUFf9sSYiwoHWR2SkfCMSqbf"
        ],
        "license": "UNLICENSED"
      },
      "src/PhoneBotToken.sol": {
        "keccak256": "0x117f74936e799c0531c01ac1c770f410e7c333d086f1e5900ad7ba4d3e1fd4c9",
        "urls": [
          "bzz-raw://720fa110cf740a18f1ec81eedb8531e824a1865c70d78ebd337eddb9841c4169",
          "dweb:/ipfs/QmYrfQvECaGPQxwPREHiVevPsdJJ3eKWg5Wsvnhku3HH2B"
        ],
        "license": "MIT"
      },
      "test/ControllerTest.t.sol": {
        "keccak256": "0x63db4df080c0cb39ae61fa2e6f54a00c2ba3c0f16411436b141ead0ac5238f8f",
        "urls": [
          "bzz-raw://0b77762a14c7db18b1c7b02e6a9e432be52e92ea2ee984c3d68e175c90cd38a6",
          "dweb:/ipfs/QmQFbEWxopQ5qMUtnGMiVe7PCpq8YpLWWtdv3RSBkbn3AH"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/ControllerTest.t.sol",
    "id": 25418,
    "exportedSymbols": {
      "Context": [
        24202
      ],
      "Controller": [
        24578
      ],
      "ControllerTest": [
        25417
      ],
      "Counters": [
        24276
      ],
      "DSTest": [
        1786
      ],
      "ERC20": [
        24033
      ],
      "ERC20Burnable": [
        24155
      ],
      "Fee": [
        24659
      ],
      "IERC20": [
        24111
      ],
      "IERC20Metadata": [
        24180
      ],
      "Loyalty": [
        24717
      ],
      "Ownable": [
        23339
      ],
      "Pausable": [
        23447
      ],
      "PhoneBotToken": [
        25080
      ],
      "Script": [
        2049
      ],
      "StdStorage": [
        5077
      ],
      "Test": [
        4979
      ],
      "Vm": [
        7098
      ],
      "console": [
        15162
      ],
      "console2": [
        23226
      ],
      "stdError": [
        5049
      ],
      "stdJson": [
        2409
      ],
      "stdMath": [
        6318
      ],
      "stdStorage": [
        6179
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4497:19",
    "nodes": [
      {
        "id": 25082,
        "nodeType": "PragmaDirective",
        "src": "39:23:19",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 25083,
        "nodeType": "ImportDirective",
        "src": "64:36:19",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "lib/forge-std/src/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25418,
        "sourceUnit": 6319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25084,
        "nodeType": "ImportDirective",
        "src": "101:31:19",
        "absolutePath": "src/Controller.sol",
        "file": "../src/Controller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25418,
        "sourceUnit": 24579,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25417,
        "nodeType": "ContractDefinition",
        "src": "134:4401:19",
        "nodes": [
          {
            "id": 25089,
            "nodeType": "VariableDeclaration",
            "src": "172:28:19",
            "constant": false,
            "functionSelector": "f77c4791",
            "mutability": "mutable",
            "name": "controller",
            "nameLocation": "190:10:19",
            "scope": 25417,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Controller_$24578",
              "typeString": "contract Controller"
            },
            "typeName": {
              "id": 25088,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25087,
                "name": "Controller",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24578,
                "src": "172:10:19"
              },
              "referencedDeclaration": 24578,
              "src": "172:10:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Controller_$24578",
                "typeString": "contract Controller"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25092,
            "nodeType": "VariableDeclaration",
            "src": "206:23:19",
            "constant": false,
            "functionSelector": "8347b0c9",
            "mutability": "mutable",
            "name": "Pb",
            "nameLocation": "227:2:19",
            "scope": 25417,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PhoneBotToken_$25080",
              "typeString": "contract PhoneBotToken"
            },
            "typeName": {
              "id": 25091,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25090,
                "name": "PhoneBotToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25080,
                "src": "206:13:19"
              },
              "referencedDeclaration": 25080,
              "src": "206:13:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PhoneBotToken_$25080",
                "typeString": "contract PhoneBotToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25128,
            "nodeType": "FunctionDefinition",
            "src": "440:174:19",
            "body": {
              "id": 25127,
              "nodeType": "Block",
              "src": "464:150:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 25100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "496:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 25099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "488:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25098,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "488:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "488:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25095,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "474:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7098",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6548,
                      "src": "474:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "474:25:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25103,
                  "nodeType": "ExpressionStatement",
                  "src": "474:25:19"
                },
                {
                  "expression": {
                    "id": 25109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25104,
                      "name": "Pb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25092,
                      "src": "509:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PhoneBotToken_$25080",
                        "typeString": "contract PhoneBotToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 25107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "514:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_PhoneBotToken_$25080_$",
                          "typeString": "function () returns (contract PhoneBotToken)"
                        },
                        "typeName": {
                          "id": 25106,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 25105,
                            "name": "PhoneBotToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25080,
                            "src": "518:13:19"
                          },
                          "referencedDeclaration": 25080,
                          "src": "518:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhoneBotToken_$25080",
                            "typeString": "contract PhoneBotToken"
                          }
                        }
                      },
                      "id": 25108,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "514:19:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PhoneBotToken_$25080",
                        "typeString": "contract PhoneBotToken"
                      }
                    },
                    "src": "509:24:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhoneBotToken_$25080",
                      "typeString": "contract PhoneBotToken"
                    }
                  },
                  "id": 25110,
                  "nodeType": "ExpressionStatement",
                  "src": "509:24:19"
                },
                {
                  "expression": {
                    "id": 25120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25111,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25089,
                      "src": "543:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Controller_$24578",
                        "typeString": "contract Controller"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 25117,
                              "name": "Pb",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25092,
                              "src": "579:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PhoneBotToken_$25080",
                                "typeString": "contract PhoneBotToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PhoneBotToken_$25080",
                                "typeString": "contract PhoneBotToken"
                              }
                            ],
                            "id": 25116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "571:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25115,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "571:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "571:11:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 25114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "556:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Controller_$24578_$",
                          "typeString": "function (address) returns (contract Controller)"
                        },
                        "typeName": {
                          "id": 25113,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 25112,
                            "name": "Controller",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24578,
                            "src": "560:10:19"
                          },
                          "referencedDeclaration": 24578,
                          "src": "560:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Controller_$24578",
                            "typeString": "contract Controller"
                          }
                        }
                      },
                      "id": 25119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "556:27:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Controller_$24578",
                        "typeString": "contract Controller"
                      }
                    },
                    "src": "543:40:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Controller_$24578",
                      "typeString": "contract Controller"
                    }
                  },
                  "id": 25121,
                  "nodeType": "ExpressionStatement",
                  "src": "543:40:19"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25122,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "593:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7098",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6565,
                      "src": "593:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 25125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "593:14:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25126,
                  "nodeType": "ExpressionStatement",
                  "src": "593:14:19"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "449:5:19",
            "parameters": {
              "id": 25093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "454:2:19"
            },
            "returnParameters": {
              "id": 25094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "464:0:19"
            },
            "scope": 25417,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25152,
            "nodeType": "FunctionDefinition",
            "src": "620:132:19",
            "body": {
              "id": 25151,
              "nodeType": "Block",
              "src": "653:99:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 25132,
                            "name": "Pb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25092,
                            "src": "672:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhoneBotToken_$25080",
                              "typeString": "contract PhoneBotToken"
                            }
                          },
                          "id": 25133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23267,
                          "src": "672:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 25134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "672:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 25137,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "692:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 25136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "684:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25135,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "684:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "684:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25131,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 320,
                      "src": "663:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 25139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "663:32:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25140,
                  "nodeType": "ExpressionStatement",
                  "src": "663:32:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 25142,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25089,
                            "src": "714:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Controller_$24578",
                              "typeString": "contract Controller"
                            }
                          },
                          "id": 25143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23267,
                          "src": "714:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 25144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "714:18:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 25147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "742:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 25146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "734:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25145,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "734:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "734:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25141,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 320,
                      "src": "705:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 25149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "705:40:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25150,
                  "nodeType": "ExpressionStatement",
                  "src": "705:40:19"
                }
              ]
            },
            "functionSelector": "7484c040",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCheckOwner",
            "nameLocation": "629:14:19",
            "parameters": {
              "id": 25129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "643:2:19"
            },
            "returnParameters": {
              "id": 25130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "653:0:19"
            },
            "scope": 25417,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25167,
            "nodeType": "FunctionDefinition",
            "src": "758:111:19",
            "body": {
              "id": 25166,
              "nodeType": "Block",
              "src": "795:74:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 25160,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "835:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 25159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "827:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25158,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "827:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "827:10:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25156,
                            "name": "Pb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25092,
                            "src": "814:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhoneBotToken_$25080",
                              "typeString": "contract PhoneBotToken"
                            }
                          },
                          "id": 25157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23546,
                          "src": "814:12:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "814:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030303030303030303030303030303030303030",
                        "id": 25163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "840:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 25155,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "805:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "805:57:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25165,
                  "nodeType": "ExpressionStatement",
                  "src": "805:57:19"
                }
              ]
            },
            "functionSelector": "dc3b20b8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBalanceOfOwner",
            "nameLocation": "767:18:19",
            "parameters": {
              "id": 25153,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "785:2:19"
            },
            "returnParameters": {
              "id": 25154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "795:0:19"
            },
            "scope": 25417,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25195,
            "nodeType": "FunctionDefinition",
            "src": "875:215:19",
            "body": {
              "id": 25194,
              "nodeType": "Block",
              "src": "918:172:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 25177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "950:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 25176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "942:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25175,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "942:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "942:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25172,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "928:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7098",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6548,
                      "src": "928:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "928:25:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25180,
                  "nodeType": "ExpressionStatement",
                  "src": "928:25:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25184,
                        "name": "_team",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25169,
                        "src": "981:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25181,
                        "name": "Pb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25092,
                        "src": "963:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhoneBotToken_$25080",
                          "typeString": "contract PhoneBotToken"
                        }
                      },
                      "id": 25183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addTeamAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25064,
                      "src": "963:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "963:24:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25186,
                  "nodeType": "ExpressionStatement",
                  "src": "963:24:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25190,
                            "name": "_team",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25169,
                            "src": "1024:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25188,
                            "name": "Pb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25092,
                            "src": "1004:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhoneBotToken_$25080",
                              "typeString": "contract PhoneBotToken"
                            }
                          },
                          "id": 25189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "teamAccessRecord",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24746,
                          "src": "1004:19:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 25191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1004:26:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25187,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "997:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "997:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25193,
                  "nodeType": "ExpressionStatement",
                  "src": "997:34:19"
                }
              ]
            },
            "functionSelector": "9176fa5b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddTeam",
            "nameLocation": "884:11:19",
            "parameters": {
              "id": 25170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25169,
                  "mutability": "mutable",
                  "name": "_team",
                  "nameLocation": "904:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25195,
                  "src": "896:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "896:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "895:15:19"
            },
            "returnParameters": {
              "id": 25171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "918:0:19"
            },
            "scope": 25417,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25237,
            "nodeType": "FunctionDefinition",
            "src": "1096:257:19",
            "body": {
              "id": 25236,
              "nodeType": "Block",
              "src": "1149:204:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 25205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1181:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 25204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1173:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25203,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1173:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1173:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25200,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1159:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7098",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6548,
                      "src": "1159:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1159:25:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25208,
                  "nodeType": "ExpressionStatement",
                  "src": "1159:25:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25212,
                        "name": "_team",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25197,
                        "src": "1212:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25209,
                        "name": "Pb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25092,
                        "src": "1194:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhoneBotToken_$25080",
                          "typeString": "contract PhoneBotToken"
                        }
                      },
                      "id": 25211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addTeamAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25064,
                      "src": "1194:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1194:24:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25214,
                  "nodeType": "ExpressionStatement",
                  "src": "1194:24:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25218,
                            "name": "_team",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25197,
                            "src": "1255:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25216,
                            "name": "Pb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25092,
                            "src": "1235:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhoneBotToken_$25080",
                              "typeString": "contract PhoneBotToken"
                            }
                          },
                          "id": 25217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "teamAccessRecord",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24746,
                          "src": "1235:19:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 25219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1235:26:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25215,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1228:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1228:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25221,
                  "nodeType": "ExpressionStatement",
                  "src": "1228:34:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25225,
                        "name": "_team",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25197,
                        "src": "1295:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25222,
                        "name": "Pb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25092,
                        "src": "1272:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhoneBotToken_$25080",
                          "typeString": "contract PhoneBotToken"
                        }
                      },
                      "id": 25224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeMemberAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25079,
                      "src": "1272:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1272:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25227,
                  "nodeType": "ExpressionStatement",
                  "src": "1272:29:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1318:27:19",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 25231,
                              "name": "_team",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25197,
                              "src": "1339:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25229,
                              "name": "Pb",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25092,
                              "src": "1319:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PhoneBotToken_$25080",
                                "typeString": "contract PhoneBotToken"
                              }
                            },
                            "id": 25230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "teamAccessRecord",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24746,
                            "src": "1319:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 25232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1319:26:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25228,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1311:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1311:35:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25235,
                  "nodeType": "ExpressionStatement",
                  "src": "1311:35:19"
                }
              ]
            },
            "functionSelector": "6c976dfe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRemoveTeamAddress",
            "nameLocation": "1105:21:19",
            "parameters": {
              "id": 25198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25197,
                  "mutability": "mutable",
                  "name": "_team",
                  "nameLocation": "1135:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25237,
                  "src": "1127:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1126:15:19"
            },
            "returnParameters": {
              "id": 25199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1149:0:19"
            },
            "scope": 25417,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25416,
            "nodeType": "FunctionDefinition",
            "src": "1820:998:19",
            "body": {
              "id": 25415,
              "nodeType": "Block",
              "src": "1878:940:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25245,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25239,
                          "src": "1898:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "3130303030",
                          "id": 25246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1908:5:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          "value": "10000"
                        },
                        "src": "1898:15:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 25242,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1888:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7098",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25244,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6695,
                      "src": "1888:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 25248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1888:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25249,
                  "nodeType": "ExpressionStatement",
                  "src": "1888:26:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 25255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 25253,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25239,
                          "src": "1934:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 25254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1945:1:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1934:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 25250,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1924:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7098",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6695,
                      "src": "1924:9:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool) external"
                      }
                    },
                    "id": 25256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1924:23:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25257,
                  "nodeType": "ExpressionStatement",
                  "src": "1924:23:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 25263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1980:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 25262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1972:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25261,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1972:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1972:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25258,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1958:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7098",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6548,
                      "src": "1958:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1958:25:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25266,
                  "nodeType": "ExpressionStatement",
                  "src": "1958:25:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "3130",
                            "id": 25272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2028:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            }
                          ],
                          "id": 25271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2020:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25270,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2020:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2020:11:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25267,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25089,
                        "src": "1993:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Controller_$24578",
                          "typeString": "contract Controller"
                        }
                      },
                      "id": 25269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setTaxCollector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24387,
                      "src": "1993:26:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1993:39:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25275,
                  "nodeType": "ExpressionStatement",
                  "src": "1993:39:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 25281,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2068:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 25280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2060:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25279,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2060:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2060:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25276,
                        "name": "Pb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25092,
                        "src": "2042:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhoneBotToken_$25080",
                          "typeString": "contract PhoneBotToken"
                        }
                      },
                      "id": 25278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addTeamAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25064,
                      "src": "2042:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2042:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25284,
                  "nodeType": "ExpressionStatement",
                  "src": "2042:29:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25290,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25089,
                            "src": "2111:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Controller_$24578",
                              "typeString": "contract Controller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Controller_$24578",
                              "typeString": "contract Controller"
                            }
                          ],
                          "id": 25289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2103:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25288,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2103:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2103:19:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25285,
                        "name": "Pb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25092,
                        "src": "2081:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhoneBotToken_$25080",
                          "typeString": "contract PhoneBotToken"
                        }
                      },
                      "id": 25287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addContractAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25017,
                      "src": "2081:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2081:42:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25293,
                  "nodeType": "ExpressionStatement",
                  "src": "2081:42:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "32",
                                "id": 25299,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2168:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "id": 25298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2160:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25297,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2160:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25300,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2160:10:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25295,
                            "name": "Pb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25092,
                            "src": "2140:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhoneBotToken_$25080",
                              "typeString": "contract PhoneBotToken"
                            }
                          },
                          "id": 25296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "teamAccessRecord",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24746,
                          "src": "2140:19:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 25301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2140:31:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25294,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2133:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2133:39:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25303,
                  "nodeType": "ExpressionStatement",
                  "src": "2133:39:19"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25304,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "2182:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7098",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6565,
                      "src": "2182:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 25307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2182:14:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25308,
                  "nodeType": "ExpressionStatement",
                  "src": "2182:14:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 25314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2229:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 25313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2221:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25312,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2221:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2221:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25309,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "2207:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7098",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6548,
                      "src": "2207:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2207:25:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25317,
                  "nodeType": "ExpressionStatement",
                  "src": "2207:25:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "33",
                            "id": 25323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2258:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "id": 25322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2250:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25321,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2250:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2250:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130303030",
                        "id": 25325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2262:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "expression": {
                        "id": 25318,
                        "name": "Pb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25092,
                        "src": "2242:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhoneBotToken_$25080",
                          "typeString": "contract PhoneBotToken"
                        }
                      },
                      "id": 25320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24849,
                      "src": "2242:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 25326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2242:26:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25327,
                  "nodeType": "ExpressionStatement",
                  "src": "2242:26:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "33",
                                "id": 25333,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2317:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                }
                              ],
                              "id": 25332,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2309:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25331,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2309:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2309:10:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25329,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25089,
                            "src": "2287:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Controller_$24578",
                              "typeString": "contract Controller"
                            }
                          },
                          "id": 25330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24577,
                          "src": "2287:21:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2287:33:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130303030",
                        "id": 25336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2322:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        }
                      ],
                      "id": 25328,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2278:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2278:50:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25338,
                  "nodeType": "ExpressionStatement",
                  "src": "2278:50:19"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25339,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "2338:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7098",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6565,
                      "src": "2338:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 25342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2338:14:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25343,
                  "nodeType": "ExpressionStatement",
                  "src": "2338:14:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "33",
                            "id": 25349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2385:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "id": 25348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2377:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25347,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2377:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2377:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25344,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "2363:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7098",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25346,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6548,
                      "src": "2363:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2363:25:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25352,
                  "nodeType": "ExpressionStatement",
                  "src": "2363:25:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "34",
                            "id": 25358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2442:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            },
                            "value": "4"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_4_by_1",
                              "typeString": "int_const 4"
                            }
                          ],
                          "id": 25357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2434:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25356,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2434:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2434:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 25360,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25239,
                        "src": "2446:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 25353,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25089,
                        "src": "2398:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Controller_$24578",
                          "typeString": "contract Controller"
                        }
                      },
                      "id": 25355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferingTokensOutside",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24554,
                      "src": "2398:35:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 25361,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2398:56:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25362,
                  "nodeType": "ExpressionStatement",
                  "src": "2398:56:19"
                },
                {
                  "assignments": [
                    25364
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25364,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "2472:3:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25415,
                      "src": "2464:11:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25363,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2464:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25368,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25365,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25089,
                        "src": "2478:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Controller_$24578",
                          "typeString": "contract Controller"
                        }
                      },
                      "id": 25366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getfee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24658,
                      "src": "2478:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 25367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2478:19:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2464:33:19"
                },
                {
                  "assignments": [
                    25370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25370,
                      "mutability": "mutable",
                      "name": "feeAmount",
                      "nameLocation": "2515:9:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25415,
                      "src": "2507:17:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25369,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2507:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25377,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 25373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 25371,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25239,
                            "src": "2528:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 25372,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25364,
                            "src": "2538:3:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2528:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 25374,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2527:15:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130303030",
                      "id": 25375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2545:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "2527:23:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2507:43:19"
                },
                {
                  "assignments": [
                    25379
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25379,
                      "mutability": "mutable",
                      "name": "transferPercentage",
                      "nameLocation": "2568:18:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25415,
                      "src": "2560:26:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25378,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2560:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25383,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130303030",
                      "id": 25380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2589:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 25381,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25364,
                      "src": "2597:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2589:11:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2560:40:19"
                },
                {
                  "assignments": [
                    25385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25385,
                      "mutability": "mutable",
                      "name": "transferedAmount",
                      "nameLocation": "2618:16:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25415,
                      "src": "2610:24:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 25384,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2610:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25392,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 25388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 25386,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25239,
                            "src": "2638:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 25387,
                            "name": "transferPercentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25379,
                            "src": "2648:18:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2638:28:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 25389,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2637:30:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "3130303030",
                      "id": 25390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2670:5:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000_by_1",
                        "typeString": "int_const 10000"
                      },
                      "value": "10000"
                    },
                    "src": "2637:38:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2610:65:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "34",
                                "id": 25398,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2724:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                }
                              ],
                              "id": 25397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2716:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25396,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2716:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2716:10:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25394,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25089,
                            "src": "2694:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Controller_$24578",
                              "typeString": "contract Controller"
                            }
                          },
                          "id": 25395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24577,
                          "src": "2694:21:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2694:33:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25401,
                        "name": "transferedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25385,
                        "src": "2729:16:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25393,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2685:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2685:61:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25403,
                  "nodeType": "ExpressionStatement",
                  "src": "2685:61:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "3130",
                                "id": 25409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2795:2:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                }
                              ],
                              "id": 25408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2787:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25407,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2787:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2787:11:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25405,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25089,
                            "src": "2765:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Controller_$24578",
                              "typeString": "contract Controller"
                            }
                          },
                          "id": 25406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24577,
                          "src": "2765:21:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2765:34:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 25412,
                        "name": "feeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25370,
                        "src": "2801:9:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 25404,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2756:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2756:55:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25414,
                  "nodeType": "ExpressionStatement",
                  "src": "2756:55:19"
                }
              ]
            },
            "functionSelector": "365ec7f2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testTransferTokenOutside",
            "nameLocation": "1829:24:19",
            "parameters": {
              "id": 25240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25239,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1862:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25416,
                  "src": "1854:15:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1854:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1853:17:19"
            },
            "returnParameters": {
              "id": 25241,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1878:0:19"
            },
            "scope": 25417,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25085,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4979,
              "src": "161:4:19"
            },
            "id": 25086,
            "nodeType": "InheritanceSpecifier",
            "src": "161:4:19"
          }
        ],
        "canonicalName": "ControllerTest",
        "contractDependencies": [
          24578,
          25080
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25417,
          4979,
          2049,
          1786
        ],
        "name": "ControllerTest",
        "nameLocation": "143:14:19",
        "scope": 25418,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 19
}