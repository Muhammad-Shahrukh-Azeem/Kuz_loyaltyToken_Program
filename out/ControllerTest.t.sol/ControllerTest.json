{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Pb",
      "outputs": [
        {
          "internalType": "contract PhoneBotToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "contract Controller",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_team",
          "type": "address"
        }
      ],
      "name": "testAddTeam",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "testAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBalanceOfOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testCheckOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testContractControl",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_team",
          "type": "address"
        }
      ],
      "name": "testRemoveTeamAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenValues",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6000805462ff00ff19166201000117905561010060405260056080908152600660a052600760c052600860e0526200003c90600a90600462000089565b50604080516080810182526064815260c8602082015261012c9181019190915261019060608201526200007490600b906004620000f3565b503480156200008257600080fd5b506200014e565b828054828255906000526020600020908101928215620000e1579160200282015b82811115620000e157825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190620000aa565b50620000ef92915062000137565b5090565b828054828255906000526020600020908101928215620000e1579160200282015b82811115620000e1578251829061ffff1690559160200191906001019062000114565b5b80821115620000ef576000815560010162000138565b613a60806200015e6000396000f3fe60806040523480156200001157600080fd5b5060043610620000fd5760003560e01c80638347b0c91162000097578063dc3b20b8116200006e578063dc3b20b814620001f5578063f77c479114620001ff578063f8ccbf471462000213578063fa7626d4146200022757600080fd5b80638347b0c914620001af5780639176fa5b14620001c3578063ba414fa614620001da57600080fd5b80636635d07611620000d85780636635d076146200015e5780636b225fe414620001685780636c976dfe146200018e5780637484c04014620001a557600080fd5b80630a9254e414620001025780633a768463146200010e578063483f8e521462000147575b600080fd5b6200010c62000235565b005b6200012a737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6200012a6200015836600462000fda565b620003ab565b6200010c620003d6565b6200017f6200017936600462000fda565b6200069d565b6040519081526020016200013e565b6200010c6200019f3660046200100a565b620006bf565b6200010c620008ec565b6009546200012a906001600160a01b031681565b6200010c620001d43660046200100a565b620009b6565b620001e462000afe565b60405190151581526020016200013e565b6200010c62000c33565b6008546200012a906001600160a01b031681565b600054620001e49062010000900460ff1681565b600054620001e49060ff1681565b6040516303223eab60e11b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200028357600080fd5b505af115801562000298573d6000803e3d6000fd5b50505050604051620002aa9062000fbe565b604051809103906000f080158015620002c7573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b03929092169182179055604051620002f59062000fcc565b6001600160a01b039091168152602001604051809103906000f08015801562000322573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055604080516390c5013b60e01b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d916390c5013b91600480830192600092919082900301818387803b1580156200039057600080fd5b505af1158015620003a5573d6000803e3d6000fd5b50505050565b600a8181548110620003bc57600080fd5b6000918252602090912001546001600160a01b0316905081565b6040516303223eab60e11b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200042457600080fd5b505af115801562000439573d6000803e3d6000fd5b50506009546040516303b2eebd60e51b8152600260048201526001600160a01b03909116925063765dd7a09150602401600060405180830381600087803b1580156200048457600080fd5b505af115801562000499573d6000803e3d6000fd5b505060095460085460405163b11ce2db60e01b81526001600160a01b0391821660048201529116925063b11ce2db9150602401600060405180830381600087803b158015620004e757600080fd5b505af1158015620004fc573d6000803e3d6000fd5b5050600954604051635363afd160e11b8152600260048201526001600160a01b03909116925063a6c75fa29150602401602060405180830381865afa1580156200054a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000570919062001031565b6200057f576200057f62001055565b604080516390c5013b60e01b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d916390c5013b91600480830192600092919082900301818387803b158015620005cc57600080fd5b505af1158015620005e1573d6000803e3d6000fd5b50506040516303223eab60e11b815260026004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b1580156200063357600080fd5b505af115801562000648573d6000803e3d6000fd5b5050600854604051630dad66f160e21b81526001600160a01b0390911692506336b59bc491506200068290600a90600b906004016200106b565b600060405180830381600087803b1580156200039057600080fd5b600b8181548110620006ae57600080fd5b600091825260209091200154905081565b6040516303223eab60e11b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200070d57600080fd5b505af115801562000722573d6000803e3d6000fd5b50506009546040516303b2eebd60e51b81526001600160a01b038581166004830152909116925063765dd7a09150602401600060405180830381600087803b1580156200076e57600080fd5b505af115801562000783573d6000803e3d6000fd5b5050600954604051635363afd160e11b81526001600160a01b038581166004830152909116925063a6c75fa29150602401602060405180830381865afa158015620007d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007f8919062001031565b62000807576200080762001055565b60095460405163d7992d4d60e01b81526001600160a01b0383811660048301529091169063d7992d4d90602401600060405180830381600087803b1580156200084f57600080fd5b505af115801562000864573d6000803e3d6000fd5b5050600954604051635363afd160e11b81526001600160a01b038581166004830152909116925063a6c75fa29150602401602060405180830381865afa158015620008b3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008d9919062001031565b15620008e957620008e962001055565b50565b60095460408051638da5cb5b60e01b8152905162000967926001600160a01b031691638da5cb5b9160048083019260209291908290030181865afa15801562000939573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200095f9190620010fe565b600162000cb6565b60085460408051638da5cb5b60e01b81529051620009b4926001600160a01b031691638da5cb5b9160048083019260209291908290030181865afa15801562000939573d6000803e3d6000fd5b565b6040516303223eab60e11b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b15801562000a0457600080fd5b505af115801562000a19573d6000803e3d6000fd5b50506009546040516303b2eebd60e51b81526001600160a01b038581166004830152909116925063765dd7a09150602401600060405180830381600087803b15801562000a6557600080fd5b505af115801562000a7a573d6000803e3d6000fd5b5050600954604051635363afd160e11b81526001600160a01b038581166004830152909116925063a6c75fa29150602401602060405180830381865afa15801562000ac9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000aef919062001031565b620008e957620008e962001055565b60008054610100900460ff161562000b1f5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000c2e5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000bb0917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016200115c565b60408051601f198184030181529082905262000bcc9162001182565b6000604051808303816000865af19150503d806000811462000c0b576040519150601f19603f3d011682016040523d82523d6000602084013e62000c10565b606091505b509150508080602001905181019062000c2a919062001031565b9150505b919050565b6009546040516370a0823160e01b815260016004820152620009b4916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000c80573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ca6919062001190565b68056bc75e2d6310000062000dc6565b806001600160a01b0316826001600160a01b03161462000dc2577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000d3e9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162000d779190620011aa565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162000db09190620011ef565b60405180910390a162000dc262000eab565b5050565b80821462000dc2577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000e399060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162000e7291906200121a565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162000db0919062001253565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000fad5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000f4892916020016200115c565b60408051601f198184030181529082905262000f649162001182565b6000604051808303816000865af19150503d806000811462000fa3576040519150601f19603f3d011682016040523d82523d6000602084013e62000fa8565b606091505b505050505b6000805461ff001916610100179055565b6118ac806200127f83390190565b610f008062002b2b83390190565b60006020828403121562000fed57600080fd5b5035919050565b6001600160a01b0381168114620008e957600080fd5b6000602082840312156200101d57600080fd5b81356200102a8162000ff4565b9392505050565b6000602082840312156200104457600080fd5b815180151581146200102a57600080fd5b634e487b7160e01b600052600160045260246000fd5b60006040820160408352808554808352606085019150600092508683526020808420845b83811015620010b65781546001600160a01b0316855293820193600191820191016200108f565b505085830381870152865480845287855281852093820192505b80851015620010f157835483526001948501949093019291810191620010d0565b5090979650505050505050565b6000602082840312156200111157600080fd5b81516200102a8162000ff4565b6000815160005b8181101562001141576020818501810151868301520162001125565b8181111562001151576000828601525b509290920192915050565b6001600160e01b03198316815260006200117a60048301846200111e565b949350505050565b60006200102a82846200111e565b600060208284031215620011a357600080fd5b5051919050565b604081526000620011d560408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b604081526000620011d560408301600a815269080808081058dd1d585b60b21b602082015260400190565b6040815260006200124560408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b6040815260006200124560408301600a815269080808081058dd1d585b60b21b60208201526040019056fe60806040526005805460ff60a81b191690553480156200001e57600080fd5b506040518060400160405280600d81526020016c283437b732a137ba2a37b5b2b760991b8152506040518060400160405280600381526020016214109560ea1b81525081600390805190602001906200007992919062000295565b5080516200008f90600490602084019062000295565b50506005805460ff1916905550620000a733620000d3565b620000cd33620000ba6012600a62000450565b620000c790606462000468565b6200012d565b620004e1565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001895760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b620001976000838362000224565b8060026000828254620001ab91906200048a565b90915550506001600160a01b03821660009081526020819052604081208054839290620001da9084906200048a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6200022e6200024b565b620002468383836200024660201b6200059b1760201c565b505050565b60055460ff1615620002935760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640162000180565b565b828054620002a390620004a5565b90600052602060002090601f016020900481019282620002c7576000855562000312565b82601f10620002e257805160ff191683800117855562000312565b8280016001018555821562000312579182015b8281111562000312578251825591602001919060010190620002f5565b506200032092915062000324565b5090565b5b8082111562000320576000815560010162000325565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003925781600019048211156200037657620003766200033b565b808516156200038457918102915b93841c939080029062000356565b509250929050565b600082620003ab575060016200044a565b81620003ba575060006200044a565b8160018114620003d35760028114620003de57620003fe565b60019150506200044a565b60ff841115620003f257620003f26200033b565b50506001821b6200044a565b5060208310610133831016604e8410600b841016171562000423575081810a6200044a565b6200042f838362000351565b80600019048211156200044657620004466200033b565b0290505b92915050565b60006200046160ff8416836200039a565b9392505050565b60008160001904831182151516156200048557620004856200033b565b500290565b60008219821115620004a057620004a06200033b565b500190565b600181811c90821680620004ba57607f821691505b602082108103620004db57634e487b7160e01b600052602260045260246000fd5b50919050565b6113bb80620004f16000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063715018a6116100f9578063a6c75fa211610097578063cd748abb11610071578063cd748abb146103c1578063d7992d4d146103d4578063dd62ed3e146103e7578063f2fde38b146103fa57600080fd5b8063a6c75fa214610378578063a9059cbb1461039b578063b11ce2db146103ae57600080fd5b80638456cb59116100d35780638456cb591461032c5780638da5cb5b1461033457806395d89b411461035d578063a457c2d71461036557600080fd5b8063715018a6146102fe578063765dd7a01461030657806379cc67901461031957600080fd5b8063313ce5671161016657806340c10f191161014057806340c10f19146102a457806342966c68146102b75780635c975abb146102ca57806370a08231146102d557600080fd5b8063313ce5671461027a57806339509351146102895780633f4ba83a1461029c57600080fd5b806318160ddd116101a257806318160ddd1461021f57806323b872dd1461023157806324a38063146102445780632955323c1461025757600080fd5b806306fdde03146101c9578063095ea7b3146101e75780631501bf031461020a575b600080fd5b6101d161040d565b6040516101de919061119f565b60405180910390f35b6101fa6101f5366004611210565b61049f565b60405190151581526020016101de565b61021d61021836600461123a565b6104b7565b005b6002545b6040519081526020016101de565b6101fa61023f36600461123a565b6105a0565b61021d610252366004611276565b610618565b6101fa61026536600461129f565b60076020526000908152604090205460ff1681565b604051601281526020016101de565b6101fa610297366004611210565b61063e565b61021d610660565b61021d6102b2366004611210565b610672565b61021d6102c53660046112ba565b6106e2565b60055460ff166101fa565b6102236102e336600461129f565b6001600160a01b031660009081526020819052604090205490565b61021d6106ef565b61021d61031436600461129f565b610701565b61021d610327366004611210565b610767565b61021d61077c565b60055461010090046001600160a01b03166040516001600160a01b0390911681526020016101de565b6101d161078c565b6101fa610373366004611210565b61079b565b6101fa61038636600461129f565b60066020526000908152604090205460ff1681565b6101fa6103a9366004611210565b610816565b61021d6103bc36600461129f565b610878565b61021d6103cf366004611210565b6108de565b61021d6103e236600461129f565b61093d565b6102236103f53660046112d3565b610966565b61021d61040836600461129f565b610991565b60606003805461041c90611306565b80601f016020809104026020016040519081016040528092919081815260200182805461044890611306565b80156104955780601f1061046a57610100808354040283529160200191610495565b820191906000526020600020905b81548152906001019060200180831161047857829003601f168201915b5050505050905090565b6000336104ad818585610a07565b5060019392505050565b3360009081526006602052604090205460ff166105165760405162461bcd60e51b8152602060048201526018602482015277596f7520617265206e6f742070617274206f66207465616d60401b60448201526064015b60405180910390fd5b80610536846001600160a01b031660009081526020819052604090205490565b101561055557604051633bf1830560e21b815260040160405180910390fd5b6001600160a01b038316158061057257506001600160a01b038216155b15610590576040516309f9845360e01b815260040160405180910390fd5b61059b838383610b2b565b505050565b600554600090600160a81b900460ff166105f65760405162461bcd60e51b8152602060048201526017602482015276151a1a5cc81a5cc81b9bdd08185b1b1bddd959081e595d604a1b604482015260640161050d565b33610602858285610d06565b61060d858585610b2b565b506001949350505050565b610620610d7a565b60058054911515600160a81b0260ff60a81b19909216919091179055565b6000336104ad8185856106518383610966565b61065b9190611356565b610a07565b610668610d7a565b610670610dda565b565b3360009081526006602052604090205460ff166106cc5760405162461bcd60e51b8152602060048201526018602482015277596f7520617265206e6f742070617274206f66207465616d60401b604482015260640161050d565b6106d4610e2c565b6106de8282610e72565b5050565b6106ec3382610f5d565b50565b6106f7610d7a565b61067060006110b7565b610709610d7a565b6001600160a01b03811660009081526006602052604090205460ff16156107435760405163f411c32760e01b815260040160405180910390fd5b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b610772823383610d06565b6106de8282610f5d565b610784610d7a565b610670611111565b60606004805461041c90611306565b600033816107a98286610966565b9050838110156108095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161050d565b61060d8286868403610a07565b600554600090600160a81b900460ff1661086c5760405162461bcd60e51b8152602060048201526017602482015276151a1a5cc81a5cc81b9bdd08185b1b1bddd959081e595d604a1b604482015260640161050d565b336104ad818585610b2b565b610880610d7a565b6001600160a01b03811660009081526007602052604090205460ff16156108ba5760405163f411c32760e01b815260040160405180910390fd5b6001600160a01b03166000908152600760205260409020805460ff19166001179055565b3360009081526007602052604090205460ff166106cc5760405162461bcd60e51b815260206004820152601960248201527f5468697320636f6e7472616374204e6f7420416c6c6f77656400000000000000604482015260640161050d565b610945610d7a565b6001600160a01b03166000908152600660205260409020805460ff19169055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610999610d7a565b6001600160a01b0381166109fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161050d565b6106ec816110b7565b6001600160a01b038316610a695760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161050d565b6001600160a01b038216610aca5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161050d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b8f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161050d565b6001600160a01b038216610bf15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161050d565b610bfc83838361114e565b6001600160a01b03831660009081526020819052604090205481811015610c745760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161050d565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610cab908490611356565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cf791815260200190565b60405180910390a35b50505050565b6000610d128484610966565b90506000198114610d005781811015610d6d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161050d565b610d008484848403610a07565b6005546001600160a01b036101009091041633146106705760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050d565b610de2611156565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60055460ff16156106705760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161050d565b6001600160a01b038216610ec85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161050d565b610ed46000838361114e565b8060026000828254610ee69190611356565b90915550506001600160a01b03821660009081526020819052604081208054839290610f13908490611356565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610fbd5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161050d565b610fc98260008361114e565b6001600160a01b0382166000908152602081905260409020548181101561103d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161050d565b6001600160a01b038316600090815260208190526040812083830390556002805484929061106c90849061136e565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611119610e2c565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e0f3390565b61059b610e2c565b60055460ff166106705760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161050d565b600060208083528351808285015260005b818110156111cc578581018301518582016040015282016111b0565b818111156111de576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461120b57600080fd5b919050565b6000806040838503121561122357600080fd5b61122c836111f4565b946020939093013593505050565b60008060006060848603121561124f57600080fd5b611258846111f4565b9250611266602085016111f4565b9150604084013590509250925092565b60006020828403121561128857600080fd5b8135801515811461129857600080fd5b9392505050565b6000602082840312156112b157600080fd5b611298826111f4565b6000602082840312156112cc57600080fd5b5035919050565b600080604083850312156112e657600080fd5b6112ef836111f4565b91506112fd602084016111f4565b90509250929050565b600181811c9082168061131a57607f821691505b60208210810361133a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561136957611369611340565b500190565b60008282101561138057611380611340565b50039056fea26469706673582212204981881cc3e988bf650a29b5df479095af3b5b5a081becdb59f136b7bd7777bc64736f6c634300080e003360806040526107d06001556103e860025534801561001c57600080fd5b50604051610f00380380610f0083398101604081905261003b916100be565b6100443361006e565b600380546001600160a01b03909216610100026001600160a81b03199092169190911790556100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b610e03806100fd6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637f1bee2311610097578063b54dd71011610066578063b54dd710146101c9578063bea1dcf8146101dc578063ead7a1dc146101ef578063f2fde38b146101f857600080fd5b80637f1bee231461017d5780637f4226691461019d578063864879bb146101a55780638da5cb5b146101b857600080fd5b806336b59bc4116100d357806336b59bc4146101395780635c975abb1461014c57806369fe0e2d14610162578063715018a61461017557600080fd5b806308695b41146100fa5780630cda45c81461010f5780631b29036914610126575b600080fd5b61010d610108366004610ad5565b61020b565b005b6001545b6040519081526020015b60405180910390f35b61010d610134366004610af0565b610255565b61010d610147366004610bf2565b61045d565b60035460ff16604051901515815260200161011d565b61010d610170366004610cb2565b6106e7565b61010d610731565b610185610745565b6040516001600160a01b03909116815260200161011d565b600254610113565b61010d6101b3366004610cb2565b61075f565b6000546001600160a01b0316610185565b61010d6101d7366004610ccb565b6107a2565b600554610185906001600160a01b031681565b61011360045481565b61010d610206366004610ad5565b6108fa565b610213610973565b803b1561023357604051632111dc4760e01b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b600354604051635363afd160e11b81523360048201526101009091046001600160a01b03169063a6c75fa290602401602060405180830381865afa1580156102a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c59190610cf5565b6103115760405162461bcd60e51b8152602060048201526018602482015277596f7520617265206e6f742070617274206f66207465616d60401b60448201526064015b60405180910390fd5b6103196109cd565b6003546040516370a0823160e01b81526001600160a01b0383811660048301528492610100900416906370a0823190602401602060405180830381865afa158015610368573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038c9190610d17565b10156103ab5760405163569d45cf60e11b815260040160405180910390fd5b60035460405163079cc67960e41b81526001600160a01b03838116600483015260248201859052610100909204909116906379cc679090604401600060405180830381600087803b1580156103ff57600080fd5b505af1158015610413573d6000803e3d6000fd5b5050604080518581526001600160a01b03851660208201527f63706707d038997d2210eb026bb1339397deab463921538a81bb98e69ee54ca8935001905060405180910390a15050565b600354604051635363afd160e11b81523360048201526101009091046001600160a01b03169063a6c75fa290602401602060405180830381865afa1580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd9190610cf5565b6105145760405162461bcd60e51b8152602060048201526018602482015277596f7520617265206e6f742070617274206f66207465616d60401b6044820152606401610308565b61051c6109cd565b805182511461053e57604051630c17582360e31b815260040160405180910390fd5b60005b82518110156106e25760006001600160a01b031683828151811061056757610567610d30565b60200260200101516001600160a01b031603610596576040516309f9845360e01b815260040160405180910390fd5b600360019054906101000a90046001600160a01b03166001600160a01b031663cd748abb8483815181106105cc576105cc610d30565b60200260200101518484815181106105e6576105e6610d30565b60200260200101516040518363ffffffff1660e01b815260040161061f9291906001600160a01b03929092168252602082015260400190565b600060405180830381600087803b15801561063957600080fd5b505af115801561064d573d6000803e3d6000fd5b505050507fe6b392a485300aed5d0afd949a6e7bbb13d3dc1a15efa0a0c1630b48ae54ca4683828151811061068457610684610d30565b602002602001015183838151811061069e5761069e610d30565b60200260200101516040516106c89291906001600160a01b03929092168252602082015260400190565b60405180910390a1806106da81610d5c565b915050610541565b505050565b6106ef610973565b600181905560408051828152602081018390527fed28c14db89870da08d76b69e3f96d95cbb779778f62a9ea4d4d41dc082d088a91015b60405180910390a150565b610739610973565b6107436000610a13565b565b600061074f610973565b506005546001600160a01b031690565b610767610973565b600281905560408051828152602081018390527f6a83cc218b6e35f4b68868b8cf2a7968201acfd91f619cd387fb092745e5b8dc9101610726565b6001600160a01b0382166107c957604051633415fd6160e11b815260040160405180910390fd5b600081116107ea5760405163114617e760e21b815260040160405180910390fd5b60006107f582610a63565b9050600061080283610a96565b9050600033600354600554604051631501bf0360e01b81526001600160a01b0380851660048301529182166024820152604481018690529293506101009091041690631501bf0390606401600060405180830381600087803b15801561086757600080fd5b505af115801561087b573d6000803e3d6000fd5b5050600354604051631501bf0360e01b81526001600160a01b0385811660048301528981166024830152604482018890526101009092049091169250631501bf039150606401600060405180830381600087803b1580156108db57600080fd5b505af11580156108ef573d6000803e3d6000fd5b505050505050505050565b610902610973565b6001600160a01b0381166109675760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610308565b61097081610a13565b50565b6000546001600160a01b031633146107435760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b60035460ff16156107435760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610308565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600154612710610a769190610d75565b9050612710610a858285610d8c565b610a8f9190610dab565b9392505050565b600061271060015483610aa99190610d8c565b610ab39190610dab565b92915050565b80356001600160a01b0381168114610ad057600080fd5b919050565b600060208284031215610ae757600080fd5b610a8f82610ab9565b60008060408385031215610b0357600080fd5b82359150610b1360208401610ab9565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b5b57610b5b610b1c565b604052919050565b600067ffffffffffffffff821115610b7d57610b7d610b1c565b5060051b60200190565b600082601f830112610b9857600080fd5b81356020610bad610ba883610b63565b610b32565b82815260059290921b84018101918181019086841115610bcc57600080fd5b8286015b84811015610be75780358352918301918301610bd0565b509695505050505050565b60008060408385031215610c0557600080fd5b823567ffffffffffffffff80821115610c1d57600080fd5b818501915085601f830112610c3157600080fd5b81356020610c41610ba883610b63565b82815260059290921b84018101918181019089841115610c6057600080fd5b948201945b83861015610c8557610c7686610ab9565b82529482019490820190610c65565b96505086013592505080821115610c9b57600080fd5b50610ca885828601610b87565b9150509250929050565b600060208284031215610cc457600080fd5b5035919050565b60008060408385031215610cde57600080fd5b610ce783610ab9565b946020939093013593505050565b600060208284031215610d0757600080fd5b81518015158114610a8f57600080fd5b600060208284031215610d2957600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610d6e57610d6e610d46565b5060010190565b600082821015610d8757610d87610d46565b500390565b6000816000190483118215151615610da657610da6610d46565b500290565b600082610dc857634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220cd758817f16930b83e8f48eac4b16d64c1235cbb8011f8853f3cccbf2f968c5e64736f6c634300080e0033a2646970667358221220c260c390c73f98d6f49eaa9efbf6e27bbe123546245a2fd2a217c46583ea219664736f6c634300080e0033",
    "sourceMap": "1572:26:0:-:0;;;-1:-1:-1;;170:28:1;;;;;1572:26:0;135:4085:19;237:81;279:1;135:4085;237:81;;;291:1;237:81;;303:1;237:81;;315:1;237:81;;;;;;;;:::i;:::-;-1:-1:-1;324:51:19;;;;;;;;356:3;324:51;;361:3;324:51;;;;366:3;324:51;;;;;;;371:3;324:51;;;;;;;;;;:::i;:::-;;135:4085;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;135:4085:19;-1:-1:-1;;;;;135:4085:19;;;;;;;;;;;-1:-1:-1;135:4085:19;;;;;;;-1:-1:-1;135:4085:19;;;-1:-1:-1;135:4085:19;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000fd5760003560e01c80638347b0c91162000097578063dc3b20b8116200006e578063dc3b20b814620001f5578063f77c479114620001ff578063f8ccbf471462000213578063fa7626d4146200022757600080fd5b80638347b0c914620001af5780639176fa5b14620001c3578063ba414fa614620001da57600080fd5b80636635d07611620000d85780636635d076146200015e5780636b225fe414620001685780636c976dfe146200018e5780637484c04014620001a557600080fd5b80630a9254e414620001025780633a768463146200010e578063483f8e521462000147575b600080fd5b6200010c62000235565b005b6200012a737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6200012a6200015836600462000fda565b620003ab565b6200010c620003d6565b6200017f6200017936600462000fda565b6200069d565b6040519081526020016200013e565b6200010c6200019f3660046200100a565b620006bf565b6200010c620008ec565b6009546200012a906001600160a01b031681565b6200010c620001d43660046200100a565b620009b6565b620001e462000afe565b60405190151581526020016200013e565b6200010c62000c33565b6008546200012a906001600160a01b031681565b600054620001e49062010000900460ff1681565b600054620001e49060ff1681565b6040516303223eab60e11b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200028357600080fd5b505af115801562000298573d6000803e3d6000fd5b50505050604051620002aa9062000fbe565b604051809103906000f080158015620002c7573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b03929092169182179055604051620002f59062000fcc565b6001600160a01b039091168152602001604051809103906000f08015801562000322573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055604080516390c5013b60e01b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d916390c5013b91600480830192600092919082900301818387803b1580156200039057600080fd5b505af1158015620003a5573d6000803e3d6000fd5b50505050565b600a8181548110620003bc57600080fd5b6000918252602090912001546001600160a01b0316905081565b6040516303223eab60e11b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200042457600080fd5b505af115801562000439573d6000803e3d6000fd5b50506009546040516303b2eebd60e51b8152600260048201526001600160a01b03909116925063765dd7a09150602401600060405180830381600087803b1580156200048457600080fd5b505af115801562000499573d6000803e3d6000fd5b505060095460085460405163b11ce2db60e01b81526001600160a01b0391821660048201529116925063b11ce2db9150602401600060405180830381600087803b158015620004e757600080fd5b505af1158015620004fc573d6000803e3d6000fd5b5050600954604051635363afd160e11b8152600260048201526001600160a01b03909116925063a6c75fa29150602401602060405180830381865afa1580156200054a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000570919062001031565b6200057f576200057f62001055565b604080516390c5013b60e01b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d916390c5013b91600480830192600092919082900301818387803b158015620005cc57600080fd5b505af1158015620005e1573d6000803e3d6000fd5b50506040516303223eab60e11b815260026004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d92506306447d569150602401600060405180830381600087803b1580156200063357600080fd5b505af115801562000648573d6000803e3d6000fd5b5050600854604051630dad66f160e21b81526001600160a01b0390911692506336b59bc491506200068290600a90600b906004016200106b565b600060405180830381600087803b1580156200039057600080fd5b600b8181548110620006ae57600080fd5b600091825260209091200154905081565b6040516303223eab60e11b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b1580156200070d57600080fd5b505af115801562000722573d6000803e3d6000fd5b50506009546040516303b2eebd60e51b81526001600160a01b038581166004830152909116925063765dd7a09150602401600060405180830381600087803b1580156200076e57600080fd5b505af115801562000783573d6000803e3d6000fd5b5050600954604051635363afd160e11b81526001600160a01b038581166004830152909116925063a6c75fa29150602401602060405180830381865afa158015620007d2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007f8919062001031565b62000807576200080762001055565b60095460405163d7992d4d60e01b81526001600160a01b0383811660048301529091169063d7992d4d90602401600060405180830381600087803b1580156200084f57600080fd5b505af115801562000864573d6000803e3d6000fd5b5050600954604051635363afd160e11b81526001600160a01b038581166004830152909116925063a6c75fa29150602401602060405180830381865afa158015620008b3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620008d9919062001031565b15620008e957620008e962001055565b50565b60095460408051638da5cb5b60e01b8152905162000967926001600160a01b031691638da5cb5b9160048083019260209291908290030181865afa15801562000939573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200095f9190620010fe565b600162000cb6565b60085460408051638da5cb5b60e01b81529051620009b4926001600160a01b031691638da5cb5b9160048083019260209291908290030181865afa15801562000939573d6000803e3d6000fd5b565b6040516303223eab60e11b815260016004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906306447d5690602401600060405180830381600087803b15801562000a0457600080fd5b505af115801562000a19573d6000803e3d6000fd5b50506009546040516303b2eebd60e51b81526001600160a01b038581166004830152909116925063765dd7a09150602401600060405180830381600087803b15801562000a6557600080fd5b505af115801562000a7a573d6000803e3d6000fd5b5050600954604051635363afd160e11b81526001600160a01b038581166004830152909116925063a6c75fa29150602401602060405180830381865afa15801562000ac9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000aef919062001031565b620008e957620008e962001055565b60008054610100900460ff161562000b1f5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000c2e5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000bb0917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016200115c565b60408051601f198184030181529082905262000bcc9162001182565b6000604051808303816000865af19150503d806000811462000c0b576040519150601f19603f3d011682016040523d82523d6000602084013e62000c10565b606091505b509150508080602001905181019062000c2a919062001031565b9150505b919050565b6009546040516370a0823160e01b815260016004820152620009b4916001600160a01b0316906370a0823190602401602060405180830381865afa15801562000c80573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ca6919062001190565b68056bc75e2d6310000062000dc6565b806001600160a01b0316826001600160a01b03161462000dc2577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000d3e9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405162000d779190620011aa565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8260405162000db09190620011ef565b60405180910390a162000dc262000eab565b5050565b80821462000dc2577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162000e399060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88160405162000e7291906200121a565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a88260405162000db0919062001253565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562000fad5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905262000f4892916020016200115c565b60408051601f198184030181529082905262000f649162001182565b6000604051808303816000865af19150503d806000811462000fa3576040519150601f19603f3d011682016040523d82523d6000602084013e62000fa8565b606091505b505050505b6000805461ff001916610100179055565b6118ac806200127f83390190565b610f008062002b2b83390190565b60006020828403121562000fed57600080fd5b5035919050565b6001600160a01b0381168114620008e957600080fd5b6000602082840312156200101d57600080fd5b81356200102a8162000ff4565b9392505050565b6000602082840312156200104457600080fd5b815180151581146200102a57600080fd5b634e487b7160e01b600052600160045260246000fd5b60006040820160408352808554808352606085019150600092508683526020808420845b83811015620010b65781546001600160a01b0316855293820193600191820191016200108f565b505085830381870152865480845287855281852093820192505b80851015620010f157835483526001948501949093019291810191620010d0565b5090979650505050505050565b6000602082840312156200111157600080fd5b81516200102a8162000ff4565b6000815160005b8181101562001141576020818501810151868301520162001125565b8181111562001151576000828601525b509290920192915050565b6001600160e01b03198316815260006200117a60048301846200111e565b949350505050565b60006200102a82846200111e565b600060208284031215620011a357600080fd5b5051919050565b604081526000620011d560408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b604081526000620011d560408301600a815269080808081058dd1d585b60b21b602082015260400190565b6040815260006200124560408301600a8152690808115e1c1958dd195960b21b602082015260400190565b905082602083015292915050565b6040815260006200124560408301600a815269080808081058dd1d585b60b21b60208201526040019056fe60806040526005805460ff60a81b191690553480156200001e57600080fd5b506040518060400160405280600d81526020016c283437b732a137ba2a37b5b2b760991b8152506040518060400160405280600381526020016214109560ea1b81525081600390805190602001906200007992919062000295565b5080516200008f90600490602084019062000295565b50506005805460ff1916905550620000a733620000d3565b620000cd33620000ba6012600a62000450565b620000c790606462000468565b6200012d565b620004e1565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001895760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b620001976000838362000224565b8060026000828254620001ab91906200048a565b90915550506001600160a01b03821660009081526020819052604081208054839290620001da9084906200048a565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6200022e6200024b565b620002468383836200024660201b6200059b1760201c565b505050565b60055460ff1615620002935760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640162000180565b565b828054620002a390620004a5565b90600052602060002090601f016020900481019282620002c7576000855562000312565b82601f10620002e257805160ff191683800117855562000312565b8280016001018555821562000312579182015b8281111562000312578251825591602001919060010190620002f5565b506200032092915062000324565b5090565b5b8082111562000320576000815560010162000325565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003925781600019048211156200037657620003766200033b565b808516156200038457918102915b93841c939080029062000356565b509250929050565b600082620003ab575060016200044a565b81620003ba575060006200044a565b8160018114620003d35760028114620003de57620003fe565b60019150506200044a565b60ff841115620003f257620003f26200033b565b50506001821b6200044a565b5060208310610133831016604e8410600b841016171562000423575081810a6200044a565b6200042f838362000351565b80600019048211156200044657620004466200033b565b0290505b92915050565b60006200046160ff8416836200039a565b9392505050565b60008160001904831182151516156200048557620004856200033b565b500290565b60008219821115620004a057620004a06200033b565b500190565b600181811c90821680620004ba57607f821691505b602082108103620004db57634e487b7160e01b600052602260045260246000fd5b50919050565b6113bb80620004f16000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c8063715018a6116100f9578063a6c75fa211610097578063cd748abb11610071578063cd748abb146103c1578063d7992d4d146103d4578063dd62ed3e146103e7578063f2fde38b146103fa57600080fd5b8063a6c75fa214610378578063a9059cbb1461039b578063b11ce2db146103ae57600080fd5b80638456cb59116100d35780638456cb591461032c5780638da5cb5b1461033457806395d89b411461035d578063a457c2d71461036557600080fd5b8063715018a6146102fe578063765dd7a01461030657806379cc67901461031957600080fd5b8063313ce5671161016657806340c10f191161014057806340c10f19146102a457806342966c68146102b75780635c975abb146102ca57806370a08231146102d557600080fd5b8063313ce5671461027a57806339509351146102895780633f4ba83a1461029c57600080fd5b806318160ddd116101a257806318160ddd1461021f57806323b872dd1461023157806324a38063146102445780632955323c1461025757600080fd5b806306fdde03146101c9578063095ea7b3146101e75780631501bf031461020a575b600080fd5b6101d161040d565b6040516101de919061119f565b60405180910390f35b6101fa6101f5366004611210565b61049f565b60405190151581526020016101de565b61021d61021836600461123a565b6104b7565b005b6002545b6040519081526020016101de565b6101fa61023f36600461123a565b6105a0565b61021d610252366004611276565b610618565b6101fa61026536600461129f565b60076020526000908152604090205460ff1681565b604051601281526020016101de565b6101fa610297366004611210565b61063e565b61021d610660565b61021d6102b2366004611210565b610672565b61021d6102c53660046112ba565b6106e2565b60055460ff166101fa565b6102236102e336600461129f565b6001600160a01b031660009081526020819052604090205490565b61021d6106ef565b61021d61031436600461129f565b610701565b61021d610327366004611210565b610767565b61021d61077c565b60055461010090046001600160a01b03166040516001600160a01b0390911681526020016101de565b6101d161078c565b6101fa610373366004611210565b61079b565b6101fa61038636600461129f565b60066020526000908152604090205460ff1681565b6101fa6103a9366004611210565b610816565b61021d6103bc36600461129f565b610878565b61021d6103cf366004611210565b6108de565b61021d6103e236600461129f565b61093d565b6102236103f53660046112d3565b610966565b61021d61040836600461129f565b610991565b60606003805461041c90611306565b80601f016020809104026020016040519081016040528092919081815260200182805461044890611306565b80156104955780601f1061046a57610100808354040283529160200191610495565b820191906000526020600020905b81548152906001019060200180831161047857829003601f168201915b5050505050905090565b6000336104ad818585610a07565b5060019392505050565b3360009081526006602052604090205460ff166105165760405162461bcd60e51b8152602060048201526018602482015277596f7520617265206e6f742070617274206f66207465616d60401b60448201526064015b60405180910390fd5b80610536846001600160a01b031660009081526020819052604090205490565b101561055557604051633bf1830560e21b815260040160405180910390fd5b6001600160a01b038316158061057257506001600160a01b038216155b15610590576040516309f9845360e01b815260040160405180910390fd5b61059b838383610b2b565b505050565b600554600090600160a81b900460ff166105f65760405162461bcd60e51b8152602060048201526017602482015276151a1a5cc81a5cc81b9bdd08185b1b1bddd959081e595d604a1b604482015260640161050d565b33610602858285610d06565b61060d858585610b2b565b506001949350505050565b610620610d7a565b60058054911515600160a81b0260ff60a81b19909216919091179055565b6000336104ad8185856106518383610966565b61065b9190611356565b610a07565b610668610d7a565b610670610dda565b565b3360009081526006602052604090205460ff166106cc5760405162461bcd60e51b8152602060048201526018602482015277596f7520617265206e6f742070617274206f66207465616d60401b604482015260640161050d565b6106d4610e2c565b6106de8282610e72565b5050565b6106ec3382610f5d565b50565b6106f7610d7a565b61067060006110b7565b610709610d7a565b6001600160a01b03811660009081526006602052604090205460ff16156107435760405163f411c32760e01b815260040160405180910390fd5b6001600160a01b03166000908152600660205260409020805460ff19166001179055565b610772823383610d06565b6106de8282610f5d565b610784610d7a565b610670611111565b60606004805461041c90611306565b600033816107a98286610966565b9050838110156108095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161050d565b61060d8286868403610a07565b600554600090600160a81b900460ff1661086c5760405162461bcd60e51b8152602060048201526017602482015276151a1a5cc81a5cc81b9bdd08185b1b1bddd959081e595d604a1b604482015260640161050d565b336104ad818585610b2b565b610880610d7a565b6001600160a01b03811660009081526007602052604090205460ff16156108ba5760405163f411c32760e01b815260040160405180910390fd5b6001600160a01b03166000908152600760205260409020805460ff19166001179055565b3360009081526007602052604090205460ff166106cc5760405162461bcd60e51b815260206004820152601960248201527f5468697320636f6e7472616374204e6f7420416c6c6f77656400000000000000604482015260640161050d565b610945610d7a565b6001600160a01b03166000908152600660205260409020805460ff19169055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610999610d7a565b6001600160a01b0381166109fe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161050d565b6106ec816110b7565b6001600160a01b038316610a695760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161050d565b6001600160a01b038216610aca5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161050d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610b8f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161050d565b6001600160a01b038216610bf15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161050d565b610bfc83838361114e565b6001600160a01b03831660009081526020819052604090205481811015610c745760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161050d565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610cab908490611356565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cf791815260200190565b60405180910390a35b50505050565b6000610d128484610966565b90506000198114610d005781811015610d6d5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161050d565b610d008484848403610a07565b6005546001600160a01b036101009091041633146106705760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161050d565b610de2611156565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60055460ff16156106705760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161050d565b6001600160a01b038216610ec85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161050d565b610ed46000838361114e565b8060026000828254610ee69190611356565b90915550506001600160a01b03821660009081526020819052604081208054839290610f13908490611356565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610fbd5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161050d565b610fc98260008361114e565b6001600160a01b0382166000908152602081905260409020548181101561103d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161050d565b6001600160a01b038316600090815260208190526040812083830390556002805484929061106c90849061136e565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611119610e2c565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e0f3390565b61059b610e2c565b60055460ff166106705760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161050d565b600060208083528351808285015260005b818110156111cc578581018301518582016040015282016111b0565b818111156111de576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461120b57600080fd5b919050565b6000806040838503121561122357600080fd5b61122c836111f4565b946020939093013593505050565b60008060006060848603121561124f57600080fd5b611258846111f4565b9250611266602085016111f4565b9150604084013590509250925092565b60006020828403121561128857600080fd5b8135801515811461129857600080fd5b9392505050565b6000602082840312156112b157600080fd5b611298826111f4565b6000602082840312156112cc57600080fd5b5035919050565b600080604083850312156112e657600080fd5b6112ef836111f4565b91506112fd602084016111f4565b90509250929050565b600181811c9082168061131a57607f821691505b60208210810361133a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561136957611369611340565b500190565b60008282101561138057611380611340565b50039056fea26469706673582212204981881cc3e988bf650a29b5df479095af3b5b5a081becdb59f136b7bd7777bc64736f6c634300080e003360806040526107d06001556103e860025534801561001c57600080fd5b50604051610f00380380610f0083398101604081905261003b916100be565b6100443361006e565b600380546001600160a01b03909216610100026001600160a81b03199092169190911790556100ee565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d057600080fd5b81516001600160a01b03811681146100e757600080fd5b9392505050565b610e03806100fd6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637f1bee2311610097578063b54dd71011610066578063b54dd710146101c9578063bea1dcf8146101dc578063ead7a1dc146101ef578063f2fde38b146101f857600080fd5b80637f1bee231461017d5780637f4226691461019d578063864879bb146101a55780638da5cb5b146101b857600080fd5b806336b59bc4116100d357806336b59bc4146101395780635c975abb1461014c57806369fe0e2d14610162578063715018a61461017557600080fd5b806308695b41146100fa5780630cda45c81461010f5780631b29036914610126575b600080fd5b61010d610108366004610ad5565b61020b565b005b6001545b6040519081526020015b60405180910390f35b61010d610134366004610af0565b610255565b61010d610147366004610bf2565b61045d565b60035460ff16604051901515815260200161011d565b61010d610170366004610cb2565b6106e7565b61010d610731565b610185610745565b6040516001600160a01b03909116815260200161011d565b600254610113565b61010d6101b3366004610cb2565b61075f565b6000546001600160a01b0316610185565b61010d6101d7366004610ccb565b6107a2565b600554610185906001600160a01b031681565b61011360045481565b61010d610206366004610ad5565b6108fa565b610213610973565b803b1561023357604051632111dc4760e01b815260040160405180910390fd5b600580546001600160a01b0319166001600160a01b0392909216919091179055565b600354604051635363afd160e11b81523360048201526101009091046001600160a01b03169063a6c75fa290602401602060405180830381865afa1580156102a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c59190610cf5565b6103115760405162461bcd60e51b8152602060048201526018602482015277596f7520617265206e6f742070617274206f66207465616d60401b60448201526064015b60405180910390fd5b6103196109cd565b6003546040516370a0823160e01b81526001600160a01b0383811660048301528492610100900416906370a0823190602401602060405180830381865afa158015610368573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038c9190610d17565b10156103ab5760405163569d45cf60e11b815260040160405180910390fd5b60035460405163079cc67960e41b81526001600160a01b03838116600483015260248201859052610100909204909116906379cc679090604401600060405180830381600087803b1580156103ff57600080fd5b505af1158015610413573d6000803e3d6000fd5b5050604080518581526001600160a01b03851660208201527f63706707d038997d2210eb026bb1339397deab463921538a81bb98e69ee54ca8935001905060405180910390a15050565b600354604051635363afd160e11b81523360048201526101009091046001600160a01b03169063a6c75fa290602401602060405180830381865afa1580156104a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cd9190610cf5565b6105145760405162461bcd60e51b8152602060048201526018602482015277596f7520617265206e6f742070617274206f66207465616d60401b6044820152606401610308565b61051c6109cd565b805182511461053e57604051630c17582360e31b815260040160405180910390fd5b60005b82518110156106e25760006001600160a01b031683828151811061056757610567610d30565b60200260200101516001600160a01b031603610596576040516309f9845360e01b815260040160405180910390fd5b600360019054906101000a90046001600160a01b03166001600160a01b031663cd748abb8483815181106105cc576105cc610d30565b60200260200101518484815181106105e6576105e6610d30565b60200260200101516040518363ffffffff1660e01b815260040161061f9291906001600160a01b03929092168252602082015260400190565b600060405180830381600087803b15801561063957600080fd5b505af115801561064d573d6000803e3d6000fd5b505050507fe6b392a485300aed5d0afd949a6e7bbb13d3dc1a15efa0a0c1630b48ae54ca4683828151811061068457610684610d30565b602002602001015183838151811061069e5761069e610d30565b60200260200101516040516106c89291906001600160a01b03929092168252602082015260400190565b60405180910390a1806106da81610d5c565b915050610541565b505050565b6106ef610973565b600181905560408051828152602081018390527fed28c14db89870da08d76b69e3f96d95cbb779778f62a9ea4d4d41dc082d088a91015b60405180910390a150565b610739610973565b6107436000610a13565b565b600061074f610973565b506005546001600160a01b031690565b610767610973565b600281905560408051828152602081018390527f6a83cc218b6e35f4b68868b8cf2a7968201acfd91f619cd387fb092745e5b8dc9101610726565b6001600160a01b0382166107c957604051633415fd6160e11b815260040160405180910390fd5b600081116107ea5760405163114617e760e21b815260040160405180910390fd5b60006107f582610a63565b9050600061080283610a96565b9050600033600354600554604051631501bf0360e01b81526001600160a01b0380851660048301529182166024820152604481018690529293506101009091041690631501bf0390606401600060405180830381600087803b15801561086757600080fd5b505af115801561087b573d6000803e3d6000fd5b5050600354604051631501bf0360e01b81526001600160a01b0385811660048301528981166024830152604482018890526101009092049091169250631501bf039150606401600060405180830381600087803b1580156108db57600080fd5b505af11580156108ef573d6000803e3d6000fd5b505050505050505050565b610902610973565b6001600160a01b0381166109675760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610308565b61097081610a13565b50565b6000546001600160a01b031633146107435760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610308565b60035460ff16156107435760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610308565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080600154612710610a769190610d75565b9050612710610a858285610d8c565b610a8f9190610dab565b9392505050565b600061271060015483610aa99190610d8c565b610ab39190610dab565b92915050565b80356001600160a01b0381168114610ad057600080fd5b919050565b600060208284031215610ae757600080fd5b610a8f82610ab9565b60008060408385031215610b0357600080fd5b82359150610b1360208401610ab9565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610b5b57610b5b610b1c565b604052919050565b600067ffffffffffffffff821115610b7d57610b7d610b1c565b5060051b60200190565b600082601f830112610b9857600080fd5b81356020610bad610ba883610b63565b610b32565b82815260059290921b84018101918181019086841115610bcc57600080fd5b8286015b84811015610be75780358352918301918301610bd0565b509695505050505050565b60008060408385031215610c0557600080fd5b823567ffffffffffffffff80821115610c1d57600080fd5b818501915085601f830112610c3157600080fd5b81356020610c41610ba883610b63565b82815260059290921b84018101918181019089841115610c6057600080fd5b948201945b83861015610c8557610c7686610ab9565b82529482019490820190610c65565b96505086013592505080821115610c9b57600080fd5b50610ca885828601610b87565b9150509250929050565b600060208284031215610cc457600080fd5b5035919050565b60008060408385031215610cde57600080fd5b610ce783610ab9565b946020939093013593505050565b600060208284031215610d0757600080fd5b81518015158114610a8f57600080fd5b600060208284031215610d2957600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610d6e57610d6e610d46565b5060010190565b600082821015610d8757610d87610d46565b500390565b6000816000190483118215151615610da657610da6610d46565b500290565b600082610dc857634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220cd758817f16930b83e8f48eac4b16d64c1235cbb8011f8853f3cccbf2f968c5e64736f6c634300080e0033a2646970667358221220c260c390c73f98d6f49eaa9efbf6e27bbe123546245a2fd2a217c46583ea219664736f6c634300080e0033",
    "sourceMap": "135:4085:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;382:174;;;:::i;:::-;;321:38:1;;250:64;321:38;;;;;-1:-1:-1;;;;;189:32:20;;;171:51;;159:2;144:18;321:38:1;;;;;;;;237:81:19;;;;;;:::i;:::-;;:::i;2210:419::-;;;:::i;324:51::-;;;;;;:::i;:::-;;:::i;:::-;;;772:25:20;;;760:2;745:18;324:51:19;626:177:20;988:257:19;;;;;;:::i;:::-;;:::i;562:133::-;;;:::i;207:23::-;;;;;-1:-1:-1;;;;;207:23:19;;;819:163;;;;;;:::i;:::-;;:::i;1819:584:0:-;;;:::i;:::-;;;1592:14:20;;1585:22;1567:41;;1555:2;1540:18;1819:584:0;1427:187:20;701:111:19;;;:::i;173:28::-;;;;;-1:-1:-1;;;;;173:28:19;;;170::1;;;;;;;;;;;;1572:26:0;;;;;;;;;382:174:19;416:25;;-1:-1:-1;;;416:25:19;;438:1;416:25;;;171:51:20;250:64:1;;416:13:19;;144:18:20;;416:25:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;451:2:19;:24;;-1:-1:-1;;;;;;451:24:19;-1:-1:-1;;;;;451:24:19;;;;;;;;;498:27;;;;;:::i;:::-;-1:-1:-1;;;;;189:32:20;;;171:51;;159:2;144:18;498:27:19;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;485:10:19;:40;;-1:-1:-1;;;;;;485:40:19;-1:-1:-1;;;;;485:40:19;;;;;;;;;;535:14;;;-1:-1:-1;;;535:14:19;;;;250:64:1;;535:12:19;;:14;;;;;-1:-1:-1;;535:14:19;;;;;;;-1:-1:-1;250:64:1;535:14:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;382:174::o;237:81::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;237:81:19;;-1:-1:-1;237:81:19;:::o;2210:419::-;2258:25;;-1:-1:-1;;;2258:25:19;;2280:1;2258:25;;;171:51:20;250:64:1;;2258:13:19;;144:18:20;;2258:25:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2293:2:19;;:29;;-1:-1:-1;;;2293:29:19;;2319:1;2293:29;;;171:51:20;-1:-1:-1;;;;;2293:2:19;;;;-1:-1:-1;2293:17:19;;-1:-1:-1;144:18:20;;2293:29:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2332:2:19;;2362:10;;2332:42;;-1:-1:-1;;;2332:42:19;;-1:-1:-1;;;;;2362:10:19;;;2332:42;;;171:51:20;2332:2:19;;;-1:-1:-1;2332:21:19;;-1:-1:-1;144:18:20;;2332:42:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2391:2:19;;:31;;-1:-1:-1;;;2391:31:19;;2419:1;2391:31;;;171:51:20;-1:-1:-1;;;;;2391:2:19;;;;-1:-1:-1;2391:19:19;;-1:-1:-1;144:18:20;;2391:31:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2384:39;;;;:::i;:::-;2433:14;;;-1:-1:-1;;;2433:14:19;;;;250:64:1;;2433:12:19;;:14;;;;;274:37:1;;2433:14:19;;;;;;;274:37:1;250:64;2433:14:19;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2458:25:19;;-1:-1:-1;;;2458:25:19;;2480:1;2458:25;;;171:51:20;250:64:1;;-1:-1:-1;2458:13:19;;-1:-1:-1;144:18:20;;2458:25:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2538:10:19;;:51;;-1:-1:-1;;;2538:51:19;;-1:-1:-1;;;;;2538:10:19;;;;-1:-1:-1;2538:23:19;;-1:-1:-1;2538:51:19;;2562:13;;2577:11;;2538:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;324;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;324:51:19;:::o;988:257::-;1051:25;;-1:-1:-1;;;1051:25:19;;1073:1;1051:25;;;171:51:20;250:64:1;;1051:13:19;;144:18:20;;1051:25:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1086:2:19;;:24;;-1:-1:-1;;;1086:24:19;;-1:-1:-1;;;;;189:32:20;;;1086:24:19;;;171:51:20;1086:2:19;;;;-1:-1:-1;1086:17:19;;-1:-1:-1;144:18:20;;1086:24:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1127:2:19;;:26;;-1:-1:-1;;;1127:26:19;;-1:-1:-1;;;;;189:32:20;;;1127:26:19;;;171:51:20;1127:2:19;;;;-1:-1:-1;1127:19:19;;-1:-1:-1;144:18:20;;1127:26:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1120:34;;;;:::i;:::-;1164:2;;:29;;-1:-1:-1;;;1164:29:19;;-1:-1:-1;;;;;189:32:20;;;1164:29:19;;;171:51:20;1164:2:19;;;;:22;;144:18:20;;1164:29:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1211:2:19;;:26;;-1:-1:-1;;;1211:26:19;;-1:-1:-1;;;;;189:32:20;;;1211:26:19;;;171:51:20;1211:2:19;;;;-1:-1:-1;1211:19:19;;-1:-1:-1;144:18:20;;1211:26:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1210:27;1203:35;;;;:::i;:::-;988:257;:::o;562:133::-;614:2;;:10;;;-1:-1:-1;;;614:10:19;;;;605:33;;-1:-1:-1;;;;;614:2:19;;:8;;:10;;;;;;;;;;;;;;:2;:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;635:1;605:8;:33::i;:::-;657:10;;:18;;;-1:-1:-1;;;657:18:19;;;;648:40;;-1:-1:-1;;;;;657:10:19;;:16;;:18;;;;;;;;;;;;;;:10;:18;;;;;;;;;;;;;;648:40;562:133::o;819:163::-;872:25;;-1:-1:-1;;;872:25:19;;894:1;872:25;;;171:51:20;250:64:1;;872:13:19;;144:18:20;;872:25:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;907:2:19;;:24;;-1:-1:-1;;;907:24:19;;-1:-1:-1;;;;;189:32:20;;;907:24:19;;;171:51:20;907:2:19;;;;-1:-1:-1;907:17:19;;-1:-1:-1;144:18:20;;907:24:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;948:2:19;;:26;;-1:-1:-1;;;948:26:19;;-1:-1:-1;;;;;189:32:20;;;948:26:19;;;171:51:20;948:2:19;;;;-1:-1:-1;948:19:19;;-1:-1:-1;144:18:20;;948:26:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;941:34;;;;:::i;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;3946:51:20;;;-1:-1:-1;;;4013:18:20;;;4006:34;2196:43:0;;;;;;;;;3919:18:20;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;701:111:19:-;757:2;;:24;;-1:-1:-1;;;757:24:19;;:2;:24;;;171:51:20;748:57:19;;-1:-1:-1;;;;;757:2:19;;:12;;144:18:20;;757:24:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;783:21;748:8;:57::i;3615:277:0:-;3683:1;-1:-1:-1;;;;;3678:6:0;:1;-1:-1:-1;;;;;3678:6:0;;3674:212;;3705:44;;;;;5260:2:20;5242:21;;;5299:2;5279:18;;;5272:30;5338:34;5333:2;5318:18;;5311:62;-1:-1:-1;;;5404:2:20;5389:18;;5382:35;5449:3;5434:19;;5058:401;3705:44:0;;;;;;;;3768:34;3800:1;3768:34;;;;;;:::i;:::-;;;;;;;;3821;3853:1;3821:34;;;;;;:::i;:::-;;;;;;;;3869:6;:4;:6::i;:::-;3615:277;;:::o;5202:262::-;5264:1;5259;:6;5255:203;;5286:41;;;;;6752:2:20;6734:21;;;6791:2;6771:18;;;6764:30;6830:34;6825:2;6810:18;;6803:62;-1:-1:-1;;;6896:2:20;6881:18;;6874:32;6938:3;6923:19;;6550:398;5286:41:0;;;;;;;;5346:31;5375:1;5346:31;;;;;;:::i;:::-;;;;;;;;5396;5425:1;5396:31;;;;;;:::i;2410:424::-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;7861:51:20;;;-1:-1:-1;;;7928:18:20;;;7921:34;;;;2705:4:0;7971:18:20;;;7964:34;2482:11:0;;1671:64;2579:43;;7834:18:20;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;233:180:20:-;292:6;345:2;333:9;324:7;320:23;316:32;313:52;;;361:1;358;351:12;313:52;-1:-1:-1;384:23:20;;233:180;-1:-1:-1;233:180:20:o;808:131::-;-1:-1:-1;;;;;883:31:20;;873:42;;863:70;;929:1;926;919:12;944:247;1003:6;1056:2;1044:9;1035:7;1031:23;1027:32;1024:52;;;1072:1;1069;1062:12;1024:52;1111:9;1098:23;1130:31;1155:5;1130:31;:::i;:::-;1180:5;944:247;-1:-1:-1;;;944:247:20:o;1847:277::-;1914:6;1967:2;1955:9;1946:7;1942:23;1938:32;1935:52;;;1983:1;1980;1973:12;1935:52;2015:9;2009:16;2068:5;2061:13;2054:21;2047:5;2044:32;2034:60;;2090:1;2087;2080:12;2129:127;2190:10;2185:3;2181:20;2178:1;2171:31;2221:4;2218:1;2211:15;2245:4;2242:1;2235:15;2261:1250;2475:4;2523:2;2512:9;2508:18;2553:2;2542:9;2535:21;2576:6;2611;2605:13;2642:6;2634;2627:22;2680:2;2669:9;2665:18;2658:25;;2702:1;2692:11;;2723:6;2719:2;2712:18;2749:4;2790:2;2786;2776:17;2811:2;2822:194;2836:6;2833:1;2830:13;2822:194;;;2901:13;;-1:-1:-1;;;;;2897:39:20;2885:52;;2957:12;;;;2933:1;2992:14;;;;2851:9;2822:194;;;-1:-1:-1;;3052:19:20;;;3032:18;;;3025:47;3122:13;;3144:21;;;3204:18;;;3247:17;;;;3183:12;;;-1:-1:-1;3295:188:20;3311:8;3306:3;3303:17;3295:188;;;3380:15;;3366:30;;3471:1;3330:11;;;;3457:16;;;;3418:14;;;;3295:188;;;-1:-1:-1;3500:5:20;;2261:1250;-1:-1:-1;;;;;;;2261:1250:20:o;3516:251::-;3586:6;3639:2;3627:9;3618:7;3614:23;3610:32;3607:52;;;3655:1;3652;3645:12;3607:52;3687:9;3681:16;3706:31;3731:5;3706:31;:::i;4051:336::-;4092:3;4130:5;4124:12;4154:1;4164:128;4178:6;4175:1;4172:13;4164:128;;;4275:4;4260:13;;;4256:24;;4250:31;4237:11;;;4230:52;4193:12;4164:128;;;4310:6;4307:1;4304:13;4301:48;;;4345:1;4336:6;4331:3;4327:16;4320:27;4301:48;-1:-1:-1;4365:16:20;;;;;4051:336;-1:-1:-1;;4051:336:20:o;4392:278::-;-1:-1:-1;;;;;;4577:33:20;;4565:46;;4547:3;4627:37;4661:1;4652:11;;4644:6;4627:37;:::i;:::-;4620:44;4392:278;-1:-1:-1;;;;4392:278:20:o;4675:189::-;4804:3;4829:29;4854:3;4846:6;4829:29;:::i;4869:184::-;4939:6;4992:2;4980:9;4971:7;4967:23;4963:32;4960:52;;;5008:1;5005;4998:12;4960:52;-1:-1:-1;5031:16:20;;4869:184;-1:-1:-1;4869:184:20:o;5628:374::-;5858:2;5847:9;5840:21;5821:4;5878:49;5923:2;5912:9;5908:18;5541:2;5529:15;;-1:-1:-1;;;5569:4:20;5560:14;;5553:36;5614:2;5605:12;;5464:159;5878:49;-1:-1:-1;;;;;5963:32:20;;;;5958:2;5943:18;;;;5936:60;;;;-1:-1:-1;5870:57:20;5628:374::o;6171:::-;6401:2;6390:9;6383:21;6364:4;6421:49;6466:2;6455:9;6451:18;6084:2;6072:15;;-1:-1:-1;;;6112:4:20;6103:14;;6096:36;6157:2;6148:12;;6007:159;6953:348;7183:2;7172:9;7165:21;7146:4;7203:49;7248:2;7237:9;7233:18;5541:2;5529:15;;-1:-1:-1;;;5569:4:20;5560:14;;5553:36;5614:2;5605:12;;5464:159;7203:49;7195:57;;7288:6;7283:2;7272:9;7268:18;7261:34;6953:348;;;;:::o;7306:::-;7536:2;7525:9;7518:21;7499:4;7556:49;7601:2;7590:9;7586:18;6084:2;6072:15;;-1:-1:-1;;;6112:4:20;6103:14;;6096:36;6157:2;6148:12;;6007:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "Pb()": "8347b0c9",
    "controller()": "f77c4791",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testAddTeam(address)": "9176fa5b",
    "testAddresses(uint256)": "483f8e52",
    "testBalanceOfOwner()": "dc3b20b8",
    "testCheckOwner()": "7484c040",
    "testContractControl()": "6635d076",
    "testRemoveTeamAddress(address)": "6c976dfe",
    "tokenValues(uint256)": "6b225fe4",
    "vm()": "3a768463"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Pb\",\"outputs\":[{\"internalType\":\"contract PhoneBotToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"contract Controller\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_team\",\"type\":\"address\"}],\"name\":\"testAddTeam\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"testAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testBalanceOfOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testCheckOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testContractControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_team\",\"type\":\"address\"}],\"name\":\"testRemoveTeamAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenValues\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vm\",\"outputs\":[{\"internalType\":\"contract Vm\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/ControllerTest.t.sol\":\"ControllerTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b\",\"dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87\",\"dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2\",\"dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2\",\"dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f\",\"dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"src/Controller.sol\":{\"keccak256\":\"0xcca9b169ed5ec8d1cb6ba1f2aa07e947c474514897a359b72d1c2fcdf1d2425f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9d837304fec1f7d708fa332e606402469801fa45fb76422d48ce5d880d7c7163\",\"dweb:/ipfs/QmV5vB3k2raZ5xuYjNr5UtcBu7ZdaX3DDTsTCA9rP9YiAg\"]},\"src/Fee.sol\":{\"keccak256\":\"0x6bf980ab5f4328bf56430c97d5f4a657749cd56613ae4bc6a0fe708d98fefe1d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d8aa3723b28acd8a8b9d9b507c8bccf26e6b6b971a1af0246e94eed46dd99251\",\"dweb:/ipfs/QmPBSNXgor5kcT74unPhAVfHT9VKRgX9ThRSKArkLP5eGh\"]},\"src/Loyalty.sol\":{\"keccak256\":\"0xe246dda169790f41572326e283fba938fe0f9a7a561875068989ee78332f3492\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://963b47877a98a681f966636939b954533aa6db75e2fd3d9f21ad4afe69b9c2d8\",\"dweb:/ipfs/Qme4ANjfFQmGCqBnLnn1zZQUFf9sSYiwoHWR2SkfCMSqbf\"]},\"src/PhoneBotToken.sol\":{\"keccak256\":\"0xa19b33be40b9c304b00ec781622fb16589b0b7651b8fdcb423eb3402beb2e08a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b621f3e445d3c801eb0a306967eb032cd570fbf2ed8743ac596becfdc08d8b65\",\"dweb:/ipfs/QmSLd9e7ddaSjyiFheyvzDiJWemtctQumC1gvPQf1K1FKB\"]},\"test/ControllerTest.t.sol\":{\"keccak256\":\"0x96f3cb9e36fa93cfb2a3ca55493cf4c77531d258e211f88ea543bc471933221f\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8706bed0166cec3e0689446e693a0cf67b1ada044c3d28e60f13d51e1cd2d8a4\",\"dweb:/ipfs/QmP5erLPPMFuAf8LxStw4gsmordQrVssNbRKJZ7z1XnZ8a\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.14+commit.80d49f37"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "Pb",
          "outputs": [
            {
              "internalType": "contract PhoneBotToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "controller",
          "outputs": [
            {
              "internalType": "contract Controller",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_team",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testAddTeam"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "testAddresses",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testBalanceOfOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testCheckOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testContractControl"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_team",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRemoveTeamAddress"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenValues",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vm",
          "outputs": [
            {
              "internalType": "contract Vm",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/ControllerTest.t.sol": "ControllerTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0x9d09c1e55cd508d3376cff9961625d51d73f8ce075ec1e9deed41408a4556e00",
        "urls": [
          "bzz-raw://8880c5551daf337ab91665a9ce593df67a9eb11b0bee820f631d324d2fdd3a8b",
          "dweb:/ipfs/QmNpvSBGnS9Jr6Swd6XKsijG59a4yjYemWCFwprjKFkpNC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x1297a1cc393bc8163ccf143e5335536e78cb25ac24a4f6dfdb25f5746dd4827e",
        "urls": [
          "bzz-raw://945ccffad9fc09d2aa0ac200a80dcfa2f491dba8680fc9c3d3d450d891284b87",
          "dweb:/ipfs/QmYSfFb1L6LN1ZB9KWzZqxt2iAbpuFDskBcU1Bz4RiyuQ5"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x6c9cbd51234372b66bf7c146870edf0855770c46e960a8fae8f354ddf382876b",
        "urls": [
          "bzz-raw://fd0ff1f449294dd1447b9d483c52d78e137d8cac518646e76df9fdd4d185d6c2",
          "dweb:/ipfs/QmS3JP4vKgvAWo8Tc7zVrGxbdR7t37ayk1mTHN3seD6UAZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0x1a5767028a0c3985e991456fc9650055e28b01b787c56b11f66ac30498a153ab",
        "urls": [
          "bzz-raw://f86887212eacca450a15a8a5bf9fe83fd91a2ba623df8e9c32c75a31824c8ea2",
          "dweb:/ipfs/QmTUHBNdZwntgjbFZne7fY9ZJLNGYWaq3uWfGk6FyqdAkB"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xbeb823fcdb356244a83aaccdf828ad019ecc1ffaa3dff18e624fc6d5714ea671",
        "urls": [
          "bzz-raw://4cbe9400340e5f9ec55e2aff3bad1c15fa3afbbe37e80800e6f3fed2ad26854f",
          "dweb:/ipfs/QmdJBABsuXkvWxVzEyGXsTE3vyfBPXDdw5xvvtUz3JeoYW"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "keccak256": "0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b",
        "urls": [
          "bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f",
          "dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "src/Controller.sol": {
        "keccak256": "0xcca9b169ed5ec8d1cb6ba1f2aa07e947c474514897a359b72d1c2fcdf1d2425f",
        "urls": [
          "bzz-raw://9d837304fec1f7d708fa332e606402469801fa45fb76422d48ce5d880d7c7163",
          "dweb:/ipfs/QmV5vB3k2raZ5xuYjNr5UtcBu7ZdaX3DDTsTCA9rP9YiAg"
        ],
        "license": "UNLICENSED"
      },
      "src/Fee.sol": {
        "keccak256": "0x6bf980ab5f4328bf56430c97d5f4a657749cd56613ae4bc6a0fe708d98fefe1d",
        "urls": [
          "bzz-raw://d8aa3723b28acd8a8b9d9b507c8bccf26e6b6b971a1af0246e94eed46dd99251",
          "dweb:/ipfs/QmPBSNXgor5kcT74unPhAVfHT9VKRgX9ThRSKArkLP5eGh"
        ],
        "license": "UNLICENSED"
      },
      "src/Loyalty.sol": {
        "keccak256": "0xe246dda169790f41572326e283fba938fe0f9a7a561875068989ee78332f3492",
        "urls": [
          "bzz-raw://963b47877a98a681f966636939b954533aa6db75e2fd3d9f21ad4afe69b9c2d8",
          "dweb:/ipfs/Qme4ANjfFQmGCqBnLnn1zZQUFf9sSYiwoHWR2SkfCMSqbf"
        ],
        "license": "UNLICENSED"
      },
      "src/PhoneBotToken.sol": {
        "keccak256": "0xa19b33be40b9c304b00ec781622fb16589b0b7651b8fdcb423eb3402beb2e08a",
        "urls": [
          "bzz-raw://b621f3e445d3c801eb0a306967eb032cd570fbf2ed8743ac596becfdc08d8b65",
          "dweb:/ipfs/QmSLd9e7ddaSjyiFheyvzDiJWemtctQumC1gvPQf1K1FKB"
        ],
        "license": "MIT"
      },
      "test/ControllerTest.t.sol": {
        "keccak256": "0x96f3cb9e36fa93cfb2a3ca55493cf4c77531d258e211f88ea543bc471933221f",
        "urls": [
          "bzz-raw://8706bed0166cec3e0689446e693a0cf67b1ada044c3d28e60f13d51e1cd2d8a4",
          "dweb:/ipfs/QmP5erLPPMFuAf8LxStw4gsmordQrVssNbRKJZ7z1XnZ8a"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/ControllerTest.t.sol",
    "id": 25292,
    "exportedSymbols": {
      "Context": [
        24202
      ],
      "Controller": [
        24567
      ],
      "ControllerTest": [
        25291
      ],
      "Counters": [
        24276
      ],
      "DSTest": [
        1786
      ],
      "ERC20": [
        24033
      ],
      "ERC20Burnable": [
        24155
      ],
      "Fee": [
        24648
      ],
      "IERC20": [
        24111
      ],
      "IERC20Metadata": [
        24180
      ],
      "Loyalty": [
        24706
      ],
      "Ownable": [
        23339
      ],
      "Pausable": [
        23447
      ],
      "PhoneBotToken": [
        25043
      ],
      "Script": [
        2049
      ],
      "StdStorage": [
        5077
      ],
      "Test": [
        4979
      ],
      "Vm": [
        7098
      ],
      "console": [
        15162
      ],
      "console2": [
        23226
      ],
      "stdError": [
        5049
      ],
      "stdJson": [
        2409
      ],
      "stdMath": [
        6318
      ],
      "stdStorage": [
        6179
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4181:19",
    "nodes": [
      {
        "id": 25045,
        "nodeType": "PragmaDirective",
        "src": "39:23:19",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".9"
        ]
      },
      {
        "id": 25046,
        "nodeType": "ImportDirective",
        "src": "64:36:19",
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "lib/forge-std/src/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25292,
        "sourceUnit": 6319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25047,
        "nodeType": "ImportDirective",
        "src": "101:31:19",
        "absolutePath": "src/Controller.sol",
        "file": "../src/Controller.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25292,
        "sourceUnit": 24568,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 25291,
        "nodeType": "ContractDefinition",
        "src": "135:4085:19",
        "nodes": [
          {
            "id": 25052,
            "nodeType": "VariableDeclaration",
            "src": "173:28:19",
            "constant": false,
            "functionSelector": "f77c4791",
            "mutability": "mutable",
            "name": "controller",
            "nameLocation": "191:10:19",
            "scope": 25291,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Controller_$24567",
              "typeString": "contract Controller"
            },
            "typeName": {
              "id": 25051,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25050,
                "name": "Controller",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24567,
                "src": "173:10:19"
              },
              "referencedDeclaration": 24567,
              "src": "173:10:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Controller_$24567",
                "typeString": "contract Controller"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25055,
            "nodeType": "VariableDeclaration",
            "src": "207:23:19",
            "constant": false,
            "functionSelector": "8347b0c9",
            "mutability": "mutable",
            "name": "Pb",
            "nameLocation": "228:2:19",
            "scope": 25291,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PhoneBotToken_$25043",
              "typeString": "contract PhoneBotToken"
            },
            "typeName": {
              "id": 25054,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25053,
                "name": "PhoneBotToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 25043,
                "src": "207:13:19"
              },
              "referencedDeclaration": 25043,
              "src": "207:13:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PhoneBotToken_$25043",
                "typeString": "contract PhoneBotToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25075,
            "nodeType": "VariableDeclaration",
            "src": "237:81:19",
            "constant": false,
            "functionSelector": "483f8e52",
            "mutability": "mutable",
            "name": "testAddresses",
            "nameLocation": "254:13:19",
            "scope": 25291,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 25056,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "237:7:19",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 25057,
              "nodeType": "ArrayTypeName",
              "src": "237:9:19",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": {
              "components": [
                {
                  "arguments": [
                    {
                      "hexValue": "35",
                      "id": 25060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "279:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      }
                    ],
                    "id": 25059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "271:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 25058,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "271:7:19",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 25061,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "271:10:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "arguments": [
                    {
                      "hexValue": "36",
                      "id": 25064,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "291:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_6_by_1",
                        "typeString": "int_const 6"
                      },
                      "value": "6"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_6_by_1",
                        "typeString": "int_const 6"
                      }
                    ],
                    "id": 25063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "283:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 25062,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "283:7:19",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 25065,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "283:10:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "arguments": [
                    {
                      "hexValue": "37",
                      "id": 25068,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "303:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_7_by_1",
                        "typeString": "int_const 7"
                      },
                      "value": "7"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_7_by_1",
                        "typeString": "int_const 7"
                      }
                    ],
                    "id": 25067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "295:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 25066,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "295:7:19",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 25069,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "295:10:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                {
                  "arguments": [
                    {
                      "hexValue": "38",
                      "id": 25072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "315:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      },
                      "value": "8"
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_rational_8_by_1",
                        "typeString": "int_const 8"
                      }
                    ],
                    "id": 25071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "307:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_address_$",
                      "typeString": "type(address)"
                    },
                    "typeName": {
                      "id": 25070,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "307:7:19",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 25073,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "307:10:19",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "id": 25074,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "270:48:19",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$4_memory_ptr",
                "typeString": "address[4] memory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25083,
            "nodeType": "VariableDeclaration",
            "src": "324:51:19",
            "constant": false,
            "functionSelector": "6b225fe4",
            "mutability": "mutable",
            "name": "tokenValues",
            "nameLocation": "341:11:19",
            "scope": 25291,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 25076,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "324:7:19",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 25077,
              "nodeType": "ArrayTypeName",
              "src": "324:9:19",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": {
              "components": [
                {
                  "hexValue": "313030",
                  "id": 25078,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "356:3:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_100_by_1",
                    "typeString": "int_const 100"
                  },
                  "value": "100"
                },
                {
                  "hexValue": "323030",
                  "id": 25079,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "361:3:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_200_by_1",
                    "typeString": "int_const 200"
                  },
                  "value": "200"
                },
                {
                  "hexValue": "333030",
                  "id": 25080,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "366:3:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_300_by_1",
                    "typeString": "int_const 300"
                  },
                  "value": "300"
                },
                {
                  "hexValue": "343030",
                  "id": 25081,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "371:3:19",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_400_by_1",
                    "typeString": "int_const 400"
                  },
                  "value": "400"
                }
              ],
              "id": 25082,
              "isConstant": false,
              "isInlineArray": true,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "nodeType": "TupleExpression",
              "src": "355:20:19",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint16_$4_memory_ptr",
                "typeString": "uint16[4] memory"
              }
            },
            "visibility": "public"
          },
          {
            "id": 25119,
            "nodeType": "FunctionDefinition",
            "src": "382:174:19",
            "body": {
              "id": 25118,
              "nodeType": "Block",
              "src": "406:150:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 25091,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "438:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 25090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "430:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25089,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "430:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "430:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25086,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "416:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7098",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25088,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6548,
                      "src": "416:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "416:25:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25094,
                  "nodeType": "ExpressionStatement",
                  "src": "416:25:19"
                },
                {
                  "expression": {
                    "id": 25100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25095,
                      "name": "Pb",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25055,
                      "src": "451:2:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PhoneBotToken_$25043",
                        "typeString": "contract PhoneBotToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 25098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "456:17:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_PhoneBotToken_$25043_$",
                          "typeString": "function () returns (contract PhoneBotToken)"
                        },
                        "typeName": {
                          "id": 25097,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 25096,
                            "name": "PhoneBotToken",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 25043,
                            "src": "460:13:19"
                          },
                          "referencedDeclaration": 25043,
                          "src": "460:13:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PhoneBotToken_$25043",
                            "typeString": "contract PhoneBotToken"
                          }
                        }
                      },
                      "id": 25099,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "456:19:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PhoneBotToken_$25043",
                        "typeString": "contract PhoneBotToken"
                      }
                    },
                    "src": "451:24:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PhoneBotToken_$25043",
                      "typeString": "contract PhoneBotToken"
                    }
                  },
                  "id": 25101,
                  "nodeType": "ExpressionStatement",
                  "src": "451:24:19"
                },
                {
                  "expression": {
                    "id": 25111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25102,
                      "name": "controller",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25052,
                      "src": "485:10:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Controller_$24567",
                        "typeString": "contract Controller"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 25108,
                              "name": "Pb",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25055,
                              "src": "521:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PhoneBotToken_$25043",
                                "typeString": "contract PhoneBotToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_PhoneBotToken_$25043",
                                "typeString": "contract PhoneBotToken"
                              }
                            ],
                            "id": 25107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "513:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25106,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "513:7:19",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 25109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "513:11:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 25105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "498:14:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Controller_$24567_$",
                          "typeString": "function (address) returns (contract Controller)"
                        },
                        "typeName": {
                          "id": 25104,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 25103,
                            "name": "Controller",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 24567,
                            "src": "502:10:19"
                          },
                          "referencedDeclaration": 24567,
                          "src": "502:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Controller_$24567",
                            "typeString": "contract Controller"
                          }
                        }
                      },
                      "id": 25110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "498:27:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Controller_$24567",
                        "typeString": "contract Controller"
                      }
                    },
                    "src": "485:40:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Controller_$24567",
                      "typeString": "contract Controller"
                    }
                  },
                  "id": 25112,
                  "nodeType": "ExpressionStatement",
                  "src": "485:40:19"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25113,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "535:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7098",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25115,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6565,
                      "src": "535:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 25116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "535:14:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25117,
                  "nodeType": "ExpressionStatement",
                  "src": "535:14:19"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "391:5:19",
            "parameters": {
              "id": 25084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "396:2:19"
            },
            "returnParameters": {
              "id": 25085,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "406:0:19"
            },
            "scope": 25291,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25143,
            "nodeType": "FunctionDefinition",
            "src": "562:133:19",
            "body": {
              "id": 25142,
              "nodeType": "Block",
              "src": "595:100:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 25123,
                            "name": "Pb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25055,
                            "src": "614:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhoneBotToken_$25043",
                              "typeString": "contract PhoneBotToken"
                            }
                          },
                          "id": 25124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23267,
                          "src": "614:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 25125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "614:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 25128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "635:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 25127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "627:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25126,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "627:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "627:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25122,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 320,
                      "src": "605:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 25130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "605:33:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25131,
                  "nodeType": "ExpressionStatement",
                  "src": "605:33:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 25133,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25052,
                            "src": "657:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Controller_$24567",
                              "typeString": "contract Controller"
                            }
                          },
                          "id": 25134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23267,
                          "src": "657:16:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 25135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "657:18:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 25138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "685:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 25137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "677:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25136,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "677:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "677:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 25132,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 320,
                      "src": "648:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 25140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "648:40:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25141,
                  "nodeType": "ExpressionStatement",
                  "src": "648:40:19"
                }
              ]
            },
            "functionSelector": "7484c040",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testCheckOwner",
            "nameLocation": "571:14:19",
            "parameters": {
              "id": 25120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "585:2:19"
            },
            "returnParameters": {
              "id": 25121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "595:0:19"
            },
            "scope": 25291,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25158,
            "nodeType": "FunctionDefinition",
            "src": "701:111:19",
            "body": {
              "id": 25157,
              "nodeType": "Block",
              "src": "738:74:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 25151,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "778:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 25150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "770:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25149,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "770:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "770:10:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25147,
                            "name": "Pb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25055,
                            "src": "757:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhoneBotToken_$25043",
                              "typeString": "contract PhoneBotToken"
                            }
                          },
                          "id": 25148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 23546,
                          "src": "757:12:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 25153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "757:24:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030303030303030303030303030303030303030",
                        "id": 25154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "783:21:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "id": 25146,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3167,
                        3192,
                        3205,
                        3221,
                        3263,
                        3305,
                        3347,
                        3384,
                        3421,
                        3458,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "748:8:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 25155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "748:57:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25156,
                  "nodeType": "ExpressionStatement",
                  "src": "748:57:19"
                }
              ]
            },
            "functionSelector": "dc3b20b8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBalanceOfOwner",
            "nameLocation": "710:18:19",
            "parameters": {
              "id": 25144,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "728:2:19"
            },
            "returnParameters": {
              "id": 25145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:0:19"
            },
            "scope": 25291,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25186,
            "nodeType": "FunctionDefinition",
            "src": "819:163:19",
            "body": {
              "id": 25185,
              "nodeType": "Block",
              "src": "862:120:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 25168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "894:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 25167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "886:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25166,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "886:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "886:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25163,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "872:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7098",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6548,
                      "src": "872:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "872:25:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25171,
                  "nodeType": "ExpressionStatement",
                  "src": "872:25:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25175,
                        "name": "_team",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25160,
                        "src": "925:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25172,
                        "name": "Pb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25055,
                        "src": "907:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhoneBotToken_$25043",
                          "typeString": "contract PhoneBotToken"
                        }
                      },
                      "id": 25174,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addTeamAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25027,
                      "src": "907:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "907:24:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25177,
                  "nodeType": "ExpressionStatement",
                  "src": "907:24:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25181,
                            "name": "_team",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25160,
                            "src": "968:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25179,
                            "name": "Pb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25055,
                            "src": "948:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhoneBotToken_$25043",
                              "typeString": "contract PhoneBotToken"
                            }
                          },
                          "id": 25180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "teamAccessRecord",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24733,
                          "src": "948:19:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 25182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "948:26:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25178,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "941:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "941:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25184,
                  "nodeType": "ExpressionStatement",
                  "src": "941:34:19"
                }
              ]
            },
            "functionSelector": "9176fa5b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testAddTeam",
            "nameLocation": "828:11:19",
            "parameters": {
              "id": 25161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25160,
                  "mutability": "mutable",
                  "name": "_team",
                  "nameLocation": "848:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25186,
                  "src": "840:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "840:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "839:15:19"
            },
            "returnParameters": {
              "id": 25162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "862:0:19"
            },
            "scope": 25291,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25228,
            "nodeType": "FunctionDefinition",
            "src": "988:257:19",
            "body": {
              "id": 25227,
              "nodeType": "Block",
              "src": "1041:204:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 25196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1073:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 25195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1065:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25194,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1065:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1065:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25191,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "1051:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7098",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6548,
                      "src": "1051:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:25:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25199,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:25:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25203,
                        "name": "_team",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25188,
                        "src": "1104:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25200,
                        "name": "Pb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25055,
                        "src": "1086:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhoneBotToken_$25043",
                          "typeString": "contract PhoneBotToken"
                        }
                      },
                      "id": 25202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addTeamAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25027,
                      "src": "1086:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1086:24:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25205,
                  "nodeType": "ExpressionStatement",
                  "src": "1086:24:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25209,
                            "name": "_team",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25188,
                            "src": "1147:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25207,
                            "name": "Pb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25055,
                            "src": "1127:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhoneBotToken_$25043",
                              "typeString": "contract PhoneBotToken"
                            }
                          },
                          "id": 25208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "teamAccessRecord",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24733,
                          "src": "1127:19:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 25210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1127:26:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25206,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1120:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1120:34:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25212,
                  "nodeType": "ExpressionStatement",
                  "src": "1120:34:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25216,
                        "name": "_team",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25188,
                        "src": "1187:5:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25213,
                        "name": "Pb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25055,
                        "src": "1164:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhoneBotToken_$25043",
                          "typeString": "contract PhoneBotToken"
                        }
                      },
                      "id": 25215,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeMemberAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25042,
                      "src": "1164:22:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1164:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25218,
                  "nodeType": "ExpressionStatement",
                  "src": "1164:29:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1210:27:19",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 25222,
                              "name": "_team",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25188,
                              "src": "1231:5:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 25220,
                              "name": "Pb",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25055,
                              "src": "1211:2:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PhoneBotToken_$25043",
                                "typeString": "contract PhoneBotToken"
                              }
                            },
                            "id": 25221,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "teamAccessRecord",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 24733,
                            "src": "1211:19:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 25223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1211:26:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25219,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "1203:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1203:35:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25226,
                  "nodeType": "ExpressionStatement",
                  "src": "1203:35:19"
                }
              ]
            },
            "functionSelector": "6c976dfe",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRemoveTeamAddress",
            "nameLocation": "997:21:19",
            "parameters": {
              "id": 25189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25188,
                  "mutability": "mutable",
                  "name": "_team",
                  "nameLocation": "1027:5:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25228,
                  "src": "1019:13:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1018:15:19"
            },
            "returnParameters": {
              "id": 25190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1041:0:19"
            },
            "scope": 25291,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 25290,
            "nodeType": "FunctionDefinition",
            "src": "2210:419:19",
            "body": {
              "id": 25289,
              "nodeType": "Block",
              "src": "2248:381:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 25236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2280:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 25235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2272:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25234,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2272:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2272:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25231,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "2258:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7098",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6548,
                      "src": "2258:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2258:25:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25239,
                  "nodeType": "ExpressionStatement",
                  "src": "2258:25:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 25245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2319:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 25244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2311:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25243,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2311:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2311:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25240,
                        "name": "Pb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25055,
                        "src": "2293:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhoneBotToken_$25043",
                          "typeString": "contract PhoneBotToken"
                        }
                      },
                      "id": 25242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addTeamAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25027,
                      "src": "2293:17:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2293:29:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25248,
                  "nodeType": "ExpressionStatement",
                  "src": "2293:29:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 25254,
                            "name": "controller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25052,
                            "src": "2362:10:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Controller_$24567",
                              "typeString": "contract Controller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Controller_$24567",
                              "typeString": "contract Controller"
                            }
                          ],
                          "id": 25253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2354:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25252,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2354:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2354:19:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25249,
                        "name": "Pb",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25055,
                        "src": "2332:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_PhoneBotToken_$25043",
                          "typeString": "contract PhoneBotToken"
                        }
                      },
                      "id": 25251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addContractAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25004,
                      "src": "2332:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2332:42:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25257,
                  "nodeType": "ExpressionStatement",
                  "src": "2332:42:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "32",
                                "id": 25263,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2419:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "id": 25262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2411:7:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 25261,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2411:7:19",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 25264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2411:10:19",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 25259,
                            "name": "Pb",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25055,
                            "src": "2391:2:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PhoneBotToken_$25043",
                              "typeString": "contract PhoneBotToken"
                            }
                          },
                          "id": 25260,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "teamAccessRecord",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 24733,
                          "src": "2391:19:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 25265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2391:31:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 25258,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -3,
                      "src": "2384:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 25266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2384:39:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25267,
                  "nodeType": "ExpressionStatement",
                  "src": "2384:39:19"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 25268,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "2433:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7098",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6565,
                      "src": "2433:12:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 25271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2433:14:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25272,
                  "nodeType": "ExpressionStatement",
                  "src": "2433:14:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 25278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2480:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 25277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2472:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 25276,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2472:7:19",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 25279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2472:10:19",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 25273,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1817,
                        "src": "2458:2:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$7098",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 25275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6548,
                      "src": "2458:13:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 25280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2458:25:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25281,
                  "nodeType": "ExpressionStatement",
                  "src": "2458:25:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 25285,
                        "name": "testAddresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25075,
                        "src": "2562:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      {
                        "id": 25286,
                        "name": "tokenValues",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25083,
                        "src": "2577:11:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      ],
                      "expression": {
                        "id": 25282,
                        "name": "controller",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25052,
                        "src": "2538:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Controller_$24567",
                          "typeString": "contract Controller"
                        }
                      },
                      "id": 25284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "batchMinting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24460,
                      "src": "2538:23:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 25287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2538:51:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25288,
                  "nodeType": "ExpressionStatement",
                  "src": "2538:51:19"
                }
              ]
            },
            "functionSelector": "6635d076",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testContractControl",
            "nameLocation": "2219:19:19",
            "parameters": {
              "id": 25229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2238:2:19"
            },
            "returnParameters": {
              "id": 25230,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2248:0:19"
            },
            "scope": 25291,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25048,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4979,
              "src": "162:4:19"
            },
            "id": 25049,
            "nodeType": "InheritanceSpecifier",
            "src": "162:4:19"
          }
        ],
        "canonicalName": "ControllerTest",
        "contractDependencies": [
          24567,
          25043
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25291,
          4979,
          2049,
          1786
        ],
        "name": "ControllerTest",
        "nameLocation": "144:14:19",
        "scope": 25292,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 19
}