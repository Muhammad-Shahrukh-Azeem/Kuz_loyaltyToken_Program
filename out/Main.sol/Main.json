{
  "abi": [
    {
      "inputs": [],
      "name": "AddressAndAmountLengthInvalid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "AlreadyAdded",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotBeAddressZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotSendToAddressZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotEnoughBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "cannotBeContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "valueCannotBeZero",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "loyaltyPercentageBefore",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "loyaltyPercentageAfter",
          "type": "uint256"
        }
      ],
      "name": "LoyaltyUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenRewarded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "TokensBurned",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeBefore",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "feeAfter",
          "type": "uint256"
        }
      ],
      "name": "feeUpdated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_member",
          "type": "address"
        }
      ],
      "name": "addTeamAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_addresses",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        }
      ],
      "name": "batchMinting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "burnOnPurchase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_team",
          "type": "address"
        }
      ],
      "name": "getIsTeamMember",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLoyaltyPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTaxCollectorAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getfee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockTIme",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_member",
          "type": "address"
        }
      ],
      "name": "removeMemberAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_loyaltyPercentage",
          "type": "uint256"
        }
      ],
      "name": "setLoyaltyPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_taxCollector",
          "type": "address"
        }
      ],
      "name": "setTaxCollector",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "amount",
          "type": "address"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferingTokensOutside",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526107d06006556103e86007553480156200001d57600080fd5b506040518060400160405280600d81526020016c283437b732a137ba2a37b5b2b760991b8152506040518060400160405280600381526020016214109560ea1b81525081600390805190602001906200007892919062000294565b5080516200008e90600490602084019062000294565b50506005805460ff1916905550620000a633620000d2565b620000cc33620000b96012600a6200044f565b620000c690606462000467565b6200012c565b620004e0565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001885760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b620001966000838362000223565b8060026000828254620001aa919062000489565b90915550506001600160a01b03821660009081526020819052604081208054839290620001d990849062000489565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6200022d6200024a565b620002458383836200024560201b620008471760201c565b505050565b60055460ff1615620002925760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016200017f565b565b828054620002a290620004a4565b90600052602060002090601f016020900481019282620002c6576000855562000311565b82601f10620002e157805160ff191683800117855562000311565b8280016001018555821562000311579182015b8281111562000311578251825591602001919060010190620002f4565b506200031f92915062000323565b5090565b5b808211156200031f576000815560010162000324565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003915781600019048211156200037557620003756200033a565b808516156200038357918102915b93841c939080029062000355565b509250929050565b600082620003aa5750600162000449565b81620003b95750600062000449565b8160018114620003d25760028114620003dd57620003fd565b600191505062000449565b60ff841115620003f157620003f16200033a565b50506001821b62000449565b5060208310610133831016604e8410600b841016171562000422575081810a62000449565b6200042e838362000350565b80600019048211156200044557620004456200033a565b0290505b92915050565b60006200046060ff84168362000399565b9392505050565b60008160001904831182151516156200048457620004846200033a565b500290565b600082198211156200049f576200049f6200033a565b500190565b600181811c90821680620004b957607f821691505b602082108103620004da57634e487b7160e01b600052602260045260246000fd5b50919050565b6118ba80620004f06000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c8063715018a61161011a57806395d89b41116100ad578063c79f474b1161007c578063c79f474b14610422578063d7992d4d1461044e578063dd62ed3e14610461578063ead7a1dc14610474578063f2fde38b1461047d57600080fd5b806395d89b41146103e1578063a457c2d7146103e9578063a9059cbb146103fc578063b54dd7101461040f57600080fd5b80637f422669116100e95780637f422669146103a85780638456cb59146103b0578063864879bb146103b85780638da5cb5b146103cb57600080fd5b8063715018a61461035a578063765dd7a01461036257806379cc6790146103755780637f1bee231461038857600080fd5b8063313ce5671161019d57806340c10f191161016c57806340c10f19146102ed57806342966c68146103005780635c975abb1461031357806369fe0e2d1461031e57806370a082311461033157600080fd5b8063313ce567146102b057806336b59bc4146102bf57806339509351146102d25780633f4ba83a146102e557600080fd5b80630cda45c8116101d95780630cda45c81461027057806318160ddd146102825780631b2903691461028a57806323b872dd1461029d57600080fd5b8063056e31c11461020b57806306fdde031461023357806308695b4114610248578063095ea7b31461025d575b600080fd5b61021e610219366004611440565b610490565b60405190151581526020015b60405180910390f35b61023b6104ec565b60405161022a9190611483565b61025b6102563660046114d8565b61057e565b005b61021e61026b3660046114f3565b6105c8565b6006545b60405190815260200161022a565b600254610274565b61025b61029836600461151d565b6105e0565b61021e6102ab366004611549565b6106a5565b6040516012815260200161022a565b61025b6102cd36600461165b565b6106c9565b61021e6102e03660046114f3565b61084c565b61025b61086e565b61025b6102fb3660046114f3565b610880565b61025b61030e36600461171b565b6108bd565b60055460ff1661021e565b61025b61032c36600461171b565b6108ca565b61027461033f3660046114d8565b6001600160a01b031660009081526020819052604090205490565b61025b610914565b61025b6103703660046114d8565b610926565b61025b6103833660046114f3565b61098c565b6103906109a1565b6040516001600160a01b03909116815260200161022a565b600754610274565b61025b6109bb565b61025b6103c636600461171b565b6109cb565b60055461010090046001600160a01b0316610390565b61023b610a0e565b61021e6103f73660046114f3565b610a1d565b61021e61040a3660046114f3565b610a98565b61025b61041d3660046114f3565b610ad9565b61021e6104303660046114d8565b6001600160a01b031660009081526008602052604090205460ff1690565b61025b61045c3660046114d8565b610b68565b61027461046f366004611734565b610b91565b61027460095481565b61025b61048b3660046114d8565b610bbc565b60405162461bcd60e51b815260206004820152602360248201527f4e696365205472792c205374696c6c206e6f206d6f6e6b65792062757373696e60448201526265737360e81b60648201526000906084015b60405180910390fd5b6060600380546104fb9061175e565b80601f01602080910402602001604051908101604052809291908181526020018280546105279061175e565b80156105745780601f1061054957610100808354040283529160200191610574565b820191906000526020600020905b81548152906001019060200180831161055757829003601f168201915b5050505050905090565b610586610c32565b803b156105a657604051632111dc4760e01b815260040160405180910390fd5b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6000336105d6818585610c92565b5060019392505050565b3360009081526008602052604090205460ff1661060f5760405162461bcd60e51b81526004016104e390611798565b610617610db6565b81610637826001600160a01b031660009081526020819052604090205490565b10156106565760405163569d45cf60e11b815260040160405180910390fd5b610660818361098c565b604080518381526001600160a01b03831660208201527f63706707d038997d2210eb026bb1339397deab463921538a81bb98e69ee54ca8910160405180910390a15050565b6000336106b3858285610dfc565b6106be858585610e76565b506001949350505050565b3360009081526008602052604090205460ff166106f85760405162461bcd60e51b81526004016104e390611798565b610700610db6565b805182511461072257604051630c17582360e31b815260040160405180910390fd5b60005b82518110156108475760006001600160a01b031683828151811061074b5761074b6117cf565b60200260200101516001600160a01b03160361077a576040516309f9845360e01b815260040160405180910390fd5b6107b683828151811061078f5761078f6117cf565b60200260200101518383815181106107a9576107a96117cf565b602002602001015161104f565b7fe6b392a485300aed5d0afd949a6e7bbb13d3dc1a15efa0a0c1630b48ae54ca468382815181106107e9576107e96117cf565b6020026020010151838381518110610803576108036117cf565b602002602001015160405161082d9291906001600160a01b03929092168252602082015260400190565b60405180910390a18061083f816117fb565b915050610725565b505050565b6000336105d681858561085f8383610b91565b6108699190611814565b610c92565b610876610c32565b61087e61113a565b565b3360009081526008602052604090205460ff166108af5760405162461bcd60e51b81526004016104e390611798565b6108b9828261104f565b5050565b6108c7338261118c565b50565b6108d2610c32565b600681905560408051828152602081018390527fed28c14db89870da08d76b69e3f96d95cbb779778f62a9ea4d4d41dc082d088a91015b60405180910390a150565b61091c610c32565b61087e60006112e6565b61092e610c32565b6001600160a01b03811660009081526008602052604090205460ff16156109685760405163f411c32760e01b815260040160405180910390fd5b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b610997823383610dfc565b6108b9828261118c565b60006109ab610c32565b50600a546001600160a01b031690565b6109c3610c32565b61087e611340565b6109d3610c32565b600781905560408051828152602081018390527f6a83cc218b6e35f4b68868b8cf2a7968201acfd91f619cd387fb092745e5b8dc9101610909565b6060600480546104fb9061175e565b60003381610a2b8286610b91565b905083811015610a8b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104e3565b6106be8286868403610c92565b60405162461bcd60e51b81526020600482015260136024820152724e6f204d6f6e6b65792042757373696e65737360681b60448201526000906064016104e3565b6001600160a01b038216610b0057604051633415fd6160e11b815260040160405180910390fd5b60008111610b215760405163114617e760e21b815260040160405180910390fd5b6000610b2c8261137d565b90506000610b39836113b0565b600a549091503390610b569082906001600160a01b031684610e76565b610b61818685610e76565b5050505050565b610b70610c32565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610bc4610c32565b6001600160a01b038116610c295760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104e3565b6108c7816112e6565b6005546001600160a01b0361010090910416331461087e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104e3565b6001600160a01b038316610cf45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104e3565b6001600160a01b038216610d555760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104e3565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60055460ff161561087e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104e3565b6000610e088484610b91565b90506000198114610e705781811015610e635760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104e3565b610e708484848403610c92565b50505050565b6001600160a01b038316610eda5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104e3565b6001600160a01b038216610f3c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104e3565b610f478383836113d3565b6001600160a01b03831660009081526020819052604090205481811015610fbf5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104e3565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610ff6908490611814565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161104291815260200190565b60405180910390a3610e70565b6001600160a01b0382166110a55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104e3565b6110b1600083836113d3565b80600260008282546110c39190611814565b90915550506001600160a01b038216600090815260208190526040812080548392906110f0908490611814565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6111426113db565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166111ec5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104e3565b6111f8826000836113d3565b6001600160a01b0382166000908152602081905260409020548181101561126c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104e3565b6001600160a01b038316600090815260208190526040812083830390556002805484929061129b90849061182c565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611348610db6565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861116f3390565b600080600654612710611390919061182c565b905061271061139f8285611843565b6113a99190611862565b9392505050565b6000612710600654836113c39190611843565b6113cd9190611862565b92915050565b610847610db6565b60055460ff1661087e5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104e3565b80356001600160a01b038116811461143b57600080fd5b919050565b60008060006060848603121561145557600080fd5b61145e84611424565b925061146c60208501611424565b915061147a60408501611424565b90509250925092565b600060208083528351808285015260005b818110156114b057858101830151858201604001528201611494565b818111156114c2576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156114ea57600080fd5b6113a982611424565b6000806040838503121561150657600080fd5b61150f83611424565b946020939093013593505050565b6000806040838503121561153057600080fd5b8235915061154060208401611424565b90509250929050565b60008060006060848603121561155e57600080fd5b61156784611424565b925061157560208501611424565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156115c4576115c4611585565b604052919050565b600067ffffffffffffffff8211156115e6576115e6611585565b5060051b60200190565b600082601f83011261160157600080fd5b81356020611616611611836115cc565b61159b565b82815260059290921b8401810191818101908684111561163557600080fd5b8286015b848110156116505780358352918301918301611639565b509695505050505050565b6000806040838503121561166e57600080fd5b823567ffffffffffffffff8082111561168657600080fd5b818501915085601f83011261169a57600080fd5b813560206116aa611611836115cc565b82815260059290921b840181019181810190898411156116c957600080fd5b948201945b838610156116ee576116df86611424565b825294820194908201906116ce565b9650508601359250508082111561170457600080fd5b50611711858286016115f0565b9150509250929050565b60006020828403121561172d57600080fd5b5035919050565b6000806040838503121561174757600080fd5b61175083611424565b915061154060208401611424565b600181811c9082168061177257607f821691505b60208210810361179257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526018908201527f596f7520617265206e6f742070617274206f66207465616d0000000000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161180d5761180d6117e5565b5060010190565b60008219821115611827576118276117e5565b500190565b60008282101561183e5761183e6117e5565b500390565b600081600019048311821515161561185d5761185d6117e5565b500290565b60008261187f57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212206fe4b497ce8a6c3f2cdb7efd82ab3b88bb42efe0b2019be6d32124a4ed10043364736f6c634300080e0033",
    "sourceMap": "261:3806:18:-:0;;;187:4:16;164:27;;204:4:17;167:41;;261:3806:18;;;;;;;;;;1978:113:9;;;;;;;;;;;;;-1:-1:-1;;;1978:113:9;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:9;;;2052:5;2044;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2067:17:9;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;996:7:8;:15;;-1:-1:-1;;996:15:8;;;-1:-1:-1;936:32:7;719:10:13;936:18:7;:32::i;:::-;663:39:19::1;669:10;687:14;3175:2:9::0;687::19::1;:14;:::i;:::-;681:20;::::0;:3:::1;:20;:::i;:::-;663:5;:39::i;:::-;261:3806:18::0;;2433:187:7;2525:6;;;-1:-1:-1;;;;;2541:17:7;;;2525:6;2541:17;;;-1:-1:-1;;;;;;2541:17:7;;;;;;2573:40;;2525:6;;;;;;;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;8402:389:9:-;-1:-1:-1;;;;;8485:21:9;;8477:65;;;;-1:-1:-1;;;8477:65:9;;1904:2:21;8477:65:9;;;1886:21:21;1943:2;1923:18;;;1916:30;1982:33;1962:18;;;1955:61;2033:18;;8477:65:9;;;;;;;;;8553:49;8582:1;8586:7;8595:6;8553:20;:49::i;:::-;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:9;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:9;;2341:25:21;;;-1:-1:-1;;;;;8688:37:9;;;8705:1;;8688:37;;2329:2:21;2314:18;8688:37:9;;;;;;;8402:389;;:::o;947:195:19:-;1239:19:8;:17;:19::i;:::-;1091:44:19::1;1118:4;1124:2;1128:6;1091:26;;;;;:44;;:::i;:::-;947:195:::0;;;:::o;1767:106:8:-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:8;;2579:2:21;1828:38:8;;;2561:21:21;2618:2;2598:18;;;2591:30;-1:-1:-1;;;2637:18:21;;;2630:46;2693:18;;1828:38:8;2377:340:21;1828:38:8;1767:106::o;261:3806:18:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;261:3806:18;;;-1:-1:-1;261:3806:18;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:21;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:422;235:1;278:5;235:1;292:270;313:7;303:8;300:21;292:270;;;372:4;368:1;364:6;360:17;354:4;351:27;348:53;;;381:18;;:::i;:::-;431:7;421:8;417:22;414:55;;;451:16;;;;414:55;530:22;;;;490:15;;;;292:270;;;296:3;146:422;;;;;:::o;573:806::-;622:5;652:8;642:80;;-1:-1:-1;693:1:21;707:5;;642:80;741:4;731:76;;-1:-1:-1;778:1:21;792:5;;731:76;823:4;841:1;836:59;;;;909:1;904:130;;;;816:218;;836:59;866:1;857:10;;880:5;;;904:130;941:3;931:8;928:17;925:43;;;948:18;;:::i;:::-;-1:-1:-1;;1004:1:21;990:16;;1019:5;;816:218;;1118:2;1108:8;1105:16;1099:3;1093:4;1090:13;1086:36;1080:2;1070:8;1067:16;1062:2;1056:4;1053:12;1049:35;1046:77;1043:159;;;-1:-1:-1;1155:19:21;;;1187:5;;1043:159;1234:34;1259:8;1253:4;1234:34;:::i;:::-;1304:6;1300:1;1296:6;1292:19;1283:7;1280:32;1277:58;;;1315:18;;:::i;:::-;1353:20;;-1:-1:-1;573:806:21;;;;;:::o;1384:140::-;1442:5;1471:47;1512:4;1502:8;1498:19;1492:4;1471:47;:::i;:::-;1462:56;1384:140;-1:-1:-1;;;1384:140:21:o;1529:168::-;1569:7;1635:1;1631;1627:6;1623:14;1620:1;1617:21;1612:1;1605:9;1598:17;1594:45;1591:71;;;1642:18;;:::i;:::-;-1:-1:-1;1682:9:21;;1529:168::o;2062:128::-;2102:3;2133:1;2129:6;2126:1;2123:13;2120:39;;;2139:18;;:::i;:::-;-1:-1:-1;2175:9:21;;2062:128::o;2722:380::-;2801:1;2797:12;;;;2844;;;2865:61;;2919:4;2911:6;2907:17;2897:27;;2865:61;2972:2;2964:6;2961:14;2941:18;2938:38;2935:161;;3018:10;3013:3;3009:20;3006:1;2999:31;3053:4;3050:1;3043:15;3081:4;3078:1;3071:15;2935:161;;2722:380;;;:::o;:::-;261:3806:18;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102065760003560e01c8063715018a61161011a57806395d89b41116100ad578063c79f474b1161007c578063c79f474b14610422578063d7992d4d1461044e578063dd62ed3e14610461578063ead7a1dc14610474578063f2fde38b1461047d57600080fd5b806395d89b41146103e1578063a457c2d7146103e9578063a9059cbb146103fc578063b54dd7101461040f57600080fd5b80637f422669116100e95780637f422669146103a85780638456cb59146103b0578063864879bb146103b85780638da5cb5b146103cb57600080fd5b8063715018a61461035a578063765dd7a01461036257806379cc6790146103755780637f1bee231461038857600080fd5b8063313ce5671161019d57806340c10f191161016c57806340c10f19146102ed57806342966c68146103005780635c975abb1461031357806369fe0e2d1461031e57806370a082311461033157600080fd5b8063313ce567146102b057806336b59bc4146102bf57806339509351146102d25780633f4ba83a146102e557600080fd5b80630cda45c8116101d95780630cda45c81461027057806318160ddd146102825780631b2903691461028a57806323b872dd1461029d57600080fd5b8063056e31c11461020b57806306fdde031461023357806308695b4114610248578063095ea7b31461025d575b600080fd5b61021e610219366004611440565b610490565b60405190151581526020015b60405180910390f35b61023b6104ec565b60405161022a9190611483565b61025b6102563660046114d8565b61057e565b005b61021e61026b3660046114f3565b6105c8565b6006545b60405190815260200161022a565b600254610274565b61025b61029836600461151d565b6105e0565b61021e6102ab366004611549565b6106a5565b6040516012815260200161022a565b61025b6102cd36600461165b565b6106c9565b61021e6102e03660046114f3565b61084c565b61025b61086e565b61025b6102fb3660046114f3565b610880565b61025b61030e36600461171b565b6108bd565b60055460ff1661021e565b61025b61032c36600461171b565b6108ca565b61027461033f3660046114d8565b6001600160a01b031660009081526020819052604090205490565b61025b610914565b61025b6103703660046114d8565b610926565b61025b6103833660046114f3565b61098c565b6103906109a1565b6040516001600160a01b03909116815260200161022a565b600754610274565b61025b6109bb565b61025b6103c636600461171b565b6109cb565b60055461010090046001600160a01b0316610390565b61023b610a0e565b61021e6103f73660046114f3565b610a1d565b61021e61040a3660046114f3565b610a98565b61025b61041d3660046114f3565b610ad9565b61021e6104303660046114d8565b6001600160a01b031660009081526008602052604090205460ff1690565b61025b61045c3660046114d8565b610b68565b61027461046f366004611734565b610b91565b61027460095481565b61025b61048b3660046114d8565b610bbc565b60405162461bcd60e51b815260206004820152602360248201527f4e696365205472792c205374696c6c206e6f206d6f6e6b65792062757373696e60448201526265737360e81b60648201526000906084015b60405180910390fd5b6060600380546104fb9061175e565b80601f01602080910402602001604051908101604052809291908181526020018280546105279061175e565b80156105745780601f1061054957610100808354040283529160200191610574565b820191906000526020600020905b81548152906001019060200180831161055757829003601f168201915b5050505050905090565b610586610c32565b803b156105a657604051632111dc4760e01b815260040160405180910390fd5b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6000336105d6818585610c92565b5060019392505050565b3360009081526008602052604090205460ff1661060f5760405162461bcd60e51b81526004016104e390611798565b610617610db6565b81610637826001600160a01b031660009081526020819052604090205490565b10156106565760405163569d45cf60e11b815260040160405180910390fd5b610660818361098c565b604080518381526001600160a01b03831660208201527f63706707d038997d2210eb026bb1339397deab463921538a81bb98e69ee54ca8910160405180910390a15050565b6000336106b3858285610dfc565b6106be858585610e76565b506001949350505050565b3360009081526008602052604090205460ff166106f85760405162461bcd60e51b81526004016104e390611798565b610700610db6565b805182511461072257604051630c17582360e31b815260040160405180910390fd5b60005b82518110156108475760006001600160a01b031683828151811061074b5761074b6117cf565b60200260200101516001600160a01b03160361077a576040516309f9845360e01b815260040160405180910390fd5b6107b683828151811061078f5761078f6117cf565b60200260200101518383815181106107a9576107a96117cf565b602002602001015161104f565b7fe6b392a485300aed5d0afd949a6e7bbb13d3dc1a15efa0a0c1630b48ae54ca468382815181106107e9576107e96117cf565b6020026020010151838381518110610803576108036117cf565b602002602001015160405161082d9291906001600160a01b03929092168252602082015260400190565b60405180910390a18061083f816117fb565b915050610725565b505050565b6000336105d681858561085f8383610b91565b6108699190611814565b610c92565b610876610c32565b61087e61113a565b565b3360009081526008602052604090205460ff166108af5760405162461bcd60e51b81526004016104e390611798565b6108b9828261104f565b5050565b6108c7338261118c565b50565b6108d2610c32565b600681905560408051828152602081018390527fed28c14db89870da08d76b69e3f96d95cbb779778f62a9ea4d4d41dc082d088a91015b60405180910390a150565b61091c610c32565b61087e60006112e6565b61092e610c32565b6001600160a01b03811660009081526008602052604090205460ff16156109685760405163f411c32760e01b815260040160405180910390fd5b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b610997823383610dfc565b6108b9828261118c565b60006109ab610c32565b50600a546001600160a01b031690565b6109c3610c32565b61087e611340565b6109d3610c32565b600781905560408051828152602081018390527f6a83cc218b6e35f4b68868b8cf2a7968201acfd91f619cd387fb092745e5b8dc9101610909565b6060600480546104fb9061175e565b60003381610a2b8286610b91565b905083811015610a8b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016104e3565b6106be8286868403610c92565b60405162461bcd60e51b81526020600482015260136024820152724e6f204d6f6e6b65792042757373696e65737360681b60448201526000906064016104e3565b6001600160a01b038216610b0057604051633415fd6160e11b815260040160405180910390fd5b60008111610b215760405163114617e760e21b815260040160405180910390fd5b6000610b2c8261137d565b90506000610b39836113b0565b600a549091503390610b569082906001600160a01b031684610e76565b610b61818685610e76565b5050505050565b610b70610c32565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610bc4610c32565b6001600160a01b038116610c295760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104e3565b6108c7816112e6565b6005546001600160a01b0361010090910416331461087e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104e3565b6001600160a01b038316610cf45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104e3565b6001600160a01b038216610d555760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104e3565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b60055460ff161561087e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104e3565b6000610e088484610b91565b90506000198114610e705781811015610e635760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016104e3565b610e708484848403610c92565b50505050565b6001600160a01b038316610eda5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104e3565b6001600160a01b038216610f3c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104e3565b610f478383836113d3565b6001600160a01b03831660009081526020819052604090205481811015610fbf5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016104e3565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610ff6908490611814565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161104291815260200190565b60405180910390a3610e70565b6001600160a01b0382166110a55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104e3565b6110b1600083836113d3565b80600260008282546110c39190611814565b90915550506001600160a01b038216600090815260208190526040812080548392906110f0908490611814565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6111426113db565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166111ec5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104e3565b6111f8826000836113d3565b6001600160a01b0382166000908152602081905260409020548181101561126c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016104e3565b6001600160a01b038316600090815260208190526040812083830390556002805484929061129b90849061182c565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611348610db6565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861116f3390565b600080600654612710611390919061182c565b905061271061139f8285611843565b6113a99190611862565b9392505050565b6000612710600654836113c39190611843565b6113cd9190611862565b92915050565b610847610db6565b60055460ff1661087e5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104e3565b80356001600160a01b038116811461143b57600080fd5b919050565b60008060006060848603121561145557600080fd5b61145e84611424565b925061146c60208501611424565b915061147a60408501611424565b90509250925092565b600060208083528351808285015260005b818110156114b057858101830151858201604001528201611494565b818111156114c2576000604083870101525b50601f01601f1916929092016040019392505050565b6000602082840312156114ea57600080fd5b6113a982611424565b6000806040838503121561150657600080fd5b61150f83611424565b946020939093013593505050565b6000806040838503121561153057600080fd5b8235915061154060208401611424565b90509250929050565b60008060006060848603121561155e57600080fd5b61156784611424565b925061157560208501611424565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156115c4576115c4611585565b604052919050565b600067ffffffffffffffff8211156115e6576115e6611585565b5060051b60200190565b600082601f83011261160157600080fd5b81356020611616611611836115cc565b61159b565b82815260059290921b8401810191818101908684111561163557600080fd5b8286015b848110156116505780358352918301918301611639565b509695505050505050565b6000806040838503121561166e57600080fd5b823567ffffffffffffffff8082111561168657600080fd5b818501915085601f83011261169a57600080fd5b813560206116aa611611836115cc565b82815260059290921b840181019181810190898411156116c957600080fd5b948201945b838610156116ee576116df86611424565b825294820194908201906116ce565b9650508601359250508082111561170457600080fd5b50611711858286016115f0565b9150509250929050565b60006020828403121561172d57600080fd5b5035919050565b6000806040838503121561174757600080fd5b61175083611424565b915061154060208401611424565b600181811c9082168061177257607f821691505b60208210810361179257634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526018908201527f596f7520617265206e6f742070617274206f66207465616d0000000000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161180d5761180d6117e5565b5060010190565b60008219821115611827576118276117e5565b500190565b60008282101561183e5761183e6117e5565b500390565b600081600019048311821515161561185d5761185d6117e5565b500290565b60008261187f57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212206fe4b497ce8a6c3f2cdb7efd82ab3b88bb42efe0b2019be6d32124a4ed10043364736f6c634300080e0033",
    "sourceMap": "261:3806:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1343:175:19;;;;;;:::i;:::-;;:::i;:::-;;;696:14:21;;689:22;671:41;;659:2;644:18;1343:175:19;;;;;;;;2156:98:9;;;:::i;:::-;;;;;;;:::i;1526:202:18:-;;;;;;:::i;:::-;;:::i;:::-;;4433:197:9;;;;;;:::i;:::-;;:::i;1255:77:16:-;1322:3;;1255:77;;;1921:25:21;;;1909:2;1894:18;1255:77:16;1775:177:21;3244:106:9;3331:12;;3244:106;;2836:291:18;;;;;;:::i;:::-;;:::i;5192:286:9:-;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;2691:36:21;;2679:2;2664:18;3093:91:9;2549:184:21;2209:538:18;;;;;;:::i;:::-;;:::i;5873:234:9:-;;;;;;:::i;:::-;;:::i;780:63:19:-;;;:::i;849:92::-;;;;;;:::i;:::-;;:::i;578:89:11:-;;;;;;:::i;:::-;;:::i;1615:84:8:-;1685:7;;;;1615:84;;380:112:16;;;;;;:::i;:::-;;:::i;3408:125:9:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:9;3482:7;3508:18;;;;;;;;;;;;3408:125;1831:101:7;;;:::i;1188:195:18:-;;;;;;:::i;:::-;;:::i;973:161:11:-;;;;;;:::i;:::-;;:::i;3955:110:18:-;;;:::i;:::-;;;-1:-1:-1;;;;;5505:32:21;;;5487:51;;5475:2;5460:18;3955:110:18;5341:203:21;967:98:17;1041:17;;967:98;;715:59:19;;;:::i;472:200:17:-;;;;;;:::i;:::-;;:::i;1201:85:7:-;1273:6;;;;;-1:-1:-1;;;;;1273:6:7;1201:85;;2367:102:9;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;1148:189:19:-;;;;;;:::i;:::-;;:::i;3332:497:18:-;;;;;;:::i;:::-;;:::i;3835:114::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3919:23:18;3896:4;3919:23;;;:16;:23;;;;;;;;;3835:114;1843:157;;;;;;:::i;:::-;;:::i;3976:149:9:-;;;;;;:::i;:::-;;:::i;354:23:18:-;;;;;;2081:198:7;;;;;;:::i;:::-;;:::i;1343:175:19:-;1445:45;;-1:-1:-1;;;1445:45:19;;6016:2:21;1445:45:19;;;5998:21:21;6055:2;6035:18;;;6028:30;6094:34;6074:18;;;6067:62;-1:-1:-1;;;6145:18:21;;;6138:33;1430:4:19;;6188:19:21;;1445:45:19;;;;;;;;2156:98:9;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;1526:202:18:-;1094:13:7;:11;:13::i;:::-;1015:18:18;;1059:8;1603:81:::1;;1655:18;;-1:-1:-1::0;;;1655:18:18::1;;;;;;;;;;;1603:81;1693:12;:28:::0;;-1:-1:-1;;;;;;1693:28:18::1;-1:-1:-1::0;;;;;1693:28:18;;;::::1;::::0;;;::::1;::::0;;1526:202::o;4433:197:9:-;4516:4;719:10:13;4570:32:9;719:10:13;4586:7:9;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:9;;4433:197;-1:-1:-1;;;4433:197:9:o;2836:291:18:-;545:10:19;528:28;;;;:16;:28;;;;;;;;520:65;;;;-1:-1:-1;;;520:65:19;;;;;;;:::i;:::-;1239:19:8::1;:17;:19::i;:::-;2985:7:18::2;2966:16;2976:5;-1:-1:-1::0;;;;;3508:18:9;3482:7;3508:18;;;;;;;;;;;;3408:125;2966:16:18::2;:26;2962:82;;;3015:18;;-1:-1:-1::0;;;3015:18:18::2;;;;;;;;;;;2962:82;3053:24;3062:5;3069:7;3053:8;:24::i;:::-;3092:28;::::0;;7130:25:21;;;-1:-1:-1;;;;;7191:32:21;;7186:2;7171:18;;7164:60;3092:28:18::2;::::0;7103:18:21;3092:28:18::2;;;;;;;2836:291:::0;;:::o;5192:286:9:-;5319:4;719:10:13;5375:38:9;5391:4;719:10:13;5406:6:9;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:9;;5192:286;-1:-1:-1;;;;5192:286:9:o;2209:538:18:-;545:10:19;528:28;;;;:16;:28;;;;;;;;520:65;;;;-1:-1:-1;;;520:65:19;;;;;;;:::i;:::-;1239:19:8::1;:17;:19::i;:::-;2376:8:18::2;:15;2355:10;:17;:36;2351:105;;2414:31;;-1:-1:-1::0;;;2414:31:18::2;;;;;;;;;;;2351:105;2471:9;2466:275;2490:10;:17;2486:1;:21;2466:275;;;2557:1;-1:-1:-1::0;;;;;2532:27:18::2;:10;2543:1;2532:13;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;2532:27:18::2;::::0;2528:94:::2;;2586:21;;-1:-1:-1::0;;;2586:21:18::2;;;;;;;;;;;2528:94;2636:33;2642:10;2653:1;2642:13;;;;;;;;:::i;:::-;;;;;;;2657:8;2666:1;2657:11;;;;;;;;:::i;:::-;;;;;;;2636:5;:33::i;:::-;2689:41;2703:10;2714:1;2703:13;;;;;;;;:::i;:::-;;;;;;;2718:8;2727:1;2718:11;;;;;;;;:::i;:::-;;;;;;;2689:41;;;;;;-1:-1:-1::0;;;;;7559:32:21;;;;7541:51;;7623:2;7608:18;;7601:34;7529:2;7514:18;;7367:274;2689:41:18::2;;;;;;;;2509:3:::0;::::2;::::0;::::2;:::i;:::-;;;;2466:275;;;;2209:538:::0;;:::o;5873:234:9:-;5961:4;719:10:13;6015:64:9;719:10:13;6031:7:9;6068:10;6040:25;719:10:13;6031:7:9;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;780:63:19:-;1094:13:7;:11;:13::i;:::-;826:10:19::1;:8;:10::i;:::-;780:63::o:0;849:92::-;545:10;528:28;;;;:16;:28;;;;;;;;520:65;;;;-1:-1:-1;;;520:65:19;;;;;;;:::i;:::-;917:17:::1;923:2;927:6;917:5;:17::i;:::-;849:92:::0;;:::o;578:89:11:-;633:27;719:10:13;653:6:11;633:5;:27::i;:::-;578:89;:::o;380:112:16:-;1094:13:7;:11;:13::i;:::-;439:3:16::1;:10:::0;;;464:21:::1;::::0;;8225:25:21;;;8281:2;8266:18;;8259:34;;;464:21:16::1;::::0;8198:18:21;464:21:16::1;;;;;;;;380:112:::0;:::o;1831:101:7:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;1188:195:18:-:0;1094:13:7;:11;:13::i;:::-;-1:-1:-1;;;;;1262:25:18;::::1;;::::0;;;:16:::1;:25;::::0;;;;;::::1;;1258:77;;;1310:14;;-1:-1:-1::0;;;1310:14:18::1;;;;;;;;;;;1258:77;-1:-1:-1::0;;;;;1344:25:18::1;;::::0;;;:16:::1;:25;::::0;;;;:32;;-1:-1:-1;;1344:32:18::1;1372:4;1344:32;::::0;;1188:195::o;973:161:11:-;1049:46;1065:7;719:10:13;1088:6:11;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;3955:110:18:-;4021:7;1094:13:7;:11;:13::i;:::-;-1:-1:-1;4046:12:18::1;::::0;-1:-1:-1;;;;;4046:12:18::1;3955:110:::0;:::o;715:59:19:-;1094:13:7;:11;:13::i;:::-;759:8:19::1;:6;:8::i;472:200:17:-:0;1094:13:7;:11;:13::i;:::-;559:17:17::1;:38:::0;;;612:53:::1;::::0;;8225:25:21;;;8281:2;8266:18;;8259:34;;;612:53:17::1;::::0;8198:18:21;612:53:17::1;8051:248:21::0;2367:102:9;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:13;6687:4:9;6768:25;719:10:13;6785:7:9;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:9;;8506:2:21;6803:85:9;;;8488:21:21;8545:2;8525:18;;;8518:30;8584:34;8564:18;;;8557:62;-1:-1:-1;;;8635:18:21;;;8628:35;8680:19;;6803:85:9;8304:401:21;6803:85:9;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;1148:189:19:-;1280:29;;-1:-1:-1;;;1280:29:19;;8912:2:21;1280:29:19;;;8894:21:21;8951:2;8931:18;;;8924:30;-1:-1:-1;;;8970:18:21;;;8963:49;1260:4:19;;9029:18:21;;1280:29:19;8710:343:21;3332:497:18;-1:-1:-1;;;;;3419:17:18;;3415:80;;3459:25;;-1:-1:-1;;;3459:25:18;;;;;;;;;;;3415:80;3519:1;3508:7;:12;3504:69;;3543:19;;-1:-1:-1;;;3543:19:18;;;;;;;;;;;3504:69;3582:14;3599:35;3626:7;3599:26;:35::i;:::-;3582:52;;3644:14;3661:30;3683:7;3661:21;:30::i;:::-;3758:12;;3644:47;;-1:-1:-1;719:10:13;;3740:42:18;;719:10:13;;-1:-1:-1;;;;;3758:12:18;3644:47;3740:9;:42::i;:::-;3792:30;3802:6;3810:3;3815:6;3792:9;:30::i;:::-;3405:424;;;3332:497;;:::o;1843:157::-;1094:13:7;:11;:13::i;:::-;-1:-1:-1;;;;;1918:25:18::1;1946:5;1918:25:::0;;;:16:::1;:25;::::0;;;;:33;;-1:-1:-1;;1918:33:18::1;::::0;;1843:157::o;3976:149:9:-;-1:-1:-1;;;;;4091:18:9;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;2081:198:7:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:7;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:7;;9260:2:21;2161:73:7::1;::::0;::::1;9242:21:21::0;9299:2;9279:18;;;9272:30;9338:34;9318:18;;;9311:62;-1:-1:-1;;;9389:18:21;;;9382:36;9435:19;;2161:73:7::1;9058:402:21::0;2161:73:7::1;2244:28;2263:8;2244:18;:28::i;1359:130::-:0;1273:6;;-1:-1:-1;;;;;1273:6:7;;;;;719:10:13;1422:23:7;1414:68;;;;-1:-1:-1;;;1414:68:7;;9667:2:21;1414:68:7;;;9649:21:21;;;9686:18;;;9679:30;9745:34;9725:18;;;9718:62;9797:18;;1414:68:7;9465:356:21;10110:370:9;-1:-1:-1;;;;;10241:19:9;;10233:68;;;;-1:-1:-1;;;10233:68:9;;10028:2:21;10233:68:9;;;10010:21:21;10067:2;10047:18;;;10040:30;10106:34;10086:18;;;10079:62;-1:-1:-1;;;10157:18:21;;;10150:34;10201:19;;10233:68:9;9826:400:21;10233:68:9;-1:-1:-1;;;;;10319:21:9;;10311:68;;;;-1:-1:-1;;;10311:68:9;;10433:2:21;10311:68:9;;;10415:21:21;10472:2;10452:18;;;10445:30;10511:34;10491:18;;;10484:62;-1:-1:-1;;;10562:18:21;;;10555:32;10604:19;;10311:68:9;10231:398:21;10311:68:9;-1:-1:-1;;;;;10390:18:9;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;1921:25:21;;;10441:32:9;;1894:18:21;10441:32:9;;;;;;;10110:370;;;:::o;1767:106:8:-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:8;;10836:2:21;1828:38:8;;;10818:21:21;10875:2;10855:18;;;10848:30;-1:-1:-1;;;10894:18:21;;;10887:46;10950:18;;1828:38:8;10634:340:21;10761:441:9;10891:24;10918:25;10928:5;10935:7;10918:9;:25::i;:::-;10891:52;;-1:-1:-1;;10957:16:9;:37;10953:243;;11038:6;11018:16;:26;;11010:68;;;;-1:-1:-1;;;11010:68:9;;11181:2:21;11010:68:9;;;11163:21:21;11220:2;11200:18;;;11193:30;11259:31;11239:18;;;11232:59;11308:18;;11010:68:9;10979:353:21;11010:68:9;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:9;;7593:68;;;;-1:-1:-1;;;7593:68:9;;11539:2:21;7593:68:9;;;11521:21:21;11578:2;11558:18;;;11551:30;11617:34;11597:18;;;11590:62;-1:-1:-1;;;11668:18:21;;;11661:35;11713:19;;7593:68:9;11337:401:21;7593:68:9;-1:-1:-1;;;;;7679:16:9;;7671:64;;;;-1:-1:-1;;;7671:64:9;;11945:2:21;7671:64:9;;;11927:21:21;11984:2;11964:18;;;11957:30;12023:34;12003:18;;;11996:62;-1:-1:-1;;;12074:18:21;;;12067:33;12117:19;;7671:64:9;11743:399:21;7671:64:9;7746:38;7767:4;7773:2;7777:6;7746:20;:38::i;:::-;-1:-1:-1;;;;;7817:15:9;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:9;;12349:2:21;7842:72:9;;;12331:21:21;12388:2;12368:18;;;12361:30;12427:34;12407:18;;;12400:62;-1:-1:-1;;;12478:18:21;;;12471:36;12524:19;;7842:72:9;12147:402:21;7842:72:9;-1:-1:-1;;;;;7948:15:9;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:9;8054:4;-1:-1:-1;;;;;8045:26:9;;8064:6;8045:26;;;;1921:25:21;;1909:2;1894:18;;1775:177;8045:26:9;;;;;;;;8082:37;2209:538:18;8402:389:9;-1:-1:-1;;;;;8485:21:9;;8477:65;;;;-1:-1:-1;;;8477:65:9;;12756:2:21;8477:65:9;;;12738:21:21;12795:2;12775:18;;;12768:30;12834:33;12814:18;;;12807:61;12885:18;;8477:65:9;12554:355:21;8477:65:9;8553:49;8582:1;8586:7;8595:6;8553:20;:49::i;:::-;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8645:18:9;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:9;;1921:25:21;;;-1:-1:-1;;;;;8688:37:9;;;8705:1;;8688:37;;1909:2:21;1894:18;8688:37:9;;;;;;;849:92:19;;:::o;2433:117:8:-;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:8::1;::::0;;2521:22:::1;719:10:13::0;2530:12:8::1;2521:22;::::0;-1:-1:-1;;;;;5505:32:21;;;5487:51;;5475:2;5460:18;2521:22:8::1;;;;;;;2433:117::o:0;9111:576:9:-;-1:-1:-1;;;;;9194:21:9;;9186:67;;;;-1:-1:-1;;;9186:67:9;;13116:2:21;9186:67:9;;;13098:21:21;13155:2;13135:18;;;13128:30;13194:34;13174:18;;;13167:62;-1:-1:-1;;;13245:18:21;;;13238:31;13286:19;;9186:67:9;12914:397:21;9186:67:9;9264:49;9285:7;9302:1;9306:6;9264:20;:49::i;:::-;-1:-1:-1;;;;;9349:18:9;;9324:22;9349:18;;;;;;;;;;;9385:24;;;;9377:71;;;;-1:-1:-1;;;9377:71:9;;13518:2:21;9377:71:9;;;13500:21:21;13557:2;13537:18;;;13530:30;13596:34;13576:18;;;13569:62;-1:-1:-1;;;13647:18:21;;;13640:32;13689:19;;9377:71:9;13316:398:21;9377:71:9;-1:-1:-1;;;;;9482:18:9;;:9;:18;;;;;;;;;;9503:23;;;9482:44;;9546:12;:22;;9520:6;;9482:9;9546:22;;9520:6;;9546:22;:::i;:::-;;;;-1:-1:-1;;9584:37:9;;1921:25:21;;;9610:1:9;;-1:-1:-1;;;;;9584:37:9;;;;;1909:2:21;1894:18;9584:37:9;;;;;;;2466:275:18::2;2209:538:::0;;:::o;2433:187:7:-;2525:6;;;-1:-1:-1;;;;;2541:17:7;;;2525:6;2541:17;;;-1:-1:-1;;;;;;2541:17:7;;;;;;2573:40;;2525:6;;;;;;;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;2186:115:8:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:8::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:13::0;;640:96;657:251:16;767:7;790:28;829:3;;821:5;:11;;;;:::i;:::-;790:42;-1:-1:-1;895:5:16;851:40;790:42;851:17;:40;:::i;:::-;850:50;;;;:::i;:::-;842:59;657:251;-1:-1:-1;;;657:251:16:o;1073:177::-;1178:7;1237:5;1230:3;;1210:17;:23;;;;:::i;:::-;1209:33;;;;:::i;:::-;1201:42;1073:177;-1:-1:-1;;1073:177:16:o;947:195:19:-;1239:19:8;:17;:19::i;1945:106::-;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:8;;14446:2:21;2003:41:8;;;14428:21:21;14485:2;14465:18;;;14458:30;-1:-1:-1;;;14504:18:21;;;14497:50;14564:18;;2003:41:8;14244:344:21;14:173;82:20;;-1:-1:-1;;;;;131:31:21;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:334::-;269:6;277;285;338:2;326:9;317:7;313:23;309:32;306:52;;;354:1;351;344:12;306:52;377:29;396:9;377:29;:::i;:::-;367:39;;425:38;459:2;448:9;444:18;425:38;:::i;:::-;415:48;;482:38;516:2;505:9;501:18;482:38;:::i;:::-;472:48;;192:334;;;;;:::o;723:597::-;835:4;864:2;893;882:9;875:21;925:6;919:13;968:6;963:2;952:9;948:18;941:34;993:1;1003:140;1017:6;1014:1;1011:13;1003:140;;;1112:14;;;1108:23;;1102:30;1078:17;;;1097:2;1074:26;1067:66;1032:10;;1003:140;;;1161:6;1158:1;1155:13;1152:91;;;1231:1;1226:2;1217:6;1206:9;1202:22;1198:31;1191:42;1152:91;-1:-1:-1;1304:2:21;1283:15;-1:-1:-1;;1279:29:21;1264:45;;;;1311:2;1260:54;;723:597;-1:-1:-1;;;723:597:21:o;1325:186::-;1384:6;1437:2;1425:9;1416:7;1412:23;1408:32;1405:52;;;1453:1;1450;1443:12;1405:52;1476:29;1495:9;1476:29;:::i;1516:254::-;1584:6;1592;1645:2;1633:9;1624:7;1620:23;1616:32;1613:52;;;1661:1;1658;1651:12;1613:52;1684:29;1703:9;1684:29;:::i;:::-;1674:39;1760:2;1745:18;;;;1732:32;;-1:-1:-1;;;1516:254:21:o;1957:::-;2025:6;2033;2086:2;2074:9;2065:7;2061:23;2057:32;2054:52;;;2102:1;2099;2092:12;2054:52;2138:9;2125:23;2115:33;;2167:38;2201:2;2190:9;2186:18;2167:38;:::i;:::-;2157:48;;1957:254;;;;;:::o;2216:328::-;2293:6;2301;2309;2362:2;2350:9;2341:7;2337:23;2333:32;2330:52;;;2378:1;2375;2368:12;2330:52;2401:29;2420:9;2401:29;:::i;:::-;2391:39;;2449:38;2483:2;2472:9;2468:18;2449:38;:::i;:::-;2439:48;;2534:2;2523:9;2519:18;2506:32;2496:42;;2216:328;;;;;:::o;2738:127::-;2799:10;2794:3;2790:20;2787:1;2780:31;2830:4;2827:1;2820:15;2854:4;2851:1;2844:15;2870:275;2941:2;2935:9;3006:2;2987:13;;-1:-1:-1;;2983:27:21;2971:40;;3041:18;3026:34;;3062:22;;;3023:62;3020:88;;;3088:18;;:::i;:::-;3124:2;3117:22;2870:275;;-1:-1:-1;2870:275:21:o;3150:183::-;3210:4;3243:18;3235:6;3232:30;3229:56;;;3265:18;;:::i;:::-;-1:-1:-1;3310:1:21;3306:14;3322:4;3302:25;;3150:183::o;3338:662::-;3392:5;3445:3;3438:4;3430:6;3426:17;3422:27;3412:55;;3463:1;3460;3453:12;3412:55;3499:6;3486:20;3525:4;3549:60;3565:43;3605:2;3565:43;:::i;:::-;3549:60;:::i;:::-;3643:15;;;3729:1;3725:10;;;;3713:23;;3709:32;;;3674:12;;;;3753:15;;;3750:35;;;3781:1;3778;3771:12;3750:35;3817:2;3809:6;3805:15;3829:142;3845:6;3840:3;3837:15;3829:142;;;3911:17;;3899:30;;3949:12;;;;3862;;3829:142;;;-1:-1:-1;3989:5:21;3338:662;-1:-1:-1;;;;;;3338:662:21:o;4005:1146::-;4123:6;4131;4184:2;4172:9;4163:7;4159:23;4155:32;4152:52;;;4200:1;4197;4190:12;4152:52;4240:9;4227:23;4269:18;4310:2;4302:6;4299:14;4296:34;;;4326:1;4323;4316:12;4296:34;4364:6;4353:9;4349:22;4339:32;;4409:7;4402:4;4398:2;4394:13;4390:27;4380:55;;4431:1;4428;4421:12;4380:55;4467:2;4454:16;4489:4;4513:60;4529:43;4569:2;4529:43;:::i;4513:60::-;4607:15;;;4689:1;4685:10;;;;4677:19;;4673:28;;;4638:12;;;;4713:19;;;4710:39;;;4745:1;4742;4735:12;4710:39;4769:11;;;;4789:148;4805:6;4800:3;4797:15;4789:148;;;4871:23;4890:3;4871:23;:::i;:::-;4859:36;;4822:12;;;;4915;;;;4789:148;;;4956:5;-1:-1:-1;;4999:18:21;;4986:32;;-1:-1:-1;;5030:16:21;;;5027:36;;;5059:1;5056;5049:12;5027:36;;5082:63;5137:7;5126:8;5115:9;5111:24;5082:63;:::i;:::-;5072:73;;;4005:1146;;;;;:::o;5156:180::-;5215:6;5268:2;5256:9;5247:7;5243:23;5239:32;5236:52;;;5284:1;5281;5274:12;5236:52;-1:-1:-1;5307:23:21;;5156:180;-1:-1:-1;5156:180:21:o;5549:260::-;5617:6;5625;5678:2;5666:9;5657:7;5653:23;5649:32;5646:52;;;5694:1;5691;5684:12;5646:52;5717:29;5736:9;5717:29;:::i;:::-;5707:39;;5765:38;5799:2;5788:9;5784:18;5765:38;:::i;6218:380::-;6297:1;6293:12;;;;6340;;;6361:61;;6415:4;6407:6;6403:17;6393:27;;6361:61;6468:2;6460:6;6457:14;6437:18;6434:38;6431:161;;6514:10;6509:3;6505:20;6502:1;6495:31;6549:4;6546:1;6539:15;6577:4;6574:1;6567:15;6431:161;;6218:380;;;:::o;6603:348::-;6805:2;6787:21;;;6844:2;6824:18;;;6817:30;6883:26;6878:2;6863:18;;6856:54;6942:2;6927:18;;6603:348::o;7235:127::-;7296:10;7291:3;7287:20;7284:1;7277:31;7327:4;7324:1;7317:15;7351:4;7348:1;7341:15;7646:127;7707:10;7702:3;7698:20;7695:1;7688:31;7738:4;7735:1;7728:15;7762:4;7759:1;7752:15;7778:135;7817:3;7838:17;;;7835:43;;7858:18;;:::i;:::-;-1:-1:-1;7905:1:21;7894:13;;7778:135::o;7918:128::-;7958:3;7989:1;7985:6;7982:1;7979:13;7976:39;;;7995:18;;:::i;:::-;-1:-1:-1;8031:9:21;;7918:128::o;13719:125::-;13759:4;13787:1;13784;13781:8;13778:34;;;13792:18;;:::i;:::-;-1:-1:-1;13829:9:21;;13719:125::o;13849:168::-;13889:7;13955:1;13951;13947:6;13943:14;13940:1;13937:21;13932:1;13925:9;13918:17;13914:45;13911:71;;;13962:18;;:::i;:::-;-1:-1:-1;14002:9:21;;13849:168::o;14022:217::-;14062:1;14088;14078:132;;14132:10;14127:3;14123:20;14120:1;14113:31;14167:4;14164:1;14157:15;14195:4;14192:1;14185:15;14078:132;-1:-1:-1;14224:9:21;;14022:217::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addTeamAddress(address)": "765dd7a0",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "batchMinting(address[],uint256[])": "36b59bc4",
    "burn(uint256)": "42966c68",
    "burnFrom(address,uint256)": "79cc6790",
    "burnOnPurchase(uint256,address)": "1b290369",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "getIsTeamMember(address)": "c79f474b",
    "getLoyaltyPercentage()": "7f422669",
    "getTaxCollectorAddress()": "7f1bee23",
    "getfee()": "0cda45c8",
    "increaseAllowance(address,uint256)": "39509351",
    "lockTIme()": "ead7a1dc",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "removeMemberAddress(address)": "d7992d4d",
    "renounceOwnership()": "715018a6",
    "setFee(uint256)": "69fe0e2d",
    "setLoyaltyPercentage(uint256)": "864879bb",
    "setTaxCollector(address)": "08695b41",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,address)": "056e31c1",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "transferingTokensOutside(address,uint256)": "b54dd710",
    "unpause()": "3f4ba83a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AddressAndAmountLengthInvalid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyAdded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotBeAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotSendToAddressZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotEnoughBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"cannotBeContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"valueCannotBeZero\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loyaltyPercentageBefore\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"loyaltyPercentageAfter\",\"type\":\"uint256\"}],\"name\":\"LoyaltyUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenRewarded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeBefore\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeAfter\",\"type\":\"uint256\"}],\"name\":\"feeUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"addTeamAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"batchMinting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"burnOnPurchase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_team\",\"type\":\"address\"}],\"name\":\"getIsTeamMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLoyaltyPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTaxCollectorAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getfee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockTIme\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_member\",\"type\":\"address\"}],\"name\":\"removeMemberAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_loyaltyPercentage\",\"type\":\"uint256\"}],\"name\":\"setLoyaltyPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_taxCollector\",\"type\":\"address\"}],\"name\":\"setTaxCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"amount\",\"type\":\"address\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferingTokensOutside\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTeamAddress(address)\":{\"params\":{\"_member\":\"Address of team member\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"batchMinting(address[],uint256[])\":{\"params\":{\"_addresses\":\"array of addresses to which the amount will go\",\"_amounts\":\"array of amounts which will be awarded\"}},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeMemberAddress(address)\":{\"params\":{\"_member\":\"Address of team member\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setFee(uint256)\":{\"params\":{\"_fee\":\"new listing fee\"}},\"setLoyaltyPercentage(uint256)\":{\"params\":{\"_loyaltyPercentage\":\"new listing Percentage in BIPS\"}},\"setTaxCollector(address)\":{\"params\":{\"_taxCollector\":\"Address of treasy where fee will be collected\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferingTokensOutside(address,uint256)\":{\"params\":{\"_amount\":\"The number of tokens to be transfered\",\"_to\":\"Address that they are sending to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addTeamAddress(address)\":{\"notice\":\"Method for adding team members\"},\"batchMinting(address[],uint256[])\":{\"notice\":\"Method for Rewarding to all winners.\"},\"removeMemberAddress(address)\":{\"notice\":\"Method for removing team members\"},\"setFee(uint256)\":{\"notice\":\"Method setting and Updating fee\"},\"setLoyaltyPercentage(uint256)\":{\"notice\":\"Method setting and Updating LoyaltyPercenrage\"},\"setTaxCollector(address)\":{\"notice\":\"Method for adding _taxCollector\"},\"transferingTokensOutside(address,uint256)\":{\"notice\":\"This function deducts tokens when transferring outside.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Main.sol\":\"Main\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"src/Fee.sol\":{\"keccak256\":\"0x6bf980ab5f4328bf56430c97d5f4a657749cd56613ae4bc6a0fe708d98fefe1d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://d8aa3723b28acd8a8b9d9b507c8bccf26e6b6b971a1af0246e94eed46dd99251\",\"dweb:/ipfs/QmPBSNXgor5kcT74unPhAVfHT9VKRgX9ThRSKArkLP5eGh\"]},\"src/Loyalty.sol\":{\"keccak256\":\"0xe246dda169790f41572326e283fba938fe0f9a7a561875068989ee78332f3492\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://963b47877a98a681f966636939b954533aa6db75e2fd3d9f21ad4afe69b9c2d8\",\"dweb:/ipfs/Qme4ANjfFQmGCqBnLnn1zZQUFf9sSYiwoHWR2SkfCMSqbf\"]},\"src/Main.sol\":{\"keccak256\":\"0xb9f01c4699b443e1e275227fbdf6deba02682112421a8e6530fede5964c5ecac\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f0bebea72296e05403a895c2345dad2f841146f26225f0997152daa698a9c756\",\"dweb:/ipfs/QmRqMyrmzEYpPbX23aWvjYotUKxaUvqvWQehqNv3ua6wvx\"]},\"src/PhoneBotToken.sol\":{\"keccak256\":\"0xab450acb8a694554515f8aaadbe17c621dc00554997e13a8b2e13526a0e9a966\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22223981ff990d3ea0c0690c87c159006a207653514b30732164758e7a336f7c\",\"dweb:/ipfs/QmR3TseNYHmaaqmq3EiTVmQn8kfG1G8v5KhsmfJtjfzmVD\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.14+commit.80d49f37"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "AddressAndAmountLengthInvalid"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyAdded"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotBeAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotSendToAddressZero"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NotEnoughBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "cannotBeContract"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "valueCannotBeZero"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "loyaltyPercentageBefore",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "loyaltyPercentageAfter",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LoyaltyUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokenRewarded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TokensBurned",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "feeBefore",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "feeAfter",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "feeUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_member",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addTeamAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_addresses",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "_amounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "batchMinting"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnFrom"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burnOnPurchase"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_team",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getIsTeamMember",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoyaltyPercentage",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getTaxCollectorAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getfee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "lockTIme",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_member",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeMemberAddress"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fee",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFee"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_loyaltyPercentage",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLoyaltyPercentage"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_taxCollector",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setTaxCollector"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "amount",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferingTokensOutside"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addTeamAddress(address)": {
            "params": {
              "_member": "Address of team member"
            }
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "batchMinting(address[],uint256[])": {
            "params": {
              "_addresses": "array of addresses to which the amount will go",
              "_amounts": "array of amounts which will be awarded"
            }
          },
          "burn(uint256)": {
            "details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
          },
          "burnFrom(address,uint256)": {
            "details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "removeMemberAddress(address)": {
            "params": {
              "_member": "Address of team member"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setFee(uint256)": {
            "params": {
              "_fee": "new listing fee"
            }
          },
          "setLoyaltyPercentage(uint256)": {
            "params": {
              "_loyaltyPercentage": "new listing Percentage in BIPS"
            }
          },
          "setTaxCollector(address)": {
            "params": {
              "_taxCollector": "Address of treasy where fee will be collected"
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "transferingTokensOutside(address,uint256)": {
            "params": {
              "_amount": "The number of tokens to be transfered",
              "_to": "Address that they are sending to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addTeamAddress(address)": {
            "notice": "Method for adding team members"
          },
          "batchMinting(address[],uint256[])": {
            "notice": "Method for Rewarding to all winners."
          },
          "removeMemberAddress(address)": {
            "notice": "Method for removing team members"
          },
          "setFee(uint256)": {
            "notice": "Method setting and Updating fee"
          },
          "setLoyaltyPercentage(uint256)": {
            "notice": "Method setting and Updating LoyaltyPercenrage"
          },
          "setTaxCollector(address)": {
            "notice": "Method for adding _taxCollector"
          },
          "transferingTokensOutside(address,uint256)": {
            "notice": "This function deducts tokens when transferring outside."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/Main.sol": "Main"
      },
      "libraries": {}
    },
    "sources": {
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "keccak256": "0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b",
        "urls": [
          "bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f",
          "dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "src/Fee.sol": {
        "keccak256": "0x6bf980ab5f4328bf56430c97d5f4a657749cd56613ae4bc6a0fe708d98fefe1d",
        "urls": [
          "bzz-raw://d8aa3723b28acd8a8b9d9b507c8bccf26e6b6b971a1af0246e94eed46dd99251",
          "dweb:/ipfs/QmPBSNXgor5kcT74unPhAVfHT9VKRgX9ThRSKArkLP5eGh"
        ],
        "license": "UNLICENSED"
      },
      "src/Loyalty.sol": {
        "keccak256": "0xe246dda169790f41572326e283fba938fe0f9a7a561875068989ee78332f3492",
        "urls": [
          "bzz-raw://963b47877a98a681f966636939b954533aa6db75e2fd3d9f21ad4afe69b9c2d8",
          "dweb:/ipfs/Qme4ANjfFQmGCqBnLnn1zZQUFf9sSYiwoHWR2SkfCMSqbf"
        ],
        "license": "UNLICENSED"
      },
      "src/Main.sol": {
        "keccak256": "0xb9f01c4699b443e1e275227fbdf6deba02682112421a8e6530fede5964c5ecac",
        "urls": [
          "bzz-raw://f0bebea72296e05403a895c2345dad2f841146f26225f0997152daa698a9c756",
          "dweb:/ipfs/QmRqMyrmzEYpPbX23aWvjYotUKxaUvqvWQehqNv3ua6wvx"
        ],
        "license": "UNLICENSED"
      },
      "src/PhoneBotToken.sol": {
        "keccak256": "0xab450acb8a694554515f8aaadbe17c621dc00554997e13a8b2e13526a0e9a966",
        "urls": [
          "bzz-raw://22223981ff990d3ea0c0690c87c159006a207653514b30732164758e7a336f7c",
          "dweb:/ipfs/QmR3TseNYHmaaqmq3EiTVmQn8kfG1G8v5KhsmfJtjfzmVD"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/Main.sol",
    "id": 24755,
    "exportedSymbols": {
      "Context": [
        24202
      ],
      "Counters": [
        24276
      ],
      "ERC20": [
        24033
      ],
      "ERC20Burnable": [
        24155
      ],
      "Fee": [
        24388
      ],
      "IERC20": [
        24111
      ],
      "IERC20Metadata": [
        24180
      ],
      "Loyalty": [
        24446
      ],
      "Main": [
        24754
      ],
      "Ownable": [
        23339
      ],
      "Pausable": [
        23447
      ],
      "PhoneBotToken": [
        24893
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:4029:18",
    "nodes": [
      {
        "id": 24448,
        "nodeType": "PragmaDirective",
        "src": "39:23:18",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 24449,
        "nodeType": "ImportDirective",
        "src": "64:68:18",
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Counters.sol",
        "file": "../node_modules/@openzeppelin/contracts/utils/Counters.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24755,
        "sourceUnit": 24277,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24450,
        "nodeType": "ImportDirective",
        "src": "133:23:18",
        "absolutePath": "src/Loyalty.sol",
        "file": "./Loyalty.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24755,
        "sourceUnit": 24447,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24451,
        "nodeType": "ImportDirective",
        "src": "157:19:18",
        "absolutePath": "src/Fee.sol",
        "file": "./Fee.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24755,
        "sourceUnit": 24389,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24452,
        "nodeType": "ImportDirective",
        "src": "177:29:18",
        "absolutePath": "src/PhoneBotToken.sol",
        "file": "./PhoneBotToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 24755,
        "sourceUnit": 24894,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 24754,
        "nodeType": "ContractDefinition",
        "src": "261:3806:18",
        "nodes": [
          {
            "id": 24462,
            "nodeType": "UsingForDirective",
            "src": "312:36:18",
            "global": false,
            "libraryName": {
              "id": 24459,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24276,
              "src": "318:8:18"
            },
            "typeName": {
              "id": 24461,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 24460,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24208,
                "src": "331:16:18"
              },
              "referencedDeclaration": 24208,
              "src": "331:16:18",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$24208_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "id": 24464,
            "nodeType": "VariableDeclaration",
            "src": "354:23:18",
            "constant": false,
            "functionSelector": "ead7a1dc",
            "mutability": "mutable",
            "name": "lockTIme",
            "nameLocation": "369:8:18",
            "scope": 24754,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24463,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "354:7:18",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 24466,
            "nodeType": "VariableDeclaration",
            "src": "383:29:18",
            "constant": false,
            "mutability": "mutable",
            "name": "taxCollector",
            "nameLocation": "400:12:18",
            "scope": 24754,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 24465,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "383:7:18",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 24468,
            "nodeType": "ErrorDefinition",
            "src": "419:21:18",
            "errorSelector": "f411c327",
            "name": "AlreadyAdded",
            "nameLocation": "425:12:18",
            "parameters": {
              "id": 24467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "437:2:18"
            }
          },
          {
            "id": 24470,
            "nodeType": "ErrorDefinition",
            "src": "445:38:18",
            "errorSelector": "60bac118",
            "name": "AddressAndAmountLengthInvalid",
            "nameLocation": "451:29:18",
            "parameters": {
              "id": 24469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "480:2:18"
            }
          },
          {
            "id": 24472,
            "nodeType": "ErrorDefinition",
            "src": "488:25:18",
            "errorSelector": "ad3a8b9e",
            "name": "NotEnoughBalance",
            "nameLocation": "494:16:18",
            "parameters": {
              "id": 24471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "510:2:18"
            }
          },
          {
            "id": 24474,
            "nodeType": "ErrorDefinition",
            "src": "518:28:18",
            "errorSelector": "09f98453",
            "name": "CannotBeAddressZero",
            "nameLocation": "524:19:18",
            "parameters": {
              "id": 24473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "543:2:18"
            }
          },
          {
            "id": 24476,
            "nodeType": "ErrorDefinition",
            "src": "551:32:18",
            "errorSelector": "682bfac2",
            "name": "CannotSendToAddressZero",
            "nameLocation": "557:23:18",
            "parameters": {
              "id": 24475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "580:2:18"
            }
          },
          {
            "id": 24478,
            "nodeType": "ErrorDefinition",
            "src": "588:26:18",
            "errorSelector": "45185f9c",
            "name": "valueCannotBeZero",
            "nameLocation": "594:17:18",
            "parameters": {
              "id": 24477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "611:2:18"
            }
          },
          {
            "id": 24480,
            "nodeType": "ErrorDefinition",
            "src": "619:25:18",
            "errorSelector": "2111dc47",
            "name": "cannotBeContract",
            "nameLocation": "625:16:18",
            "parameters": {
              "id": 24479,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "641:2:18"
            }
          },
          {
            "id": 24486,
            "nodeType": "EventDefinition",
            "src": "650:48:18",
            "anonymous": false,
            "eventSelector": "e6b392a485300aed5d0afd949a6e7bbb13d3dc1a15efa0a0c1630b48ae54ca46",
            "name": "TokenRewarded",
            "nameLocation": "656:13:18",
            "parameters": {
              "id": 24485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24482,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "678:2:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 24486,
                  "src": "670:10:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24481,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "670:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24484,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "690:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 24486,
                  "src": "682:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24483,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "669:28:18"
            }
          },
          {
            "id": 24492,
            "nodeType": "EventDefinition",
            "src": "704:49:18",
            "anonymous": false,
            "eventSelector": "63706707d038997d2210eb026bb1339397deab463921538a81bb98e69ee54ca8",
            "name": "TokensBurned",
            "nameLocation": "710:12:18",
            "parameters": {
              "id": 24491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24488,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "731:6:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 24492,
                  "src": "723:14:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24487,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "723:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24490,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "747:4:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 24492,
                  "src": "739:12:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24489,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "739:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "722:30:18"
            }
          },
          {
            "id": 24509,
            "nodeType": "FunctionDefinition",
            "src": "888:186:18",
            "body": {
              "id": 24508,
              "nodeType": "Block",
              "src": "952:122:18",
              "statements": [
                {
                  "assignments": [
                    24501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24501,
                      "mutability": "mutable",
                      "name": "size",
                      "nameLocation": "970:4:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 24508,
                      "src": "962:12:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24500,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "962:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24502,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "962:12:18"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "993:50:18",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1007:26:18",
                        "value": {
                          "arguments": [
                            {
                              "name": "_addr",
                              "nodeType": "YulIdentifier",
                              "src": "1027:5:18"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "1015:11:18"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1015:18:18"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "1007:4:18"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 24495,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1027:5:18",
                      "valueSize": 1
                    },
                    {
                      "declaration": 24501,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1007:4:18",
                      "valueSize": 1
                    }
                  ],
                  "id": 24503,
                  "nodeType": "InlineAssembly",
                  "src": "984:59:18"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24506,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24504,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24501,
                      "src": "1059:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 24505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1066:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1059:8:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 24499,
                  "id": 24507,
                  "nodeType": "Return",
                  "src": "1052:15:18"
                }
              ]
            },
            "documentation": {
              "id": 24493,
              "nodeType": "StructuredDocumentation",
              "src": "759:124:18",
              "text": " @notice Method for security to ensure that address is not of a contract\n @param _addr input address"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nameLocation": "897:10:18",
            "parameters": {
              "id": 24496,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24495,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "916:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 24509,
                  "src": "908:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24494,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "908:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "907:15:18"
            },
            "returnParameters": {
              "id": 24499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24498,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24509,
                  "src": "946:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24497,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "946:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "945:6:18"
            },
            "scope": 24754,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 24532,
            "nodeType": "FunctionDefinition",
            "src": "1188:195:18",
            "body": {
              "id": 24531,
              "nodeType": "Block",
              "src": "1248:135:18",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 24517,
                      "name": "teamAccessRecord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24772,
                      "src": "1262:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 24519,
                    "indexExpression": {
                      "id": 24518,
                      "name": "_member",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24512,
                      "src": "1279:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1262:25:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24524,
                  "nodeType": "IfStatement",
                  "src": "1258:77:18",
                  "trueBody": {
                    "id": 24523,
                    "nodeType": "Block",
                    "src": "1289:46:18",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24520,
                            "name": "AlreadyAdded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24468,
                            "src": "1310:12:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1310:14:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24522,
                        "nodeType": "RevertStatement",
                        "src": "1303:21:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 24529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 24525,
                        "name": "teamAccessRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24772,
                        "src": "1344:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 24527,
                      "indexExpression": {
                        "id": 24526,
                        "name": "_member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24512,
                        "src": "1361:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1344:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 24528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1372:4:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1344:32:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24530,
                  "nodeType": "ExpressionStatement",
                  "src": "1344:32:18"
                }
              ]
            },
            "documentation": {
              "id": 24510,
              "nodeType": "StructuredDocumentation",
              "src": "1081:102:18",
              "text": " @notice Method for adding team members\n @param _member Address of team member"
            },
            "functionSelector": "765dd7a0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 24515,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24514,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23258,
                  "src": "1238:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "1238:9:18"
              }
            ],
            "name": "addTeamAddress",
            "nameLocation": "1197:14:18",
            "parameters": {
              "id": 24513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24512,
                  "mutability": "mutable",
                  "name": "_member",
                  "nameLocation": "1220:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 24532,
                  "src": "1212:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1212:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1211:17:18"
            },
            "returnParameters": {
              "id": 24516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1248:0:18"
            },
            "scope": 24754,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24553,
            "nodeType": "FunctionDefinition",
            "src": "1526:202:18",
            "body": {
              "id": 24552,
              "nodeType": "Block",
              "src": "1593:135:18",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 24541,
                        "name": "_taxCollector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24535,
                        "src": "1618:13:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24540,
                      "name": "isContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24509,
                      "src": "1607:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 24542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1607:25:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24547,
                  "nodeType": "IfStatement",
                  "src": "1603:81:18",
                  "trueBody": {
                    "id": 24546,
                    "nodeType": "Block",
                    "src": "1634:50:18",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24543,
                            "name": "cannotBeContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24480,
                            "src": "1655:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1655:18:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24545,
                        "nodeType": "RevertStatement",
                        "src": "1648:25:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 24550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24548,
                      "name": "taxCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24466,
                      "src": "1693:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 24549,
                      "name": "_taxCollector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24535,
                      "src": "1708:13:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1693:28:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 24551,
                  "nodeType": "ExpressionStatement",
                  "src": "1693:28:18"
                }
              ]
            },
            "documentation": {
              "id": 24533,
              "nodeType": "StructuredDocumentation",
              "src": "1389:132:18",
              "text": " @notice Method for adding _taxCollector\n @param _taxCollector Address of treasy where fee will be collected"
            },
            "functionSelector": "08695b41",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 24538,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24537,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23258,
                  "src": "1583:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "1583:9:18"
              }
            ],
            "name": "setTaxCollector",
            "nameLocation": "1535:15:18",
            "parameters": {
              "id": 24536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24535,
                  "mutability": "mutable",
                  "name": "_taxCollector",
                  "nameLocation": "1559:13:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 24553,
                  "src": "1551:21:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24534,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1551:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1550:23:18"
            },
            "returnParameters": {
              "id": 24539,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1593:0:18"
            },
            "scope": 24754,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24573,
            "nodeType": "FunctionDefinition",
            "src": "1843:157:18",
            "body": {
              "id": 24572,
              "nodeType": "Block",
              "src": "1908:92:18",
              "statements": [
                {
                  "expression": {
                    "id": 24565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 24561,
                        "name": "teamAccessRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24772,
                        "src": "1918:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 24563,
                      "indexExpression": {
                        "id": 24562,
                        "name": "_member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24556,
                        "src": "1935:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1918:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 24564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1946:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1918:33:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24566,
                  "nodeType": "ExpressionStatement",
                  "src": "1918:33:18"
                },
                {
                  "expression": {
                    "id": 24570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1961:32:18",
                    "subExpression": {
                      "baseExpression": {
                        "id": 24567,
                        "name": "teamAccessRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24772,
                        "src": "1968:16:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 24569,
                      "indexExpression": {
                        "id": 24568,
                        "name": "_member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24556,
                        "src": "1985:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1968:25:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24571,
                  "nodeType": "ExpressionStatement",
                  "src": "1961:32:18"
                }
              ]
            },
            "documentation": {
              "id": 24554,
              "nodeType": "StructuredDocumentation",
              "src": "1734:104:18",
              "text": " @notice Method for removing team members\n @param _member Address of team member"
            },
            "functionSelector": "d7992d4d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 24559,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24558,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23258,
                  "src": "1898:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "1898:9:18"
              }
            ],
            "name": "removeMemberAddress",
            "nameLocation": "1852:19:18",
            "parameters": {
              "id": 24557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24556,
                  "mutability": "mutable",
                  "name": "_member",
                  "nameLocation": "1880:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 24573,
                  "src": "1872:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1872:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1871:17:18"
            },
            "returnParameters": {
              "id": 24560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1908:0:18"
            },
            "scope": 24754,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24642,
            "nodeType": "FunctionDefinition",
            "src": "2209:538:18",
            "body": {
              "id": 24641,
              "nodeType": "Block",
              "src": "2341:406:18",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 24587,
                        "name": "_addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24577,
                        "src": "2355:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2355:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 24589,
                        "name": "_amounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24580,
                        "src": "2376:8:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 24590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2376:15:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2355:36:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24596,
                  "nodeType": "IfStatement",
                  "src": "2351:105:18",
                  "trueBody": {
                    "id": 24595,
                    "nodeType": "Block",
                    "src": "2393:63:18",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24592,
                            "name": "AddressAndAmountLengthInvalid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24470,
                            "src": "2414:29:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2414:31:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24594,
                        "nodeType": "RevertStatement",
                        "src": "2407:38:18"
                      }
                    ]
                  }
                },
                {
                  "body": {
                    "id": 24639,
                    "nodeType": "Block",
                    "src": "2514:227:18",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 24615,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 24608,
                              "name": "_addresses",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24577,
                              "src": "2532:10:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 24610,
                            "indexExpression": {
                              "id": 24609,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24598,
                              "src": "2543:1:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2532:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 24613,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2557:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 24612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2549:7:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24611,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2549:7:18",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2549:10:18",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2532:27:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 24620,
                        "nodeType": "IfStatement",
                        "src": "2528:94:18",
                        "trueBody": {
                          "id": 24619,
                          "nodeType": "Block",
                          "src": "2561:61:18",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 24616,
                                  "name": "CannotBeAddressZero",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24474,
                                  "src": "2586:19:18",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 24617,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2586:21:18",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 24618,
                              "nodeType": "RevertStatement",
                              "src": "2579:28:18"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 24622,
                                "name": "_addresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24577,
                                "src": "2642:10:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 24624,
                              "indexExpression": {
                                "id": 24623,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24598,
                                "src": "2653:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2642:13:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 24625,
                                "name": "_amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24580,
                                "src": "2657:8:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 24627,
                              "indexExpression": {
                                "id": 24626,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24598,
                                "src": "2666:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2657:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 24621,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23850,
                            "src": "2636:5:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 24628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2636:33:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24629,
                        "nodeType": "ExpressionStatement",
                        "src": "2636:33:18"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 24631,
                                "name": "_addresses",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24577,
                                "src": "2703:10:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 24633,
                              "indexExpression": {
                                "id": 24632,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24598,
                                "src": "2714:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2703:13:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 24634,
                                "name": "_amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24580,
                                "src": "2718:8:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              "id": 24636,
                              "indexExpression": {
                                "id": 24635,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24598,
                                "src": "2727:1:18",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2718:11:18",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 24630,
                            "name": "TokenRewarded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24486,
                            "src": "2689:13:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 24637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2689:41:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24638,
                        "nodeType": "EmitStatement",
                        "src": "2684:46:18"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24601,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24598,
                      "src": "2486:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 24602,
                        "name": "_addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24577,
                        "src": "2490:10:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 24603,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2490:17:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2486:21:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24640,
                  "initializationExpression": {
                    "assignments": [
                      24598
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24598,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2479:1:18",
                        "nodeType": "VariableDeclaration",
                        "scope": 24640,
                        "src": "2471:9:18",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24597,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2471:7:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24600,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2483:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2471:13:18"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24606,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2509:3:18",
                      "subExpression": {
                        "id": 24605,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24598,
                        "src": "2509:1:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24607,
                    "nodeType": "ExpressionStatement",
                    "src": "2509:3:18"
                  },
                  "nodeType": "ForStatement",
                  "src": "2466:275:18"
                }
              ]
            },
            "documentation": {
              "id": 24574,
              "nodeType": "StructuredDocumentation",
              "src": "2006:197:18",
              "text": " @notice Method for Rewarding to all winners.\n @param _addresses array of addresses to which the amount will go\n @param _amounts array of amounts which will be awarded"
            },
            "functionSelector": "36b59bc4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 24583,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24582,
                  "name": "onlyTeam",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24784,
                  "src": "2318:8:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "2318:8:18"
              },
              {
                "id": 24585,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24584,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23374,
                  "src": "2327:13:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "2327:13:18"
              }
            ],
            "name": "batchMinting",
            "nameLocation": "2218:12:18",
            "parameters": {
              "id": 24581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24577,
                  "mutability": "mutable",
                  "name": "_addresses",
                  "nameLocation": "2257:10:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 24642,
                  "src": "2240:27:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24575,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2240:7:18",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 24576,
                    "nodeType": "ArrayTypeName",
                    "src": "2240:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24580,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nameLocation": "2294:8:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 24642,
                  "src": "2277:25:18",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 24578,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2277:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24579,
                    "nodeType": "ArrayTypeName",
                    "src": "2277:9:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2230:78:18"
            },
            "returnParameters": {
              "id": 24586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2341:0:18"
            },
            "scope": 24754,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24674,
            "nodeType": "FunctionDefinition",
            "src": "2836:291:18",
            "body": {
              "id": 24673,
              "nodeType": "Block",
              "src": "2952:175:18",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 24654,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24646,
                          "src": "2976:5:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 24653,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23546,
                        "src": "2966:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view returns (uint256)"
                        }
                      },
                      "id": 24655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2966:16:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 24656,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24644,
                      "src": "2985:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2966:26:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24662,
                  "nodeType": "IfStatement",
                  "src": "2962:82:18",
                  "trueBody": {
                    "id": 24661,
                    "nodeType": "Block",
                    "src": "2994:50:18",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24658,
                            "name": "NotEnoughBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24472,
                            "src": "3015:16:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3015:18:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24660,
                        "nodeType": "RevertStatement",
                        "src": "3008:25:18"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24664,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24646,
                        "src": "3062:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24665,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24644,
                        "src": "3069:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24663,
                      "name": "burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24154,
                      "src": "3053:8:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 24666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3053:24:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24667,
                  "nodeType": "ExpressionStatement",
                  "src": "3053:24:18"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 24669,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24644,
                        "src": "3105:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 24670,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24646,
                        "src": "3114:5:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 24668,
                      "name": "TokensBurned",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24492,
                      "src": "3092:12:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 24671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3092:28:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24672,
                  "nodeType": "EmitStatement",
                  "src": "3087:33:18"
                }
              ]
            },
            "functionSelector": "1b290369",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 24649,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24648,
                  "name": "onlyTeam",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 24784,
                  "src": "2917:8:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "2917:8:18"
              },
              {
                "id": 24651,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24650,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23374,
                  "src": "2934:13:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "2934:13:18"
              }
            ],
            "name": "burnOnPurchase",
            "nameLocation": "2845:14:18",
            "parameters": {
              "id": 24647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24644,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2868:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 24674,
                  "src": "2860:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24643,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2860:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24646,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "2885:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 24674,
                  "src": "2877:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2877:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2859:32:18"
            },
            "returnParameters": {
              "id": 24652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2952:0:18"
            },
            "scope": 24754,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24731,
            "nodeType": "FunctionDefinition",
            "src": "3332:497:18",
            "body": {
              "id": 24730,
              "nodeType": "Block",
              "src": "3405:424:18",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 24687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24682,
                      "name": "_to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24677,
                      "src": "3419:3:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 24685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3434:1:18",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 24684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3426:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 24683,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3426:7:18",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 24686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3426:10:18",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3419:17:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24692,
                  "nodeType": "IfStatement",
                  "src": "3415:80:18",
                  "trueBody": {
                    "id": 24691,
                    "nodeType": "Block",
                    "src": "3438:57:18",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24688,
                            "name": "CannotSendToAddressZero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24476,
                            "src": "3459:23:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3459:25:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24690,
                        "nodeType": "RevertStatement",
                        "src": "3452:32:18"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24693,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24679,
                      "src": "3508:7:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 24694,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3519:1:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3508:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24700,
                  "nodeType": "IfStatement",
                  "src": "3504:69:18",
                  "trueBody": {
                    "id": 24699,
                    "nodeType": "Block",
                    "src": "3522:51:18",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24696,
                            "name": "valueCannotBeZero",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24478,
                            "src": "3543:17:18",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 24697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3543:19:18",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24698,
                        "nodeType": "RevertStatement",
                        "src": "3536:26:18"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    24702
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24702,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "3590:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 24730,
                      "src": "3582:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24701,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3582:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24706,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24704,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24679,
                        "src": "3626:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24703,
                      "name": "calculateAfterfeeDeduction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24362,
                      "src": "3599:26:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 24705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3599:35:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3582:52:18"
                },
                {
                  "assignments": [
                    24708
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24708,
                      "mutability": "mutable",
                      "name": "FeeAmount",
                      "nameLocation": "3649:9:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 24730,
                      "src": "3644:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24707,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3644:4:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24712,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 24710,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24679,
                        "src": "3683:7:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24709,
                      "name": "calculateFeeForAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24379,
                      "src": "3661:21:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 24711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3661:30:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3644:47:18"
                },
                {
                  "assignments": [
                    24714
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24714,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "3709:6:18",
                      "nodeType": "VariableDeclaration",
                      "scope": 24730,
                      "src": "3701:14:18",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24713,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3701:7:18",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24717,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 24715,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24192,
                      "src": "3718:10:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 24716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3718:12:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3701:29:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24719,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24714,
                        "src": "3750:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24720,
                        "name": "taxCollector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24466,
                        "src": "3758:12:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24721,
                        "name": "FeeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24708,
                        "src": "3772:9:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24718,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23794,
                      "src": "3740:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 24722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3740:42:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24723,
                  "nodeType": "ExpressionStatement",
                  "src": "3740:42:18"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24725,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24714,
                        "src": "3802:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24726,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24677,
                        "src": "3810:3:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 24727,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24702,
                        "src": "3815:6:18",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 24724,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23794,
                      "src": "3792:9:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 24728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3792:30:18",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24729,
                  "nodeType": "ExpressionStatement",
                  "src": "3792:30:18"
                }
              ]
            },
            "documentation": {
              "id": 24675,
              "nodeType": "StructuredDocumentation",
              "src": "3133:194:18",
              "text": " @notice This function deducts tokens when transferring outside.\n @param _to Address that they are sending to.\n @param _amount The number of tokens to be transfered"
            },
            "functionSelector": "b54dd710",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferingTokensOutside",
            "nameLocation": "3341:24:18",
            "parameters": {
              "id": 24680,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24677,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3374:3:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 24731,
                  "src": "3366:11:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3366:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24679,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3387:7:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 24731,
                  "src": "3379:15:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 24678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3379:7:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3365:30:18"
            },
            "returnParameters": {
              "id": 24681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3405:0:18"
            },
            "scope": 24754,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 24743,
            "nodeType": "FunctionDefinition",
            "src": "3835:114:18",
            "body": {
              "id": 24742,
              "nodeType": "Block",
              "src": "3902:47:18",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 24738,
                      "name": "teamAccessRecord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24772,
                      "src": "3919:16:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 24740,
                    "indexExpression": {
                      "id": 24739,
                      "name": "_team",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24733,
                      "src": "3936:5:18",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3919:23:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 24737,
                  "id": 24741,
                  "nodeType": "Return",
                  "src": "3912:30:18"
                }
              ]
            },
            "functionSelector": "c79f474b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIsTeamMember",
            "nameLocation": "3844:15:18",
            "parameters": {
              "id": 24734,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24733,
                  "mutability": "mutable",
                  "name": "_team",
                  "nameLocation": "3868:5:18",
                  "nodeType": "VariableDeclaration",
                  "scope": 24743,
                  "src": "3860:13:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24732,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3860:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3859:15:18"
            },
            "returnParameters": {
              "id": 24737,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24736,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24743,
                  "src": "3896:4:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 24735,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3896:4:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3895:6:18"
            },
            "scope": 24754,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 24753,
            "nodeType": "FunctionDefinition",
            "src": "3955:110:18",
            "body": {
              "id": 24752,
              "nodeType": "Block",
              "src": "4029:36:18",
              "statements": [
                {
                  "expression": {
                    "id": 24750,
                    "name": "taxCollector",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 24466,
                    "src": "4046:12:18",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 24749,
                  "id": 24751,
                  "nodeType": "Return",
                  "src": "4039:19:18"
                }
              ]
            },
            "functionSelector": "7f1bee23",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 24746,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24745,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23258,
                  "src": "4003:9:18"
                },
                "nodeType": "ModifierInvocation",
                "src": "4003:9:18"
              }
            ],
            "name": "getTaxCollectorAddress",
            "nameLocation": "3964:22:18",
            "parameters": {
              "id": 24744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3986:2:18"
            },
            "returnParameters": {
              "id": 24749,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 24748,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 24753,
                  "src": "4021:7:18",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24747,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4021:7:18",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4020:9:18"
            },
            "scope": 24754,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 24453,
              "name": "Fee",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24388,
              "src": "278:3:18"
            },
            "id": 24454,
            "nodeType": "InheritanceSpecifier",
            "src": "278:3:18"
          },
          {
            "baseName": {
              "id": 24455,
              "name": "Loyalty",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24446,
              "src": "283:7:18"
            },
            "id": 24456,
            "nodeType": "InheritanceSpecifier",
            "src": "283:7:18"
          },
          {
            "baseName": {
              "id": 24457,
              "name": "PhoneBotToken",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 24893,
              "src": "292:13:18"
            },
            "id": 24458,
            "nodeType": "InheritanceSpecifier",
            "src": "292:13:18"
          }
        ],
        "canonicalName": "Main",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          24754,
          24893,
          24446,
          24388,
          23339,
          23447,
          24155,
          24033,
          24180,
          24111,
          24202
        ],
        "name": "Main",
        "nameLocation": "270:4:18",
        "scope": 24755,
        "usedErrors": [
          24468,
          24470,
          24472,
          24474,
          24476,
          24478,
          24480
        ]
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 18
}